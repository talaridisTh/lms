/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 1);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/js/dashboard/main.js":
/*!****************************************!*\
  !*** ./resources/js/dashboard/main.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nElement.prototype.findParent = function (loops) {\n  var parent = this;\n\n  for (var i = 0; i < loops; i++) {\n    parent = parent.parentElement;\n  }\n\n  return parent;\n}, false;\nElement.prototype.appendBefore = function (element) {\n  element.parentNode.insertBefore(this, element);\n}, false;\nElement.prototype.appendAfter = function (element) {\n  element.parentNode.insertBefore(this, element.nextSibling);\n}, false; //!##########################################\n//!\t\t\t\tGlobal Variables\t\t\t#\n//!##########################################\n\nvar baseUrl = window.location.origin;\nvar timer = 0; //!##########################################\n//!\t\t\t\tConfigurations\t\t\t\t#\n//!##########################################\n//!ALERT\n//!============================================================\n\nfunction toastAlert(icon, message) {\n  Swal.fire({\n    toast: 'true',\n    position: 'top-end',\n    icon: icon,\n    title: message,\n    showConfirmButton: false,\n    timer: 3000,\n    timerProgressBar: true\n  });\n}\n\nfunction toastAlertDelete(text) {\n  var icon = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"warning\";\n  return Swal.fire({\n    title: 'Είστε σίγουρος;',\n    text: text,\n    icon: icon,\n    showCancelButton: true,\n    confirmButtonText: 'Ναί, διαγραφή!',\n    cancelButtonText: 'Άκυρο'\n  });\n} //!CONFIG\n//!============================================================\n\n\nvar redactorConfig = {\n  buttons: ['html', 'undo', 'redo', 'format', 'bold', 'underline', 'italic', 'deleted', 'sup', 'sub', 'lists', 'file', 'link', 'image'],\n  style: false,\n  plugins: ['alignment'],\n  minHeight: '150px'\n};\nvar datePickerConfig = {\n  ranges: {\n    'Today': [moment(), moment()],\n    'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],\n    'Last 7 Days': [moment().subtract(6, 'days'), moment()],\n    'Last 30 Days': [moment().subtract(29, 'days'), moment()],\n    'This Month': [moment().startOf('month'), moment().endOf('month')],\n    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')],\n    'This Year': [moment().startOf('year'), moment().endOf('year')],\n    'Last Year': [moment().subtract(1, 'year').startOf('year'), moment().subtract(1, 'year').endOf('year')]\n  },\n  alwaysShowCalendars: true,\n  showCustomRangeLabel: false,\n  drops: \"auto\",\n  autoUpdateInput: false,\n  opens: \"center\",\n  locale: {\n    format: \"DD/MM/YYYY\"\n  }\n};\nvar tableLocale = {\n  emptyTable: \"Δεν υπάρχουν εγγραφές\",\n  info: \"_START_ έως _END_ απο τα _TOTAL_ αποτελέσματα\",\n  infoEmpty: \"0 απο 0 τα 0 αποτελέσματα\",\n  lengthMenu: \"_MENU_\",\n  loadingRecords: \"Φόρτωση ...\",\n  processing: \"Επεξεργασία ...\",\n  search: \"\",\n  searchPlaceholder: \"Αναζήτηση... \",\n  zeroRecords: \"Δεν βρέθηκαν αποτελέσματα\",\n  paginate: {\n    previous: \"<i class='mdi mdi-chevron-left'>\",\n    next: \"<i class='mdi mdi-chevron-right'>\"\n  }\n}; //!GLOBAL FUNCTION\n//!============================================================\n\nfunction mainCheckboxSwitcher(main, minor) {\n  var bulkBtn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var status = true;\n  var counter = 0;\n  main.checked = true;\n\n  for (var i = 0; i < minor.length; i++) {\n    if (!minor[i].checked) {\n      minor[i].findParent(3).classList.remove(\"bg-selected\");\n      main.checked = false;\n    } else {\n      minor[i].findParent(3).classList.add(\"bg-selected\");\n      counter++;\n      status = false;\n    }\n  }\n\n  if (bulkBtn) {\n    bulkModifier(bulkBtn, status, counter);\n  }\n}\n\nfunction minorCheckboxSwitcher(main, minor) {\n  var bulkBtn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var counter = 0;\n  var status = true;\n\n  if (main.checked && minor.length > 0) {\n    counter = minor.length;\n    status = false;\n\n    for (var i = 0; i < minor.length; i++) {\n      minor[i].checked = true;\n      minor[i].findParent(3).classList.add(\"bg-selected\");\n    }\n  } else {\n    for (var i = 0; i < minor.length; i++) {\n      minor[i].checked = false;\n      minor[i].findParent(3).classList.remove(\"bg-selected\");\n    }\n  }\n\n  if (bulkBtn) {\n    bulkModifier(bulkBtn, status, counter);\n  }\n}\n\nfunction bulkModifier(bulkBtn, status, sum) {\n  var text = bulkBtn.dataset.text ? bulkBtn.dataset.text : \"Επιλογές\";\n  var enabledColor = bulkBtn.dataset.enabledColor ? bulkBtn.dataset.enabledColor : \"btn-warning\";\n  var disabledColor = bulkBtn.dataset.disabledColor ? bulkBtn.dataset.disabledColor : \"btn-secondary\";\n\n  if (status) {\n    bulkBtn.classList.add(disabledColor);\n    bulkBtn.classList.remove(enabledColor);\n    bulkBtn.textContent = \"\".concat(text, \" (0)  \");\n    bulkBtn.disabled = true;\n  } else {\n    bulkBtn.classList.add(enabledColor);\n    bulkBtn.classList.remove(disabledColor);\n    bulkBtn.textContent = \"\".concat(text, \"  (\").concat(sum, \")  \");\n    bulkBtn.disabled = false;\n  }\n}\n\nfunction filterStyle(input, value) {\n  if (value == \"\") {\n    input.classList.remove(\"select2-selected\");\n  } else {\n    input.classList.add(\"select2-selected\");\n  }\n}\n\nvar filterButton = function filterButton(attr, column, table, tableId) {\n  $(attr).detach().appendTo(tableId);\n  $(attr).on('change', function () {\n    table.columns(column).search(this.value).draw();\n  });\n};\n\nvar changeInputHidden = function changeInputHidden(attr, hiddenAttr) {\n  $(attr).change(function () {\n    if (attr == \"#activeMaterial\") {\n      this.value = $(this).prop('checked') == true ? 1 : 0;\n    }\n\n    var hiddenValue = $(hiddenAttr)[0].value = this.value;\n  });\n};\n\nfunction createStateSelect() {\n  var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var selectElm = document.createElement(\"select\");\n  selectElm.classList.add(\"ml-1\", \"select2\");\n  selectElm.id = id;\n  selectElm.innerHTML = \"\\n\\t\\t<option value=\\\"\\\">\\u038C\\u03BB\\u03B5\\u03C2 \\u03BF\\u03B9 \\u039A\\u03B1\\u03C4\\u03B1\\u03C3\\u03C4\\u03AC\\u03C3\\u03B5\\u03B9\\u03C2</option>\\n\\t\\t<option value=\\\"1\\\">\\u0395\\u03BD\\u03B5\\u03C1\\u03B3\\u03AC</option>\\n\\t\\t<option value=\\\"0\\\">\\u0391\\u03BD\\u03B5\\u03BD\\u03B5\\u03C1\\u03B3\\u03AC</option>\\n\\t\";\n  return selectElm;\n}\n\nfunction createDateElm(id) {\n  var input = document.createElement(\"input\");\n  input.classList.add(\"form-control\", \"date\", \"d-inline-block\", \"ml-1\", \"js-date-search\");\n  input.id = id;\n  input.dataset.toggle = \"date-picker\";\n  input.dataset.cancelClass = \"btn-secondary\";\n  input.style.height = \"31.96px\";\n  input.style.width = \"195px\";\n  input.placeholder = \"Επιλέξτε ημερομηνίες...\";\n  return input;\n}\n\nfunction createCourseTypeSelect() {\n  var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var selectElm = document.createElement(\"select\");\n  selectElm.classList.add(\"ml-1\", \"select2\");\n  selectElm.id = id;\n  selectElm.innerHTML = \"\\n\\t\\t<option value=\\\"\\\">\\u038C\\u03BB\\u03B5\\u03C2 \\u03BF\\u03B9 \\u0395\\u03BA\\u03B4\\u03CC\\u03C3\\u03B5\\u03B9\\u03C2</option>\\n\\t\\t<option value=\\\"Normal\\\">Normal</option>\\n\\t\\t<option value=\\\"Trial\\\">Trial</option>\\n\\t\";\n  return selectElm;\n}\n\nfunction startDate(input) {\n  var dateInput = input;\n\n  if (!dateInput || dateInput.value == \"\") {\n    return \"\";\n  }\n\n  var dateInputValue = dateInput.value.split(\" - \");\n  var firstDate = dateInputValue[0].split(\"/\").reverse().join(\"-\");\n  return firstDate;\n}\n\nfunction endDate(input) {\n  var dateInput = input;\n\n  if (!dateInput || dateInput.value == \"\") {\n    return \"\";\n  }\n\n  var dateInputValue = dateInput.value.split(\" - \");\n  var secondDate = dateInputValue[1].split(\"/\").reverse().join(\"-\");\n  return secondDate;\n}\n\nfunction resetBulk(bulkBtn, checkbox) {\n  bulkBtn.text(\"Επιλογές  (0)\");\n  bulkBtn.addClass(\"btn-secondary\");\n  bulkBtn.removeClass(\"btn-warning\");\n  bulkBtn.prop(\"disabled\", true);\n  checkbox.prop(\"checked\", false);\n}\n\nfunction resetAddButton(addBtn, checkbox) {\n  addBtn.text(\"Προσθήκη Επιλογών (0)\");\n  addBtn.addClass(\"btn-secondary\");\n  addBtn.removeClass(\"btn-primary\");\n  addBtn.prop(\"disabled\", true);\n  checkbox.prop(\"checked\", false);\n} //!##############################################\n//!\t\t\t\tMedia Library Functions\t\t\t#\n//!##############################################\n\n\nfunction paginationHandler(event) {\n  event.preventDefault();\n  var activePage = this.href.split(\"page=\")[1];\n  var search = $(\"#image-search\").val();\n  paginationRequest(activePage, search);\n}\n\nfunction searchHandler() {\n  clearTimeout(timer);\n\n  if (this.value.length < 3 || this.value == \"\") {\n    timer = setTimeout(paginationRequest, 800, 1, \"\");\n  } else {\n    timer = setTimeout(paginationRequest, 800, 1, this.value);\n  }\n}\n\nfunction imageHandler() {\n  var modal = $(\"#gallery-content\")[0];\n  var model = modal.dataset.model;\n  var modelId = modal.dataset.id;\n  var editorId = modal.dataset.editorId;\n  var type = modal.dataset.type;\n  var image = {\n    'img': {\n      url: \"\".concat(this.dataset.imageSource)\n    }\n  };\n\n  if (type == \"article\") {\n    ArticleEditor(editorId).image.insert(image);\n  } else if (type == \"redactor\") {\n    $R(editorId, 'insertion.insertHtml', \"<img src=\\\"\".concat(this.dataset.imageSource, \"\\\" alt=\\\"\").concat(this.dataset.name, \"\\\" />\"));\n  } else if (type == \"gallery\") {\n    $(\"#remove-all-images-btn\").removeClass(\"d-none\");\n    addToGallery(model, modelId, this.dataset.imageId);\n    return;\n  } else {\n    changeCoverRequest(model, modelId, this.dataset.imageSource);\n  }\n\n  $(\"#gallery-modal\").modal('hide');\n}\n\nfunction paginationRequest(activePage, search) {\n  axios.get(\"/media/images\", {\n    params: {\n      page: activePage,\n      search: search\n    }\n  }).then(function (res) {\n    var gallery = $(\"#gallery-content\")[0];\n    gallery.innerHTML = res.data;\n    var pagination = gallery.getElementsByClassName(\"js-gallery-page-btn\");\n    var addBtns = gallery.getElementsByClassName(\"js-add-image\");\n\n    for (var i = 0; i < addBtns.length; i++) {\n      addBtns[i].removeEventListener(\"click\", imageHandler);\n      addBtns[i].addEventListener(\"click\", imageHandler);\n    }\n\n    for (var _i = 0; _i < pagination.length; _i++) {\n      pagination[_i].removeEventListener(\"click\", paginationHandler);\n\n      pagination[_i].addEventListener(\"click\", paginationHandler);\n    }\n  });\n}\n\nfunction changeCoverRequest(namespace, id, url) {\n  if (namespace == \"App\\\\User\" || namespace == \"App\\\\Material\" && !id) {\n    $(\"#cover-image\")[0].src = \"\".concat(baseUrl, \"/\").concat(url);\n    $(\"#custom-file\")[0].value = \"\".concat(url);\n  } else {\n    axios.patch(\"/media/cover/replace\", {\n      namespace: namespace,\n      id: id,\n      url: url\n    }).then(function (res) {\n      var img = $(\"#cover-image\")[0];\n      var removeBtnCnt = $(\"#remove-cover-btn\").parent();\n      img.src = \"\".concat(baseUrl, \"/\").concat(url);\n      img.classList.remove(\"d-none\");\n      $(\"#change-cover-btn\").text(\"Αλλαγή\");\n      $(\"#cover-status\").addClass(\"d-none\");\n      removeBtnCnt.removeClass(\"d-none\");\n      removeBtnCnt.addClass(\"d-flex\");\n      toastAlert(\"success\", \"Το Cover άλλαξε!\");\n    })[\"catch\"](function (err) {\n      console.log(err);\n      toastAlert('error', \"Παρουσιάστηκε κάποιο πρόβλημα ...\");\n    });\n  }\n}\n\nfunction addToGallery(namespace, id, imageId) {\n  axios.post(\"/media/gallery\", {\n    namespace: namespace,\n    modelId: id,\n    ids: [imageId]\n  }).then(function (res) {\n    var gallery = $(\"#gallery-cnt\");\n    gallery.html(res.data);\n    var closeBtns = gallery.find(\".js-remove-image\");\n    closeBtns.on(\"click\", removeImageHandler);\n    toastAlert(\"success\", \"Η εικόνα προστέθηκε.\");\n    gallery.modal(\"hide\");\n    var bulk = $(\"#gallery-bulk-action-btn\");\n    var checkboxes = $(\".js-gallery-checkbox\");\n    resetGalleryBtns(bulk, checkboxes);\n  })[\"catch\"](function (err) {\n    console.log(err);\n    toastAlert('error', \"Παρουσιάστηκε κάποιο πρόβλημα ...\");\n  });\n}\n\nfunction removeImageHandler() {\n  var _this = this;\n\n  Swal.fire({\n    icon: 'info',\n    title: 'Προσοχή!',\n    text: 'Η εικόνα θα αφαιρεθεί απο το Gallery.',\n    showCancelButton: true,\n    confirmButtonText: \"\\u039D\\u03B1\\u03B9, \\u03B1\\u03C6\\u03B1\\u03AF\\u03C1\\u03B5\\u03C3\\u03B7!\",\n    cancelButtonText: \"Άκυρο\"\n  }).then(function (result) {\n    if (result.isConfirmed) {\n      removeImages([_this.dataset.imageId]);\n    }\n  });\n}\n\nfunction removeImages(ids) {\n  var gallery = $(\"#gallery-cnt\")[0];\n  var namespace = gallery.dataset.namespace;\n  var modelId = gallery.dataset.modelId;\n  axios.post(\"/media/gallery-remove\", {\n    namespace: namespace,\n    modelId: modelId,\n    ids: ids\n  }).then(function (res) {\n    var gallery = $(\"#gallery-cnt\");\n    gallery.html(res.data);\n    var closeBtns = gallery.find(\".js-remove-image\");\n    closeBtns.on(\"click\", removeImageHandler);\n\n    if (closeBtns.length == 0) {\n      $(\"#remove-all-images-btn\").addClass(\"d-none\");\n    }\n  })[\"catch\"](function (err) {\n    console.log(err);\n    utilities.toastAlert('error', \"Παρουσιάστηκε κάποιο πρόβλημα ...\");\n  });\n}\n\nfunction resetGalleryBtns(bulk, checkboxes) {\n  bulk.text(\"Επιλογές (0)\");\n  bulk.prop(\"disabled\", true);\n  bulk.removeClass(\"btn-warning\");\n  bulk.addClass(\"btn-secondary\");\n\n  for (var i = 0; i < checkboxes.length; i++) {\n    checkboxes[i].checked = false;\n  }\n} //!######################################################\n//!\t\t\t\tMedia Library Functions End\t\t\t\t#\n//!######################################################\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  toastAlert: toastAlert,\n  mainCheckboxSwitcher: mainCheckboxSwitcher,\n  minorCheckboxSwitcher: minorCheckboxSwitcher,\n  filterButton: filterButton,\n  tableLocale: tableLocale,\n  changeInputHidden: changeInputHidden,\n  redactorConfig: redactorConfig,\n  createStateSelect: createStateSelect,\n  datePickerConfig: datePickerConfig,\n  toastAlertDelete: toastAlertDelete,\n  filterStyle: filterStyle,\n  createDateElm: createDateElm,\n  startDate: startDate,\n  endDate: endDate,\n  resetBulk: resetBulk,\n  resetAddButton: resetAddButton,\n  createCourseTypeSelect: createCourseTypeSelect,\n  paginationHandler: paginationHandler,\n  searchHandler: searchHandler,\n  imageHandler: imageHandler,\n  paginationRequest: paginationRequest,\n  resetGalleryBtns: resetGalleryBtns,\n  removeImageHandler: removeImageHandler,\n  removeImages: removeImages\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/dashboard/main.js\n");

/***/ }),

/***/ "./resources/js/dashboard/topics/topicsMain.js":
/*!*****************************************************!*\
  !*** ./resources/js/dashboard/topics/topicsMain.js ***!
  \*****************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _main__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../main */ \"./resources/js/dashboard/main.js\");\n//!######################################\n//! \t\t\t\tImports\t\t\t\t#\n//!######################################\n //!##########################################\n//!\t\t\t\tEventListeners\t\t\t\t#\n//!##########################################\n\n$(\"#new-gradient-checkbox\").on(\"change\", function () {\n  var modal = $(\"#add-topic-modal\");\n  var gpicker = modal.find(\".gpickr\");\n  var gInput = $(\"#gradient-input\");\n\n  if (this.checked) {\n    gpicker.css(\"display\", \"inline-flex\");\n    gInput.prop(\"disabled\", false);\n  } else {\n    gpicker.css(\"display\", \"none\");\n    gInput.prop(\"disabled\", true);\n  }\n});\n$(\"#save-edit-gradient\").on(\"click\", function () {\n  var topicId = $(\"#topic-id\").val();\n  var color = $(\"#topic-gradient\").val();\n  axios.patch(\"/topics/change/color\", {\n    topicId: topicId,\n    color: color\n  }).then(function (res) {\n    _main__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toastAlert(\"success\", \"Το Gradient άλλαξε!\");\n    topicsDatatable.ajax.reload(null, false);\n    $(\"#color-modal\").modal('hide');\n  })[\"catch\"](function (err) {\n    _main__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toastAlert(\"error\", \"Παρουσιάστηκε κάποιο πρόβλημα ...\");\n  });\n});\n$(\"#color-modal\").on(\"show.bs.modal\", function (event) {\n  var button = $(event.relatedTarget);\n  var id = button.data('topic-id');\n  var title = button.data('topic-title');\n  var modal = $(this);\n  modal.find(\"#topic-id\").val(id);\n  modal.find(\"#topic-gradient\").val(\"linear-gradient(90deg, rgba(1, 1, 1, 1) 0%,rgba(255, 1, 1, 1) 100%)\");\n  modal.find(\"#color-modal-title\").text(\"Edit \".concat(title));\n});\n$(\"#select-all-topics\").on(\"change\", function () {\n  var checkbox = $(\".js-topic-checkbox\");\n  var bulk = $(\"#topic-bulk-action-btn\")[0];\n  _main__WEBPACK_IMPORTED_MODULE_0__[\"default\"].minorCheckboxSwitcher(this, checkbox, bulk);\n});\n$(\"#delete-topics-btn\").on(\"click\", function () {\n  var checkedBoxes = $(\".js-topic-checkbox:checked\");\n  var ids = [];\n\n  if (checkedBoxes.length == 0) {\n    Swal.fire('Δεν έχετε επιλέξει τίποτα');\n    return;\n  }\n\n  for (var i = 0; i < checkedBoxes.length; i++) {\n    ids.push(checkedBoxes[i].dataset.topicId);\n  }\n\n  Swal.fire({\n    title: 'Είστε σίγουρος;',\n    text: \"\".concat(checkedBoxes.length, \" \").concat(checkedBoxes.length == 1 ? \"αρχείο θα διαγραφεί\" : \" αρχεία θα διαγραφούν\"),\n    icon: 'warning',\n    showCancelButton: true,\n    confirmButtonText: 'Ναι, διαγραφή!',\n    cancelButtonText: 'Άκυρο'\n  }).then(function (result) {\n    if (result.value) {\n      axios[\"delete\"](\"/topics/destroy/\".concat(ids)).then(function (response) {\n        var message = checkedBoxes.length == 1 ? \"Διεγράφη\" : \"Διαγράφηκαν\";\n        _main__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toastAlert(\"success\", message);\n        topicsDatatable.ajax.reload();\n        resetBulk($(\"#topic-bulk-action-btn\"), $(\"#select-all-topics\"));\n      })[\"catch\"](function (error) {\n        _main__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toastAlert(\"error\", \"Παρουσιάστηκε κάποιο πρόβλημα ...\");\n      });\n    }\n  });\n}); //!##########################################\n//! \t\t\t\tDatatables\t\t\t\t#\n//!##########################################\n\nvar topicsDatatable = $(\"#topics-datatable\").DataTable({\n  order: [1, \"desc\"],\n  processing: true,\n  serverSide: true,\n  ajax: {\n    url: \"/topics/topics-datatable\",\n    headers: {\n      'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n    },\n    type: \"post\",\n    data: function data(d) {\n      return $.extend({}, d, {\n        startDate: _main__WEBPACK_IMPORTED_MODULE_0__[\"default\"].startDate($(\"#topic-date-range\")[0]),\n        endDate: _main__WEBPACK_IMPORTED_MODULE_0__[\"default\"].endDate($(\"#topic-date-range\")[0])\n      });\n    }\n  },\n  columns: [{\n    data: 'action',\n    name: 'action',\n    className: \"align-middle text-center\",\n    width: \"5%\",\n    orderable: false\n  }, {\n    data: 'title',\n    name: 'title'\n  }],\n  language: _main__WEBPACK_IMPORTED_MODULE_0__[\"default\"].tableLocale,\n  fnInitComplete: function fnInitComplete(oSettings, json) {\n    var lenthSelection = $(\"select[name='topics-datatable_length']\");\n    lenthSelection.addClass(\"select2\");\n    lenthSelection.select2({\n      minimumResultsForSearch: -1\n    });\n  },\n  drawCallback: function drawCallback() {\n    $(\".dataTables_paginate > .pagination\").addClass(\"pagination-rounded\");\n    $(\".js-remove-table-classes > thead > tr > th\").removeClass(\"d-none cursor-pointer js-updated-at js-colspan\");\n    $(\".js-colspan\").attr(\"colspan\", 2);\n    showEditInit();\n    editInputInit();\n    topicCheckboxesInit();\n  }\n}); //!##############################################\n//!\t\t\t\tDatatable Filters\t\t\t\t#\n//!##############################################\n\nvar searchFieldLabel = $(\"#topics-datatable_filter > label > input\")[0];\nvar dateInput = _main__WEBPACK_IMPORTED_MODULE_0__[\"default\"].createDateElm(\"topic-date-range\");\ndateInput.appendBefore(searchFieldLabel);\ndateInput.addEventListener(\"input\", function () {\n  this.value = this.value.replace(/[^0-9]/g, \"\").replace(/^(\\d{2})?(\\d{2})?(\\d{4})?(\\d{2})?(\\d{2})?(\\d{4})?/g, '$1/$2/$3 - $4/$5/$6').substr(0, 23);\n});\nvar dateRange = $(\"#topic-date-range\");\ndateRange.daterangepicker(_main__WEBPACK_IMPORTED_MODULE_0__[\"default\"].datePickerConfig);\ndateRange.on(\"apply.daterangepicker\", function (event, picker) {\n  var startDate = picker.startDate.format('DD/MM/YYYY');\n  var endDate = picker.endDate.format('DD/MM/YYYY');\n  this.classList.add(\"select2-selected\");\n  this.value = \"\".concat(startDate, \" - \").concat(endDate);\n  topicsDatatable.ajax.reload();\n});\ndateRange.on('cancel.daterangepicker', function (event, picker) {\n  this.classList.remove(\"select2-selected\");\n  dateInput.value = \"\";\n  topicsDatatable.ajax.reload();\n}); //!##############################################\n//!\t\t\t\tEventListeners Init\t\t\t\t#\n//!##############################################\n\nfunction topicCheckboxesInit() {\n  var primaryCheckbox = $(\"#select-all-topics\")[0];\n  var topicCheckbox = $(\".js-topic-checkbox\");\n  var bulk = $(\"#topic-bulk-action-btn\")[0];\n  topicCheckbox.on(\"change\", function () {\n    _main__WEBPACK_IMPORTED_MODULE_0__[\"default\"].mainCheckboxSwitcher(primaryCheckbox, topicCheckbox, bulk);\n  });\n}\n\nfunction showEditInit() {\n  var editBtns = $(\".js-quick-edit\");\n  editBtns.on(\"click\", function () {\n    var row = this.findParent(2);\n    var title = row.getElementsByClassName(\"js-title\")[0];\n    var input = row.getElementsByClassName(\"js-edit\")[0];\n    var valueLen = input.value.length;\n    title.classList.add(\"d-none\");\n    input.classList.remove(\"d-none\");\n    input.focus();\n    input.setSelectionRange(valueLen, valueLen);\n  });\n}\n\nfunction editInputInit() {\n  var editInputs = $(\".js-edit\");\n  editInputs.on('blur', function () {\n    var row = this.findParent(2);\n    var title = row.getElementsByClassName(\"js-title\")[0];\n    title.classList.remove(\"d-none\");\n    this.classList.add(\"d-none\");\n    this.classList.remove(\"is-invalid\");\n    this.value = this.defaultValue;\n  });\n  editInputs.on(\"keyup\", function () {\n    if (event.keyCode == 13) {\n      if (this.value == \"\") {\n        this.classList.add(\"is-invalid\");\n        return;\n      }\n\n      var row = this.findParent(2);\n      var title = row.getElementsByClassName(\"js-title\")[0];\n      title.classList.remove(\"d-none\");\n      this.classList.add(\"d-none\");\n      updateTopic(this);\n    }\n\n    this.classList.remove(\"is-invalid\");\n  });\n}\n\nfunction updateTopic(input) {\n  var id = input.dataset.topicId;\n  var title = input.value;\n  axios.patch(\"/topics/update/\".concat(id), {\n    title: title\n  }).then(function (res) {\n    topicsDatatable.ajax.reload();\n    _main__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toastAlert(\"success\", \"Το topic ενημερώθηκε.\");\n  })[\"catch\"](function (err) {\n    if (err.response.status == 422) {\n      _main__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toastAlert(\"info\", \"Πρέπει να δώσετε τίτλο...\");\n      input.value = input.defaultValue;\n    } else {\n      console.log(err.response.status);\n      _main__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toastAlert(\"error\", \"Παρουσιάστηκε κάποιο πρόβλημα ...\");\n    }\n  });\n} //!##########################################\n//!\t\t\t\t\tFunctions\t\t\t\t#\n//!##########################################\n\n\nfunction resetBulk(bulkBtn, checkbox) {\n  bulkBtn.text(\"Επιλογές  (0)\");\n  bulkBtn.addClass(\"btn-secondary\");\n  bulkBtn.removeClass(\"btn-warning\");\n  bulkBtn.prop(\"disabled\", true);\n  checkbox.prop(\"checked\", false);\n} //!##############################################\n//!\t\t\t\t\tInitializers\t            #\n//!##############################################\n\n\nvar gpickr = new GPickr({\n  el: '#new-topic-gradient',\n  stops: [['rgba(66, 68, 90, 1)', 0], ['rgba(32, 182, 221, 1)', 1]]\n}); // radial-gradient(circle at right, rgba(66, 68, 90, 1) 0%,rgba(32, 182, 221, 1) 100%)\n\ngpickr.on('change', function (instance) {\n  $(\"#gradient-input\").val(instance.getGradient());\n});\nvar gpickrEdit = new GPickr({\n  el: '#select-edit-gradient',\n  stops: [['rgb(1,1,1)', 0], ['rgb(255,1,1)', 1]]\n});\ngpickrEdit.on('change', function (instance) {\n  $(\"#topic-gradient\").val(instance.getGradient());\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/dashboard/topics/topicsMain.js\n");

/***/ }),

/***/ 1:
/*!***********************************************************!*\
  !*** multi ./resources/js/dashboard/topics/topicsMain.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! C:\laragon\www\lmsdemo\resources\js\dashboard\topics\topicsMain.js */"./resources/js/dashboard/topics/topicsMain.js");


/***/ })

/******/ });