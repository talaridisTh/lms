/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 17);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/js/dashboard/mail/compose-email.js":
/*!******************************************************!*\
  !*** ./resources/js/dashboard/mail/compose-email.js ***!
  \******************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _main__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../main */ \"./resources/js/dashboard/main.js\");\n\n_main__WEBPACK_IMPORTED_MODULE_0__[\"default\"].redactorConfig.minHeight = \"300px\";\n$R(\"#editor\", _main__WEBPACK_IMPORTED_MODULE_0__[\"default\"].redactorConfig);\nsessionStorage.removeItem(\"recipients\"); // const recipientsSelect = $('#recipients-selection').select2({\n// \tplaceholder: \"Επιλέξτε παραλήπτες...\",\n// \twidth: \"100%\",\n// \t// allowClear: true,\n// \tajax: {\n// \t\turl: \"/email/users\",\n// \t\tdelay: 1000,\n// \t\tdataType: \"json\",\n// \t\tdata: function(params) {\n// \t\t\treturn {\n// \t\t\t\tsearch: params.term,\n// \t\t\t\tpage: params.page || 1\n// \t\t\t}\n// \t\t}\n// \t}\n// });\n// $(\".js-recipients\").on(\"change\", function() {\n// \tconst select = $('#recipients-selection');\n// \tconst recipients = $(\".js-recipients:checked\");\n// \tselect.html(\"\");\n// \tif (recipients.length === 0) {\n// \t\tselect.prop(\"disabled\", false);\n// \t\treturn;\n// \t}\n// \tlet newOption;\n// \tfor (let i = 0; i < recipients.length; i++) {\n// \t\tnewOption = new Option(recipients[i].dataset.recipients, i, false, true);\n// \t\tselect.append(newOption).trigger('change');\n// \t}\n// \tselect.prop(\"disabled\", true);\n// });\n\n_main__WEBPACK_IMPORTED_MODULE_0__[\"default\"].tableLocale.emptyTable = \"Δεν ορίστικαν παραλήπτες\";\n_main__WEBPACK_IMPORTED_MODULE_0__[\"default\"].tableLocale.zeroRecords = \"Δεν βρέθηκαν παραλήπτες\";\nvar usersDatatable = $(\"#users-datatable\").DataTable({\n  order: [1, \"asc\"],\n  processing: true,\n  serverSide: true,\n  ajax: {\n    url: \"/email/select-users\",\n    headers: {\n      'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n    },\n    type: \"post\",\n    data: function data(d) {\n      return $.extend({}, d, {\n        recipients: sessionStorage.getItem(\"recipients\")\n      });\n    }\n  },\n  columns: [{\n    data: 'action',\n    name: 'action',\n    className: \"align-middle text-center\",\n    orderable: false\n  }, {\n    data: 'name',\n    name: 'users.last_name',\n    className: \"align-middle\"\n  }, {\n    data: 'courses',\n    name: 'courses.title',\n    className: \"align-middle text-center text-wrap\"\n  }, {\n    data: 'bundles',\n    name: 'bundles.title',\n    className: \"align-middle text-center text-wrap\"\n  }, {\n    data: 'btn',\n    className: \"align-middle text-center text-wrap\",\n    orderable: false,\n    searchable: false\n  }],\n  language: _main__WEBPACK_IMPORTED_MODULE_0__[\"default\"].tableLocale,\n  fnInitComplete: function fnInitComplete(oSettings, json) {\n    var lenthSelection = $(\"select[name='users-datatable_length']\");\n    lenthSelection.select2({\n      minimumResultsForSearch: -1\n    });\n  },\n  drawCallback: function drawCallback() {\n    $(\".dataTables_paginate > .pagination\").addClass(\"pagination-rounded\");\n    $(\".js-add-recipient\").on(\"click\", addRecipientHandler);\n  }\n});\nvar recipientsDatatable = $(\"#recipients-datatable\").DataTable({\n  order: [1, \"asc\"],\n  processing: true,\n  serverSide: true,\n  ajax: {\n    url: \"/email/recipients-data-table\",\n    headers: {\n      'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n    },\n    type: \"post\",\n    data: function data(d) {\n      return $.extend({}, d, {\n        recipients: sessionStorage.getItem(\"recipients\")\n      });\n    }\n  },\n  columns: [{\n    data: 'action',\n    name: 'action',\n    className: \"align-middle text-center\",\n    orderable: false\n  }, {\n    data: 'name',\n    name: 'users.last_name',\n    className: \"align-middle\"\n  }, {\n    data: 'courses',\n    name: 'courses.title',\n    className: \"align-middle text-center text-wrap\"\n  }, {\n    data: 'bundles',\n    name: 'bundles.title',\n    className: \"align-middle text-center text-wrap\"\n  }, {\n    data: 'btn',\n    className: \"align-middle text-center text-wrap\",\n    orderable: false,\n    searchable: false\n  }],\n  language: _main__WEBPACK_IMPORTED_MODULE_0__[\"default\"].tableLocale,\n  fnInitComplete: function fnInitComplete(oSettings, json) {\n    var lenthSelection = $(\"select[name='recipients-datatable_length']\");\n    lenthSelection.select2({\n      minimumResultsForSearch: -1\n    });\n  },\n  drawCallback: function drawCallback() {\n    $(\".dataTables_paginate > .pagination\").addClass(\"pagination-rounded\");\n    $(\".js-remove-recipient\").on(\"click\", removeRecipientHandler);\n  }\n});\n\nfunction addRecipientHandler() {\n  $(\".js-add-recipient\").prop(\"disabled\", true);\n  var id = this.dataset.userId;\n  var recipients = sessionStorage.getItem(\"recipients\");\n\n  if (recipients === null) {\n    recipients = \"\".concat(id);\n  } else {\n    recipients += \",\".concat(id);\n  }\n\n  userTablesUpdate(recipients);\n}\n\nfunction removeRecipientHandler() {\n  var id = this.dataset.userId;\n  var recipients = sessionStorage.getItem(\"recipients\").split(\",\");\n  var index = recipients.indexOf(id);\n  recipients.splice(index, 1);\n  userTablesUpdate(recipients);\n}\n\nfunction userTablesUpdate(recipients) {\n  sessionStorage.removeItem(\"recipients\");\n  sessionStorage.setItem(\"recipients\", recipients);\n  usersDatatable.ajax.reload(null, false);\n  recipientsDatatable.ajax.reload(null, false);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/dashboard/mail/compose-email.js\n");

/***/ }),

/***/ "./resources/js/dashboard/main.js":
/*!****************************************!*\
  !*** ./resources/js/dashboard/main.js ***!
  \****************************************/
/*! exports provided: ALLOWEDTYPES, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ALLOWEDTYPES\", function() { return ALLOWEDTYPES; });\nElement.prototype.findParent = function (loops) {\n  var parent = this;\n\n  for (var i = 0; i < loops; i++) {\n    parent = parent.parentElement;\n  }\n\n  return parent;\n}, false;\nElement.prototype.appendBefore = function (element) {\n  element.parentNode.insertBefore(this, element);\n}, false;\nElement.prototype.appendAfter = function (element) {\n  element.parentNode.insertBefore(this, element.nextSibling);\n}, false; //!##########################################\n//!\t\t\t\tGlobal Variables\t\tF\t#\n//!##########################################\n\nvar baseUrl = window.location.origin;\nvar timer = 0;\nvar ALLOWEDTYPES = [\"application/octet-stream\", \"application/x-zip-compressed\", \"application/pdf\", \"application/msword\", \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\", \"application/vnd.openxmlformats-officedocument.wordprocessingml.template\", \"application/vnd.ms-word.document.macroEnabled.12\", \"application/vnd.ms-word.template.macroEnabled.12\", \"application/vnd.ms-excel\", \"application/vnd.ms-excel\", \"application/vnd.ms-excel\", \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\", \"application/vnd.openxmlformats-officedocument.spreadsheetml.template\", \"application/vnd.ms-excel.sheet.macroEnabled.12\", \"application/vnd.ms-excel.template.macroEnabled.12\", \"application/vnd.ms-excel.addin.macroEnabled.12\", \"application/vnd.ms-excel.sheet.binary.macroEnabled.12\", \"application/vnd.ms-powerpoint\", \"application/vnd.openxmlformats-officedocument.presentationml.presentation\", \"application/vnd.openxmlformats-officedocument.presentationml.template\", \"application/vnd.openxmlformats-officedocument.presentationml.slideshow\", \"application/vnd.ms-powerpoint.addin.macroEnabled.12\", \"application/vnd.ms-powerpoint.presentation.macroEnabled.12\", \"application/vnd.ms-powerpoint.template.macroEnabled.12\", \"application/vnd.ms-powerpoint.slideshow.macroEnabled.12\", \"application/vnd.ms-access\", \"audio/mpeg\", \"application/vnd.oasis.opendocument.presentation\", \"application/vnd.oasis.opendocument.spreadsheet\", \"application/vnd.oasis.opendocument.text\", \"application/rtf\", \"application/vnd.oasis.opendocument.graphics\", \"text/html\"]; //!##########################################\n//!\t\t\t\tConfigurations\t\t\t\t#\n//!##########################################\n//!ALERT\n//!============================================================\n\nfunction toastAlert(icon, message) {\n  Swal.fire({\n    toast: 'true',\n    position: 'top-end',\n    icon: icon,\n    title: message,\n    showConfirmButton: false,\n    timer: 3000,\n    timerProgressBar: true\n  });\n}\n\nfunction toastAlertDelete(text) {\n  var icon = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"warning\";\n  return Swal.fire({\n    title: 'Είστε σίγουρος;',\n    text: text,\n    icon: icon,\n    showCancelButton: true,\n    confirmButtonColor: '#ff5b5b',\n    confirmButtonText: 'Ναί, διαγραφή!',\n    cancelButtonText: 'Άκυρο'\n  });\n} //!CONFIG\n//!============================================================\n\n\nvar articleConfig = {\n  css: \"/css/\",\n  custom: {\n    css: [\"/css/bootstrap.min.css\", \"/css/customArticleStyle.css\"]\n  },\n  // plugins: ['mediaLibrary', 'reorder'],\n  classes: {\n    img: 'img-fluid',\n    p: 'text-wrap'\n  },\n  grid: {\n    classname: 'row',\n    columns: 12,\n    gutter: '1px',\n    offset: {\n      left: '15px',\n      right: '15px'\n    },\n    patterns: {\n      '6|6': 'col-6|col-6',\n      '4|4|4': 'col-4|col-4|col-4',\n      '3|3|3|3': 'col-3|col-3|col-3|col-3',\n      '2|2|2|2|2|2': 'col-2|col-2|col-2|col-2|col-2|col-2',\n      '3|6|3': 'col-3|col-6|col-3',\n      '2|8|2': 'col-2|col-8|col-2',\n      '5|7': 'col-5|col-7',\n      '7|5': 'col-7|col-5',\n      '4|8': 'col-4|col-8',\n      '8|4': 'col-8|col-4',\n      '3|9': 'col-3|col-9',\n      '9|3': 'col-9|col-3',\n      '2|10': 'col-2|col-10',\n      '10|2': 'col-10|col-2',\n      '12': 'col-12'\n    }\n  },\n  align: {\n    left: \"text-left\",\n    center: \"text-center\",\n    right: \"text-right\"\n  },\n  editor: {\n    minHeight: \"300px\"\n  },\n  image: {\n    upload: \"/media/upload-images\",\n    data: {\n      \"_token\": $('meta[name=\"csrf-token\"]').attr('content')\n    }\n  }\n};\nvar redactorConfig = {\n  buttons: ['html', 'undo', 'redo', 'format', 'bold', 'underline', 'italic', 'deleted', 'sup', 'sub', 'lists', 'file', 'link', 'image'],\n  style: false,\n  plugins: ['alignment'],\n  minHeight: '150px'\n};\nvar datePickerConfig = {\n  ranges: {\n    'Today': [moment(), moment()],\n    'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],\n    'Last 7 Days': [moment().subtract(6, 'days'), moment()],\n    'Last 30 Days': [moment().subtract(29, 'days'), moment()],\n    'This Month': [moment().startOf('month'), moment().endOf('month')],\n    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')],\n    'This Year': [moment().startOf('year'), moment().endOf('year')],\n    'Last Year': [moment().subtract(1, 'year').startOf('year'), moment().subtract(1, 'year').endOf('year')]\n  },\n  alwaysShowCalendars: true,\n  showCustomRangeLabel: false,\n  drops: \"auto\",\n  autoUpdateInput: false,\n  opens: \"center\",\n  locale: {\n    format: \"DD/MM/YYYY\"\n  }\n};\nvar tableLocale = {\n  emptyTable: \"Δεν υπάρχουν εγγραφές\",\n  info: \"_START_ έως _END_ απο τα _TOTAL_ αποτελέσματα\",\n  infoEmpty: \"0 απο 0 τα 0 αποτελέσματα\",\n  lengthMenu: \"_MENU_\",\n  loadingRecords: \"Φόρτωση ...\",\n  processing: \"Επεξεργασία ...\",\n  search: \"\",\n  searchPlaceholder: \"Αναζήτηση... \",\n  zeroRecords: \"Δεν βρέθηκαν αποτελέσματα\",\n  paginate: {\n    previous: \"<i class='mdi mdi-chevron-left'>\",\n    next: \"<i class='mdi mdi-chevron-right'>\"\n  },\n  infoFiltered: \"(Φιλτραρισμένα απο τις _MAX_ εγγραφές)\"\n}; //!GLOBAL FUNCTION\n//!============================================================\n\nfunction mainCheckboxSwitcher(main, minor) {\n  var bulkBtn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var status = true;\n  var counter = 0;\n  main.checked = true;\n\n  for (var i = 0; i < minor.length; i++) {\n    if (!minor[i].checked) {\n      minor[i].findParent(3).classList.remove(\"bg-selected\");\n      main.checked = false;\n    } else {\n      minor[i].findParent(3).classList.add(\"bg-selected\");\n      counter++;\n      status = false;\n    }\n  }\n\n  if (bulkBtn) {\n    bulkModifier(bulkBtn, status, counter);\n  }\n}\n\nfunction minorCheckboxSwitcher(main, minor) {\n  var bulkBtn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var counter = 0;\n  var status = true;\n\n  if (main.checked && minor.length > 0) {\n    counter = minor.length;\n    status = false;\n\n    for (var i = 0; i < minor.length; i++) {\n      minor[i].checked = true;\n      minor[i].findParent(3).classList.add(\"bg-selected\");\n    }\n  } else {\n    for (var i = 0; i < minor.length; i++) {\n      minor[i].checked = false;\n      minor[i].findParent(3).classList.remove(\"bg-selected\");\n    }\n  }\n\n  if (bulkBtn) {\n    bulkModifier(bulkBtn, status, counter);\n  }\n}\n\nfunction bulkModifier(bulkBtn, status, sum) {\n  var text = bulkBtn.dataset.text ? bulkBtn.dataset.text : \"Επιλογές\";\n  var enabledColor = bulkBtn.dataset.enabledColor ? bulkBtn.dataset.enabledColor : \"btn-warning\";\n  var disabledColor = bulkBtn.dataset.disabledColor ? bulkBtn.dataset.disabledColor : \"btn-secondary\";\n\n  if (status) {\n    bulkBtn.classList.add(disabledColor);\n    bulkBtn.classList.remove(enabledColor);\n    bulkBtn.textContent = \"\".concat(text, \" (0)  \");\n    bulkBtn.disabled = true;\n  } else {\n    bulkBtn.classList.add(enabledColor);\n    bulkBtn.classList.remove(disabledColor);\n    bulkBtn.textContent = \"\".concat(text, \"  (\").concat(sum, \")  \");\n    bulkBtn.disabled = false;\n  }\n}\n\nfunction filterStyle(input, value) {\n  if (value == \"\") {\n    input.classList.remove(\"select2-selected\");\n  } else {\n    input.classList.add(\"select2-selected\");\n  }\n}\n\nvar filterButton = function filterButton(attr, column, table, tableId) {\n  $(attr).detach().appendTo(tableId);\n  $(attr).on('change', function () {\n    table.columns(column).search(this.value).draw();\n  });\n};\n\nvar changeInputHidden = function changeInputHidden(attr, hiddenAttr) {\n  $(attr).change(function () {\n    if (attr == \"#activeMaterial\") {\n      this.value = $(this).prop('checked') == true ? 1 : 0;\n    }\n\n    var hiddenValue = $(hiddenAttr)[0].value = this.value;\n  });\n};\n\nfunction createStateSelect() {\n  var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var selectElm = document.createElement(\"select\");\n  selectElm.classList.add(\"ml-1\", \"select2\");\n  selectElm.id = id;\n  selectElm.innerHTML = \"\\n\\t\\t<option value=\\\"\\\">\\u038C\\u03BB\\u03B5\\u03C2 \\u03BF\\u03B9 \\u039A\\u03B1\\u03C4\\u03B1\\u03C3\\u03C4\\u03AC\\u03C3\\u03B5\\u03B9\\u03C2</option>\\n\\t\\t<option value=\\\"1\\\">\\u0395\\u03BD\\u03B5\\u03C1\\u03B3\\u03AC</option>\\n\\t\\t<option value=\\\"0\\\">\\u0391\\u03BD\\u03B5\\u03BD\\u03B5\\u03C1\\u03B3\\u03AC</option>\\n\\t\";\n  return selectElm;\n}\n\nfunction createDateElm(id) {\n  var input = document.createElement(\"input\");\n  input.classList.add(\"form-control\", \"date\", \"d-inline-block\", \"ml-1\", \"js-date-search\");\n  input.id = id;\n  input.dataset.toggle = \"date-picker\";\n  input.dataset.cancelClass = \"btn-secondary\";\n  input.style.height = \"31.96px\";\n  input.style.width = \"195px\";\n  input.placeholder = \"Επιλέξτε ημερομηνίες...\";\n  return input;\n}\n\nfunction createCourseTypeSelect() {\n  var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var selectElm = document.createElement(\"select\");\n  selectElm.classList.add(\"ml-1\", \"select2\");\n  selectElm.id = id;\n  selectElm.innerHTML = \"\\n\\t\\t<option value=\\\"\\\">\\u038C\\u03BB\\u03B5\\u03C2 \\u03BF\\u03B9 \\u0395\\u03BA\\u03B4\\u03CC\\u03C3\\u03B5\\u03B9\\u03C2</option>\\n\\t\\t<option value=\\\"Normal\\\">Normal</option>\\n\\t\\t<option value=\\\"Trial\\\">Trial</option>\\n\\t\";\n  return selectElm;\n}\n\nfunction startDate(input) {\n  var dateInput = input;\n\n  if (!dateInput || dateInput.value == \"\") {\n    return \"\";\n  }\n\n  var dateInputValue = dateInput.value.split(\" - \");\n  var firstDate = dateInputValue[0].split(\"/\").reverse().join(\"-\");\n  return firstDate;\n}\n\nfunction endDate(input) {\n  var dateInput = input;\n\n  if (!dateInput || dateInput.value == \"\") {\n    return \"\";\n  }\n\n  var dateInputValue = dateInput.value.split(\" - \");\n  var secondDate = dateInputValue[1].split(\"/\").reverse().join(\"-\");\n  return secondDate;\n}\n\nfunction resetBulk(bulkBtn, checkbox) {\n  bulkBtn.text(\"Επιλογές  (0)\");\n  bulkBtn.addClass(\"btn-secondary\");\n  bulkBtn.removeClass(\"btn-warning\");\n  bulkBtn.prop(\"disabled\", true);\n  checkbox.prop(\"checked\", false);\n}\n\nfunction resetAddButton(addBtn, checkbox) {\n  addBtn.text(\"Προσθήκη Επιλογών (0)\");\n  addBtn.addClass(\"btn-secondary\");\n  addBtn.removeClass(\"btn-primary\");\n  addBtn.prop(\"disabled\", true);\n  checkbox.prop(\"checked\", false);\n} //!##############################################\n//!\t\t\t\tMedia Library Functions\t\t\t#\n//!##############################################\n\n\nfunction paginationHandler(event) {\n  event.preventDefault();\n  var activePage = this.href.split(\"page=\")[1];\n  var search = $(\"#image-search\").val();\n  paginationRequest(activePage, search);\n}\n\nfunction searchHandler() {\n  clearTimeout(timer);\n\n  if (this.value.length < 3 || this.value == \"\") {\n    timer = setTimeout(paginationRequest, 800, 1, \"\");\n  } else {\n    timer = setTimeout(paginationRequest, 800, 1, this.value);\n  }\n}\n\nfunction imageHandler() {\n  var modal = $(\"#gallery-content\")[0];\n  var model = modal.dataset.model;\n  var modelId = modal.dataset.id;\n  var editorId = modal.dataset.editorId;\n  var type = modal.dataset.type;\n  var image = {\n    'img': {\n      url: \"\".concat(this.dataset.imageSource)\n    }\n  };\n\n  if (type == \"article\") {\n    ArticleEditor(editorId).image.insert(image);\n  } else if (type == \"redactor\") {\n    $R(editorId, 'insertion.insertHtml', \"<img class=\\\"img-fluid\\\" src=\\\"\".concat(this.dataset.imageSource, \"\\\" alt=\\\"\").concat(this.dataset.name, \"\\\" />\"));\n  } else if (type == \"gallery\") {\n    $(\"#remove-all-images-btn\").removeClass(\"d-none\");\n    addToGallery(model, modelId, this.dataset.imageId);\n    return;\n  } else {\n    changeCoverRequest(model, modelId, this.dataset.imageSource);\n  }\n\n  $(\"#gallery-modal\").modal('hide');\n}\n\nfunction paginationRequest(activePage, search) {\n  axios.get(\"/media/images\", {\n    params: {\n      page: activePage,\n      search: search\n    }\n  }).then(function (res) {\n    var gallery = $(\"#gallery-content\")[0];\n    gallery.innerHTML = res.data;\n    var pagination = gallery.getElementsByClassName(\"js-gallery-page-btn\");\n    var addBtns = gallery.getElementsByClassName(\"js-add-image\");\n\n    for (var i = 0; i < addBtns.length; i++) {\n      addBtns[i].removeEventListener(\"click\", imageHandler);\n      addBtns[i].addEventListener(\"click\", imageHandler);\n    }\n\n    for (var _i = 0; _i < pagination.length; _i++) {\n      pagination[_i].removeEventListener(\"click\", paginationHandler);\n\n      pagination[_i].addEventListener(\"click\", paginationHandler);\n    }\n  });\n}\n\nfunction changeCoverRequest(namespace, id, url) {\n  if (typeof id === \"undefined\" && namespace == \"App\\\\User\") {\n    var img = $(\"#cover-image\")[0];\n    var removeBtnCnt = $(\"#remove-cover-btn\").parent();\n    img.src = \"\".concat(url);\n    img.classList.remove(\"d-none\");\n    removeBtnCnt.removeClass(\"d-none\");\n    removeBtnCnt.addClass(\"d-flex\");\n    $(\"#custom-file\")[0].value = \"\".concat(url);\n  } else {\n    axios.patch(\"/media/cover/replace\", {\n      namespace: namespace,\n      id: id,\n      url: url\n    }).then(function (res) {\n      var img = $(\"#cover-image\")[0];\n      var removeBtnCnt = $(\"#remove-cover-btn\").parent();\n      img.src = res.data.imgUrl;\n      img.classList.remove(\"d-none\");\n      $(\"#change-cover-btn\").text(\"Αλλαγή\");\n      $(\"#cover-status\").addClass(\"d-none\");\n      removeBtnCnt.removeClass(\"d-none\");\n      removeBtnCnt.addClass(\"d-flex\");\n      toastAlert(\"success\", \"Το Cover άλλαξε!\");\n    })[\"catch\"](function (err) {\n      console.log(err);\n      toastAlert('error', \"Παρουσιάστηκε κάποιο πρόβλημα ...\");\n    });\n  }\n}\n\nfunction addToGallery(namespace, id, imageId) {\n  axios.post(\"/media/gallery\", {\n    namespace: namespace,\n    modelId: id,\n    ids: [imageId]\n  }).then(function (res) {\n    var gallery = $(\"#gallery-cnt\");\n    gallery.html(res.data);\n    var closeBtns = gallery.find(\".js-remove-image\");\n    closeBtns.on(\"click\", removeImageHandler);\n    toastAlert(\"success\", \"Η εικόνα προστέθηκε.\");\n    gallery.modal(\"hide\");\n    var bulk = $(\"#gallery-bulk-action-btn\");\n    var checkboxes = $(\".js-gallery-checkbox\");\n    resetGalleryBtns(bulk, checkboxes);\n  })[\"catch\"](function (err) {\n    console.log(err);\n    toastAlert('error', \"Παρουσιάστηκε κάποιο πρόβλημα ...\");\n  });\n}\n\nfunction removeImageHandler() {\n  var _this = this;\n\n  Swal.fire({\n    icon: 'info',\n    title: 'Προσοχή!',\n    text: 'Η εικόνα θα αφαιρεθεί απο το Gallery.',\n    showCancelButton: true,\n    confirmButtonColor: '#536de6',\n    confirmButtonText: \"\\u039D\\u03B1\\u03B9, \\u03B1\\u03C6\\u03B1\\u03AF\\u03C1\\u03B5\\u03C3\\u03B7!\",\n    cancelButtonText: \"Άκυρο\"\n  }).then(function (result) {\n    if (result.isConfirmed) {\n      removeImages([_this.dataset.imageId]);\n    }\n  });\n}\n\nfunction removeImages(ids) {\n  var gallery = $(\"#gallery-cnt\")[0];\n  var namespace = gallery.dataset.namespace;\n  var modelId = gallery.dataset.modelId;\n  axios.post(\"/media/gallery-remove\", {\n    namespace: namespace,\n    modelId: modelId,\n    ids: ids\n  }).then(function (res) {\n    var gallery = $(\"#gallery-cnt\");\n    gallery.html(res.data);\n    var closeBtns = gallery.find(\".js-remove-image\");\n    closeBtns.on(\"click\", removeImageHandler);\n\n    if (closeBtns.length == 0) {\n      $(\"#remove-all-images-btn\").addClass(\"d-none\");\n    }\n  })[\"catch\"](function (err) {\n    console.log(err);\n    utilities.toastAlert('error', \"Παρουσιάστηκε κάποιο πρόβλημα ...\");\n  });\n}\n\nfunction resetGalleryBtns(bulk, checkboxes) {\n  bulk.text(\"Επιλογές (0)\");\n  bulk.prop(\"disabled\", true);\n  bulk.removeClass(\"btn-warning\");\n  bulk.addClass(\"btn-secondary\");\n\n  for (var i = 0; i < checkboxes.length; i++) {\n    checkboxes[i].checked = false;\n  }\n} //!######################################################\n//!\t\t\t\tMedia Library Functions End\t\t\t\t#\n//!######################################################\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  toastAlert: toastAlert,\n  mainCheckboxSwitcher: mainCheckboxSwitcher,\n  minorCheckboxSwitcher: minorCheckboxSwitcher,\n  filterButton: filterButton,\n  tableLocale: tableLocale,\n  changeInputHidden: changeInputHidden,\n  redactorConfig: redactorConfig,\n  createStateSelect: createStateSelect,\n  datePickerConfig: datePickerConfig,\n  toastAlertDelete: toastAlertDelete,\n  filterStyle: filterStyle,\n  createDateElm: createDateElm,\n  startDate: startDate,\n  endDate: endDate,\n  resetBulk: resetBulk,\n  resetAddButton: resetAddButton,\n  createCourseTypeSelect: createCourseTypeSelect,\n  paginationHandler: paginationHandler,\n  searchHandler: searchHandler,\n  imageHandler: imageHandler,\n  paginationRequest: paginationRequest,\n  resetGalleryBtns: resetGalleryBtns,\n  removeImageHandler: removeImageHandler,\n  removeImages: removeImages,\n  articleConfig: articleConfig,\n  ALLOWEDTYPES: ALLOWEDTYPES\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvZGFzaGJvYXJkL21haW4uanM/ODIyYiJdLCJuYW1lcyI6WyJFbGVtZW50IiwicHJvdG90eXBlIiwiZmluZFBhcmVudCIsImxvb3BzIiwicGFyZW50IiwiaSIsInBhcmVudEVsZW1lbnQiLCJhcHBlbmRCZWZvcmUiLCJlbGVtZW50IiwicGFyZW50Tm9kZSIsImluc2VydEJlZm9yZSIsImFwcGVuZEFmdGVyIiwibmV4dFNpYmxpbmciLCJiYXNlVXJsIiwid2luZG93IiwibG9jYXRpb24iLCJvcmlnaW4iLCJ0aW1lciIsIkFMTE9XRURUWVBFUyIsInRvYXN0QWxlcnQiLCJpY29uIiwibWVzc2FnZSIsIlN3YWwiLCJmaXJlIiwidG9hc3QiLCJwb3NpdGlvbiIsInRpdGxlIiwic2hvd0NvbmZpcm1CdXR0b24iLCJ0aW1lclByb2dyZXNzQmFyIiwidG9hc3RBbGVydERlbGV0ZSIsInRleHQiLCJzaG93Q2FuY2VsQnV0dG9uIiwiY29uZmlybUJ1dHRvbkNvbG9yIiwiY29uZmlybUJ1dHRvblRleHQiLCJjYW5jZWxCdXR0b25UZXh0IiwiYXJ0aWNsZUNvbmZpZyIsImNzcyIsImN1c3RvbSIsImNsYXNzZXMiLCJpbWciLCJwIiwiZ3JpZCIsImNsYXNzbmFtZSIsImNvbHVtbnMiLCJndXR0ZXIiLCJvZmZzZXQiLCJsZWZ0IiwicmlnaHQiLCJwYXR0ZXJucyIsImFsaWduIiwiY2VudGVyIiwiZWRpdG9yIiwibWluSGVpZ2h0IiwiaW1hZ2UiLCJ1cGxvYWQiLCJkYXRhIiwiJCIsImF0dHIiLCJyZWRhY3RvckNvbmZpZyIsImJ1dHRvbnMiLCJzdHlsZSIsInBsdWdpbnMiLCJkYXRlUGlja2VyQ29uZmlnIiwicmFuZ2VzIiwibW9tZW50Iiwic3VidHJhY3QiLCJzdGFydE9mIiwiZW5kT2YiLCJhbHdheXNTaG93Q2FsZW5kYXJzIiwic2hvd0N1c3RvbVJhbmdlTGFiZWwiLCJkcm9wcyIsImF1dG9VcGRhdGVJbnB1dCIsIm9wZW5zIiwibG9jYWxlIiwiZm9ybWF0IiwidGFibGVMb2NhbGUiLCJlbXB0eVRhYmxlIiwiaW5mbyIsImluZm9FbXB0eSIsImxlbmd0aE1lbnUiLCJsb2FkaW5nUmVjb3JkcyIsInByb2Nlc3NpbmciLCJzZWFyY2giLCJzZWFyY2hQbGFjZWhvbGRlciIsInplcm9SZWNvcmRzIiwicGFnaW5hdGUiLCJwcmV2aW91cyIsIm5leHQiLCJpbmZvRmlsdGVyZWQiLCJtYWluQ2hlY2tib3hTd2l0Y2hlciIsIm1haW4iLCJtaW5vciIsImJ1bGtCdG4iLCJzdGF0dXMiLCJjb3VudGVyIiwiY2hlY2tlZCIsImxlbmd0aCIsImNsYXNzTGlzdCIsInJlbW92ZSIsImFkZCIsImJ1bGtNb2RpZmllciIsIm1pbm9yQ2hlY2tib3hTd2l0Y2hlciIsInN1bSIsImRhdGFzZXQiLCJlbmFibGVkQ29sb3IiLCJkaXNhYmxlZENvbG9yIiwidGV4dENvbnRlbnQiLCJkaXNhYmxlZCIsImZpbHRlclN0eWxlIiwiaW5wdXQiLCJ2YWx1ZSIsImZpbHRlckJ1dHRvbiIsImNvbHVtbiIsInRhYmxlIiwidGFibGVJZCIsImRldGFjaCIsImFwcGVuZFRvIiwib24iLCJkcmF3IiwiY2hhbmdlSW5wdXRIaWRkZW4iLCJoaWRkZW5BdHRyIiwiY2hhbmdlIiwicHJvcCIsImhpZGRlblZhbHVlIiwiY3JlYXRlU3RhdGVTZWxlY3QiLCJpZCIsInNlbGVjdEVsbSIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImlubmVySFRNTCIsImNyZWF0ZURhdGVFbG0iLCJ0b2dnbGUiLCJjYW5jZWxDbGFzcyIsImhlaWdodCIsIndpZHRoIiwicGxhY2Vob2xkZXIiLCJjcmVhdGVDb3Vyc2VUeXBlU2VsZWN0Iiwic3RhcnREYXRlIiwiZGF0ZUlucHV0IiwiZGF0ZUlucHV0VmFsdWUiLCJzcGxpdCIsImZpcnN0RGF0ZSIsInJldmVyc2UiLCJqb2luIiwiZW5kRGF0ZSIsInNlY29uZERhdGUiLCJyZXNldEJ1bGsiLCJjaGVja2JveCIsImFkZENsYXNzIiwicmVtb3ZlQ2xhc3MiLCJyZXNldEFkZEJ1dHRvbiIsImFkZEJ0biIsInBhZ2luYXRpb25IYW5kbGVyIiwiZXZlbnQiLCJwcmV2ZW50RGVmYXVsdCIsImFjdGl2ZVBhZ2UiLCJocmVmIiwidmFsIiwicGFnaW5hdGlvblJlcXVlc3QiLCJzZWFyY2hIYW5kbGVyIiwiY2xlYXJUaW1lb3V0Iiwic2V0VGltZW91dCIsImltYWdlSGFuZGxlciIsIm1vZGFsIiwibW9kZWwiLCJtb2RlbElkIiwiZWRpdG9ySWQiLCJ0eXBlIiwidXJsIiwiaW1hZ2VTb3VyY2UiLCJBcnRpY2xlRWRpdG9yIiwiaW5zZXJ0IiwiJFIiLCJuYW1lIiwiYWRkVG9HYWxsZXJ5IiwiaW1hZ2VJZCIsImNoYW5nZUNvdmVyUmVxdWVzdCIsImF4aW9zIiwiZ2V0IiwicGFyYW1zIiwicGFnZSIsInRoZW4iLCJyZXMiLCJnYWxsZXJ5IiwicGFnaW5hdGlvbiIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJhZGRCdG5zIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImFkZEV2ZW50TGlzdGVuZXIiLCJuYW1lc3BhY2UiLCJyZW1vdmVCdG5DbnQiLCJzcmMiLCJwYXRjaCIsImltZ1VybCIsImVyciIsImNvbnNvbGUiLCJsb2ciLCJwb3N0IiwiaWRzIiwiaHRtbCIsImNsb3NlQnRucyIsImZpbmQiLCJyZW1vdmVJbWFnZUhhbmRsZXIiLCJidWxrIiwiY2hlY2tib3hlcyIsInJlc2V0R2FsbGVyeUJ0bnMiLCJyZXN1bHQiLCJpc0NvbmZpcm1lZCIsInJlbW92ZUltYWdlcyIsInV0aWxpdGllcyJdLCJtYXBwaW5ncyI6IkFBQUFBO0FBQUFBO0FBQUFBLE9BQU8sQ0FBQ0MsU0FBUixDQUFrQkMsVUFBbEIsR0FBK0IsVUFBVUMsS0FBVixFQUFpQjtBQUM1QyxNQUFJQyxNQUFNLEdBQUcsSUFBYjs7QUFFQSxPQUFLLElBQUlDLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdGLEtBQXBCLEVBQTJCRSxDQUFDLEVBQTVCLEVBQWdDO0FBQzVCRCxVQUFNLEdBQUdB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QUNBO0FBQ0E7OztBQUVlO0FBQ1g1RSxZQUFVLEVBQVZBLFVBRFc7QUFFWHNFLHNCQUFvQixFQUFwQkEsb0JBRlc7QUFHWFksdUJBQXFCLEVBQXJCQSxxQkFIVztBQUlYVSxjQUFZLEVBQVpBLFlBSlc7QUFLWHBDLGFBQVcsRUFBWEEsV0FMVztBQU1YNEMsbUJBQWlCLEVBQWpCQSxpQkFOVztBQU9YN0QsZ0JBQWMsRUFBZEEsY0FQVztBQVFYa0UsbUJBQWlCLEVBQWpCQSxpQkFSVztBQVNYOUQsa0JBQWdCLEVBQWhCQSxnQkFUVztBQVVYakMsa0JBQWdCLEVBQWhCQSxnQkFWVztBQVdYK0UsYUFBVyxFQUFYQSxXQVhXO0FBWVhzQixlQUFhLEVBQWJBLGFBWlc7QUFhWE8sV0FBUyxFQUFUQSxTQWJXO0FBY1hPLFNBQU8sRUFBUEEsT0FkVztBQWVYRSxXQUFTLEVBQVRBLFNBZlc7QUFnQlhJLGdCQUFjLEVBQWRBLGNBaEJXO0FBaUJYZCx3QkFBc0IsRUFBdEJBLHNCQWpCVztBQWtCWGdCLG1CQUFpQixFQUFqQkEsaUJBbEJXO0FBbUJYTyxlQUFhLEVBQWJBLGFBbkJXO0FBb0JYRyxjQUFZLEVBQVpBLFlBcEJXO0FBcUJkSixtQkFBaUIsRUFBakJBLGlCQXJCYztBQXNCZCtDLGtCQUFnQixFQUFoQkEsZ0JBdEJjO0FBdUJkSCxvQkFBa0IsRUFBbEJBLGtCQXZCYztBQXdCZE0sY0FBWSxFQUFaQSxZQXhCYztBQXlCZDdLLGVBQWEsRUFBYkEsYUF6QmM7QUEwQmRqQixjQUFZLEVBQVpBO0FBMUJjLENBQWYiLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvZGFzaGJvYXJkL21haW4uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJFbGVtZW50LnByb3RvdHlwZS5maW5kUGFyZW50ID0gZnVuY3Rpb24gKGxvb3BzKSB7XG4gICAgbGV0IHBhcmVudCA9IHRoaXM7XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxvb3BzOyBpKyspIHtcbiAgICAgICAgcGFyZW50ID0gcGFyZW50LnBhcmVudEVsZW1lbnQ7XG4gICAgfVxuXG4gICAgcmV0dXJuIHBhcmVudDtcbn0sIGZhbHNlO1xuXG5FbGVtZW50LnByb3RvdHlwZS5hcHBlbmRCZWZvcmUgPSBmdW5jdGlvbiAoZWxlbWVudCkge1xuICAgIGVsZW1lbnQucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUodGhpcywgZWxlbWVudCk7XG59LCBmYWxzZTtcblxuRWxlbWVudC5wcm90b3R5cGUuYXBwZW5kQWZ0ZXIgPSBmdW5jdGlvbiAoZWxlbWVudCkge1xuXG4gICAgZWxlbWVudC5wYXJlbnROb2RlLmluc2VydEJlZm9yZSh0aGlzLCBlbGVtZW50Lm5leHRTaWJsaW5nKTtcblxufSwgZmFsc2U7XG5cbi8vISMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1xuLy8hXHRcdFx0XHRHbG9iYWwgVmFyaWFibGVzXHRcdEZcdCNcbi8vISMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1xuXG5jb25zdCBiYXNlVXJsID0gd2luZG93LmxvY2F0aW9uLm9yaWdpbjtcbnZhciB0aW1lciA9IDA7XG5leHBvcnQgY29uc3QgQUxMT1dFRFRZUEVTID0gW1xuXHRcImFwcGxpY2F0aW9uL29jdGV0LXN0cmVhbVwiLCBcImFwcGxpY2F0aW9uL3gtemlwLWNvbXByZXNzZWRcIiwgXCJhcHBsaWNhdGlvbi9wZGZcIixcblx0XCJhcHBsaWNhdGlvbi9tc3dvcmRcIiwgXCJhcHBsaWNhdGlvbi92bmQub3BlbnhtbGZvcm1hdHMtb2ZmaWNlZG9jdW1lbnQud29yZHByb2Nlc3NpbmdtbC5kb2N1bWVudFwiLFxuXHRcImFwcGxpY2F0aW9uL3ZuZC5vcGVueG1sZm9ybWF0cy1vZmZpY2Vkb2N1bWVudC53b3JkcHJvY2Vzc2luZ21sLnRlbXBsYXRlXCIsIFwiYXBwbGljYXRpb24vdm5kLm1zLXdvcmQuZG9jdW1lbnQubWFjcm9FbmFibGVkLjEyXCIsXG5cdFwiYXBwbGljYXRpb24vdm5kLm1zLXdvcmQudGVtcGxhdGUubWFjcm9FbmFibGVkLjEyXCIsIFwiYXBwbGljYXRpb24vdm5kLm1zLWV4Y2VsXCIsIFwiYXBwbGljYXRpb24vdm5kLm1zLWV4Y2VsXCIsIFwiYXBwbGljYXRpb24vdm5kLm1zLWV4Y2VsXCIsXG5cdFwiYXBwbGljYXRpb24vdm5kLm9wZW54bWxmb3JtYXRzLW9mZmljZWRvY3VtZW50LnNwcmVhZHNoZWV0bWwuc2hlZXRcIiwgXCJhcHBsaWNhdGlvbi92bmQub3BlbnhtbGZvcm1hdHMtb2ZmaWNlZG9jdW1lbnQuc3ByZWFkc2hlZXRtbC50ZW1wbGF0ZVwiLFxuXHRcImFwcGxpY2F0aW9uL3ZuZC5tcy1leGNlbC5zaGVldC5tYWNyb0VuYWJsZWQuMTJcIiwgXCJhcHBsaWNhdGlvbi92bmQubXMtZXhjZWwudGVtcGxhdGUubWFjcm9FbmFibGVkLjEyXCIsXG5cdFwiYXBwbGljYXRpb24vdm5kLm1zLWV4Y2VsLmFkZGluLm1hY3JvRW5hYmxlZC4xMlwiLCBcImFwcGxpY2F0aW9uL3ZuZC5tcy1leGNlbC5zaGVldC5iaW5hcnkubWFjcm9FbmFibGVkLjEyXCIsXG5cdFwiYXBwbGljYXRpb24vdm5kLm1zLXBvd2VycG9pbnRcIiwgXCJhcHBsaWNhdGlvbi92bmQub3BlbnhtbGZvcm1hdHMtb2ZmaWNlZG9jdW1lbnQucHJlc2VudGF0aW9ubWwucHJlc2VudGF0aW9uXCIsXG5cdFwiYXBwbGljYXRpb24vdm5kLm9wZW54bWxmb3JtYXRzLW9mZmljZWRvY3VtZW50LnByZXNlbnRhdGlvbm1sLnRlbXBsYXRlXCIsIFwiYXBwbGljYXRpb24vdm5kLm9wZW54bWxmb3JtYXRzLW9mZmljZWRvY3VtZW50LnByZXNlbnRhdGlvbm1sLnNsaWRlc2hvd1wiLFxuXHRcImFwcGxpY2F0aW9uL3ZuZC5tcy1wb3dlcnBvaW50LmFkZGluLm1hY3JvRW5hYmxlZC4xMlwiLCBcImFwcGxpY2F0aW9uL3ZuZC5tcy1wb3dlcnBvaW50LnByZXNlbnRhdGlvbi5tYWNyb0VuYWJsZWQuMTJcIixcblx0XCJhcHBsaWNhdGlvbi92bmQubXMtcG93ZXJwb2ludC50ZW1wbGF0ZS5tYWNyb0VuYWJsZWQuMTJcIiwgXCJhcHBsaWNhdGlvbi92bmQubXMtcG93ZXJwb2ludC5zbGlkZXNob3cubWFjcm9FbmFibGVkLjEyXCIsXG5cdFwiYXBwbGljYXRpb24vdm5kLm1zLWFjY2Vzc1wiLCBcImF1ZGlvL21wZWdcIiwgXCJhcHBsaWNhdGlvbi92bmQub2FzaXMub3BlbmRvY3VtZW50LnByZXNlbnRhdGlvblwiLFxuXHRcImFwcGxpY2F0aW9uL3ZuZC5vYXNpcy5vcGVuZG9jdW1lbnQuc3ByZWFkc2hlZXRcIiwgXCJhcHBsaWNhdGlvbi92bmQub2FzaXMub3BlbmRvY3VtZW50LnRleHRcIixcblx0XCJhcHBsaWNhdGlvbi9ydGZcIiwgXCJhcHBsaWNhdGlvbi92bmQub2FzaXMub3BlbmRvY3VtZW50LmdyYXBoaWNzXCIsIFwidGV4dC9odG1sXCJcbl07XG5cbi8vISMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1xuLy8hXHRcdFx0XHRDb25maWd1cmF0aW9uc1x0XHRcdFx0I1xuLy8hIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjXG5cbi8vIUFMRVJUXG4vLyE9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbmZ1bmN0aW9uIHRvYXN0QWxlcnQoaWNvbiwgbWVzc2FnZSkge1xuICAgIFN3YWwuZmlyZSh7XG4gICAgICAgIHRvYXN0OiAndHJ1ZScsXG4gICAgICAgIHBvc2l0aW9uOiAndG9wLWVuZCcsXG4gICAgICAgIGljb246IGljb24sXG4gICAgICAgIHRpdGxlOiBtZXNzYWdlLFxuICAgICAgICBzaG93Q29uZmlybUJ1dHRvbjogZmFsc2UsXG4gICAgICAgIHRpbWVyOiAzMDAwLFxuICAgICAgICB0aW1lclByb2dyZXNzQmFyOiB0cnVlXG4gICAgfSk7XG59XG5cbmZ1bmN0aW9uIHRvYXN0QWxlcnREZWxldGUodGV4dCwgaWNvbiA9IFwid2FybmluZ1wiKSB7XG4gICAgcmV0dXJuIFN3YWwuZmlyZSh7XG4gICAgICAgIHRpdGxlOiAnzpXOr8+Dz4TOtSDPg86vzrPOv8+Fz4HOv8+COycsXG4gICAgICAgIHRleHQ6IHRleHQsXG4gICAgICAgIGljb246IGljb24sXG5cdFx0c2hvd0NhbmNlbEJ1dHRvbjogdHJ1ZSxcblx0XHRjb25maXJtQnV0dG9uQ29sb3I6ICcjZmY1YjViJyxcbiAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICfOnc6xzq8sIM60zrnOsc6zz4HOsc+Gzq4hJyxcbiAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogJ86GzrrPhc+Bzr8nXG4gICAgfSk7XG59XG5cblxuLy8hQ09ORklHXG4vLyE9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbmNvbnN0IGFydGljbGVDb25maWcgPSB7XG5cdGNzczogXCIvY3NzL1wiLFxuXHRjdXN0b206IHtcblx0XHRjc3M6IFtcblx0XHRcdFwiL2Nzcy9ib290c3RyYXAubWluLmNzc1wiLFxuXHRcdFx0XCIvY3NzL2N1c3RvbUFydGljbGVTdHlsZS5jc3NcIixcblx0XHRdXG5cdH0sXG5cdC8vIHBsdWdpbnM6IFsnbWVkaWFMaWJyYXJ5JywgJ3Jlb3JkZXInXSxcblx0Y2xhc3Nlczoge1xuXHRcdGltZzogJ2ltZy1mbHVpZCcsXG5cdFx0cDogJ3RleHQtd3JhcCdcblx0fSxcblx0Z3JpZDoge1xuXHRcdGNsYXNzbmFtZTogJ3JvdycsXG5cdFx0Y29sdW1uczogMTIsXG5cdFx0Z3V0dGVyOiAnMXB4Jyxcblx0XHRvZmZzZXQ6IHtcblx0XHRcdGxlZnQ6ICcxNXB4Jyxcblx0XHRcdHJpZ2h0OiAnMTVweCdcblx0XHR9LFxuXHRcdHBhdHRlcm5zOiB7XG5cdFx0XHQnNnw2JzogJ2NvbC02fGNvbC02Jyxcblx0XHRcdCc0fDR8NCc6ICdjb2wtNHxjb2wtNHxjb2wtNCcsXG5cdFx0XHQnM3wzfDN8Myc6ICdjb2wtM3xjb2wtM3xjb2wtM3xjb2wtMycsXG5cdFx0XHQnMnwyfDJ8MnwyfDInOiAnY29sLTJ8Y29sLTJ8Y29sLTJ8Y29sLTJ8Y29sLTJ8Y29sLTInLFxuXHRcdFx0JzN8NnwzJzogJ2NvbC0zfGNvbC02fGNvbC0zJyxcblx0XHRcdCcyfDh8Mic6ICdjb2wtMnxjb2wtOHxjb2wtMicsXG5cdFx0XHQnNXw3JzogJ2NvbC01fGNvbC03Jyxcblx0XHRcdCc3fDUnOiAnY29sLTd8Y29sLTUnLFxuXHRcdFx0JzR8OCc6ICdjb2wtNHxjb2wtOCcsXG5cdFx0XHQnOHw0JzogJ2NvbC04fGNvbC00Jyxcblx0XHRcdCczfDknOiAnY29sLTN8Y29sLTknLFxuXHRcdFx0Jzl8Myc6ICdjb2wtOXxjb2wtMycsXG5cdFx0XHQnMnwxMCc6ICdjb2wtMnxjb2wtMTAnLFxuXHRcdFx0JzEwfDInOiAnY29sLTEwfGNvbC0yJyxcblx0XHRcdCcxMic6ICdjb2wtMTInXG5cdFx0fVxuXHR9LFxuXHRhbGlnbjoge1xuXHRcdGxlZnQ6IFwidGV4dC1sZWZ0XCIsXG5cdFx0Y2VudGVyOiBcInRleHQtY2VudGVyXCIsXG5cdFx0cmlnaHQ6IFwidGV4dC1yaWdodFwiLFxuXHR9LFxuXHRlZGl0b3I6IHtcblx0XHRtaW5IZWlnaHQ6IFwiMzAwcHhcIlxuXHR9LFxuXHRpbWFnZToge1xuXHRcdHVwbG9hZDogXCIvbWVkaWEvdXBsb2FkLWltYWdlc1wiLFxuXHRcdGRhdGE6IHtcblx0XHRcdFwiX3Rva2VuXCI6ICQoJ21ldGFbbmFtZT1cImNzcmYtdG9rZW5cIl0nKS5hdHRyKCdjb250ZW50JyksXG5cdFx0fVxuXHR9XG59XG5cbmNvbnN0IHJlZGFjdG9yQ29uZmlnID0ge1xuICAgIGJ1dHRvbnM6IFtcblx0XHQnaHRtbCcsICd1bmRvJywgJ3JlZG8nLCAnZm9ybWF0Jyxcblx0XHQnYm9sZCcsICd1bmRlcmxpbmUnLCAnaXRhbGljJywgJ2RlbGV0ZWQnLFxuXHRcdCdzdXAnLCAnc3ViJywgJ2xpc3RzJywgJ2ZpbGUnLCAnbGluaycsICdpbWFnZSdcblx0XSxcblx0c3R5bGU6IGZhbHNlLFxuXHRwbHVnaW5zOiBbJ2FsaWdubWVudCddLFxuXHRtaW5IZWlnaHQ6ICcxNTBweCcsXG59XG5cbmNvbnN0IGRhdGVQaWNrZXJDb25maWcgPSB7XG4gICAgcmFuZ2VzOiB7XG4gICAgICAgICdUb2RheSc6IFttb21lbnQoKSwgbW9tZW50KCldLFxuICAgICAgICAnWWVzdGVyZGF5JzogW21vbWVudCgpLnN1YnRyYWN0KDEsICdkYXlzJyksIG1vbWVudCgpLnN1YnRyYWN0KDEsICdkYXlzJyldLFxuICAgICAgICAnTGFzdCA3IERheXMnOiBbbW9tZW50KCkuc3VidHJhY3QoNiwgJ2RheXMnKSwgbW9tZW50KCldLFxuICAgICAgICAnTGFzdCAzMCBEYXlzJzogW21vbWVudCgpLnN1YnRyYWN0KDI5LCAnZGF5cycpLCBtb21lbnQoKV0sXG4gICAgICAgICdUaGlzIE1vbnRoJzogW21vbWVudCgpLnN0YXJ0T2YoJ21vbnRoJyksIG1vbWVudCgpLmVuZE9mKCdtb250aCcpXSxcbiAgICAgICAgJ0xhc3QgTW9udGgnOiBbbW9tZW50KCkuc3VidHJhY3QoMSwgJ21vbnRoJykuc3RhcnRPZignbW9udGgnKSwgbW9tZW50KCkuc3VidHJhY3QoMSwgJ21vbnRoJykuZW5kT2YoJ21vbnRoJyldLFxuICAgICAgICAnVGhpcyBZZWFyJzogW21vbWVudCgpLnN0YXJ0T2YoJ3llYXInKSwgbW9tZW50KCkuZW5kT2YoJ3llYXInKV0sXG4gICAgICAgICdMYXN0IFllYXInOiBbbW9tZW50KCkuc3VidHJhY3QoMSwgJ3llYXInKS5zdGFydE9mKCd5ZWFyJyksIG1vbWVudCgpLnN1YnRyYWN0KDEsICd5ZWFyJykuZW5kT2YoJ3llYXInKV1cbiAgICB9LFxuICAgIGFsd2F5c1Nob3dDYWxlbmRhcnM6IHRydWUsXG4gICAgc2hvd0N1c3RvbVJhbmdlTGFiZWw6IGZhbHNlLFxuICAgIGRyb3BzOiBcImF1dG9cIixcbiAgICBhdXRvVXBkYXRlSW5wdXQ6IGZhbHNlLFxuICAgIG9wZW5zOiBcImNlbnRlclwiLFxuICAgIGxvY2FsZToge1xuICAgICAgICBmb3JtYXQ6IFwiREQvTU0vWVlZWVwiLFxuICAgIH0sXG59XG5cbmNvbnN0IHRhYmxlTG9jYWxlID0ge1xuICAgIGVtcHR5VGFibGU6IFwizpTOtc69IM+Fz4DOrM+Bz4fOv8+Fzr0gzrXOs86zz4HOsc+Gzq3PglwiLFxuICAgIGluZm86IFwiX1NUQVJUXyDOrc+Jz4IgX0VORF8gzrHPgM6/IM+EzrEgX1RPVEFMXyDOsc+Azr/PhM61zrvOrc+DzrzOsc+EzrFcIixcbiAgICBpbmZvRW1wdHk6IFwiMCDOsc+Azr8gMCDPhM6xIDAgzrHPgM6/z4TOtc67zq3Pg868zrHPhM6xXCIsXG4gICAgbGVuZ3RoTWVudTogXCJfTUVOVV9cIixcbiAgICBsb2FkaW5nUmVjb3JkczogXCLOps+Mz4HPhM+Jz4POtyAuLi5cIixcbiAgICBwcm9jZXNzaW5nOiBcIs6Vz4DOtc6+zrXPgc6zzrHPg86vzrEgLi4uXCIsXG4gICAgc2VhcmNoOiBcIlwiLFxuICAgIHNlYXJjaFBsYWNlaG9sZGVyOiBcIs6Rzr3Osc62zq7PhM63z4POty4uLiBcIixcbiAgICB6ZXJvUmVjb3JkczogXCLOlM61zr0gzrLPgc6tzrjOt866zrHOvSDOsc+Azr/PhM61zrvOrc+DzrzOsc+EzrFcIixcbiAgICBwYWdpbmF0ZToge1xuICAgICAgICBwcmV2aW91czogXCI8aSBjbGFzcz0nbWRpIG1kaS1jaGV2cm9uLWxlZnQnPlwiLFxuICAgICAgICBuZXh0OiBcIjxpIGNsYXNzPSdtZGkgbWRpLWNoZXZyb24tcmlnaHQnPlwiXG5cdH0sXG5cdGluZm9GaWx0ZXJlZDogXCIozqbOuc67z4TPgc6xz4HOuc+DzrzOrc69zrEgzrHPgM6/IM+EzrnPgiBfTUFYXyDOtc6zzrPPgc6xz4bOrc+CKVwiXG59XG5cbi8vIUdMT0JBTCBGVU5DVElPTlxuLy8hPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5mdW5jdGlvbiBtYWluQ2hlY2tib3hTd2l0Y2hlcihtYWluLCBtaW5vciwgYnVsa0J0biA9IGZhbHNlKSB7XG4gICAgbGV0IHN0YXR1cyA9IHRydWU7XG4gICAgbGV0IGNvdW50ZXIgPSAwO1xuICAgIG1haW4uY2hlY2tlZCA9IHRydWU7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IG1pbm9yLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmICghbWlub3JbaV0uY2hlY2tlZCkge1xuICAgICAgICAgICAgbWlub3JbaV0uZmluZFBhcmVudCgzKS5jbGFzc0xpc3QucmVtb3ZlKFwiYmctc2VsZWN0ZWRcIik7XG4gICAgICAgICAgICBtYWluLmNoZWNrZWQgPSBmYWxzZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIG1pbm9yW2ldLmZpbmRQYXJlbnQoMykuY2xhc3NMaXN0LmFkZChcImJnLXNlbGVjdGVkXCIpO1xuICAgICAgICAgICAgY291bnRlcisrXG4gICAgICAgICAgICBzdGF0dXMgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGlmIChidWxrQnRuKSB7XG4gICAgICAgIGJ1bGtNb2RpZmllcihidWxrQnRuLCBzdGF0dXMsIGNvdW50ZXIpO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gbWlub3JDaGVja2JveFN3aXRjaGVyKG1haW4sIG1pbm9yLCBidWxrQnRuID0gZmFsc2UpIHtcbiAgICBsZXQgY291bnRlciA9IDA7XG4gICAgbGV0IHN0YXR1cyA9IHRydWU7XG5cbiAgICBpZiAobWFpbi5jaGVja2VkICYmIG1pbm9yLmxlbmd0aCA+IDApIHtcblxuICAgICAgICBjb3VudGVyID0gbWlub3IubGVuZ3RoO1xuICAgICAgICBzdGF0dXMgPSBmYWxzZTtcblxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG1pbm9yLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBtaW5vcltpXS5jaGVja2VkID0gdHJ1ZTtcbiAgICAgICAgICAgIG1pbm9yW2ldLmZpbmRQYXJlbnQoMykuY2xhc3NMaXN0LmFkZChcImJnLXNlbGVjdGVkXCIpO1xuICAgICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBtaW5vci5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgbWlub3JbaV0uY2hlY2tlZCA9IGZhbHNlO1xuICAgICAgICAgICAgbWlub3JbaV0uZmluZFBhcmVudCgzKS5jbGFzc0xpc3QucmVtb3ZlKFwiYmctc2VsZWN0ZWRcIik7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoYnVsa0J0bikge1xuICAgICAgICBidWxrTW9kaWZpZXIoYnVsa0J0biwgc3RhdHVzLCBjb3VudGVyKTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGJ1bGtNb2RpZmllcihidWxrQnRuLCBzdGF0dXMsIHN1bSkge1xuXG4gICAgbGV0IHRleHQgPSBidWxrQnRuLmRhdGFzZXQudGV4dCA/IGJ1bGtCdG4uZGF0YXNldC50ZXh0IDogXCLOlc+AzrnOu86/zrPOrc+CXCI7XG4gICAgbGV0IGVuYWJsZWRDb2xvciA9IGJ1bGtCdG4uZGF0YXNldC5lbmFibGVkQ29sb3IgPyBidWxrQnRuLmRhdGFzZXQuZW5hYmxlZENvbG9yIDogXCJidG4td2FybmluZ1wiO1xuICAgIGxldCBkaXNhYmxlZENvbG9yID0gYnVsa0J0bi5kYXRhc2V0LmRpc2FibGVkQ29sb3IgPyBidWxrQnRuLmRhdGFzZXQuZGlzYWJsZWRDb2xvciA6IFwiYnRuLXNlY29uZGFyeVwiO1xuXG4gICAgaWYgKHN0YXR1cykge1xuICAgICAgICBidWxrQnRuLmNsYXNzTGlzdC5hZGQoZGlzYWJsZWRDb2xvcilcbiAgICAgICAgYnVsa0J0bi5jbGFzc0xpc3QucmVtb3ZlKGVuYWJsZWRDb2xvcilcbiAgICAgICAgYnVsa0J0bi50ZXh0Q29udGVudCA9IGAke3RleHR9ICgwKSAgYFxuICAgICAgICBidWxrQnRuLmRpc2FibGVkID0gdHJ1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBidWxrQnRuLmNsYXNzTGlzdC5hZGQoZW5hYmxlZENvbG9yKTtcbiAgICAgICAgYnVsa0J0bi5jbGFzc0xpc3QucmVtb3ZlKGRpc2FibGVkQ29sb3IpO1xuICAgICAgICBidWxrQnRuLnRleHRDb250ZW50ID0gYCR7dGV4dH0gICgke3N1bX0pICBgXG4gICAgICAgIGJ1bGtCdG4uZGlzYWJsZWQgPSBmYWxzZTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGZpbHRlclN0eWxlKGlucHV0LCB2YWx1ZSkge1xuXG4gICAgaWYgKHZhbHVlID09IFwiXCIpIHtcbiAgICAgICAgaW5wdXQuY2xhc3NMaXN0LnJlbW92ZShcInNlbGVjdDItc2VsZWN0ZWRcIik7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgaW5wdXQuY2xhc3NMaXN0LmFkZChcInNlbGVjdDItc2VsZWN0ZWRcIik7XG4gICAgfVxuXG59XG5cbmNvbnN0IGZpbHRlckJ1dHRvbiA9IGZ1bmN0aW9uIChhdHRyLCBjb2x1bW4sIHRhYmxlLCB0YWJsZUlkKSB7XG4gICAgJChhdHRyKS5kZXRhY2goKS5hcHBlbmRUbyh0YWJsZUlkKVxuXG5cblxuICAgICQoYXR0cikub24oJ2NoYW5nZScsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGFibGUuY29sdW1ucyhjb2x1bW4pLnNlYXJjaCh0aGlzLnZhbHVlKS5kcmF3KCk7XG5cblxuICAgIH0pO1xufVxuXG5jb25zdCBjaGFuZ2VJbnB1dEhpZGRlbiA9IChhdHRyLCBoaWRkZW5BdHRyKSA9PiB7XG5cbiAgICAkKGF0dHIpLmNoYW5nZShmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmIChhdHRyID09IFwiI2FjdGl2ZU1hdGVyaWFsXCIpIHtcbiAgICAgICAgICAgIHRoaXMudmFsdWUgPSAkKHRoaXMpLnByb3AoJ2NoZWNrZWQnKSA9PSB0cnVlID8gMSA6IDA7XG4gICAgICAgIH1cblxuICAgICAgICBsZXQgaGlkZGVuVmFsdWUgPSAkKGhpZGRlbkF0dHIpWzBdLnZhbHVlID0gdGhpcy52YWx1ZVxuXG4gICAgfSlcbn1cblxuZnVuY3Rpb24gY3JlYXRlU3RhdGVTZWxlY3QoaWQgPSBcIlwiKSB7XG4gICAgY29uc3Qgc2VsZWN0RWxtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNlbGVjdFwiKTtcbiAgICBzZWxlY3RFbG0uY2xhc3NMaXN0LmFkZChcIm1sLTFcIiwgXCJzZWxlY3QyXCIpO1xuICAgIHNlbGVjdEVsbS5pZCA9IGlkO1xuXG4gICAgc2VsZWN0RWxtLmlubmVySFRNTCA9IGBcblx0XHQ8b3B0aW9uIHZhbHVlPVwiXCI+zozOu861z4Igzr/OuSDOms6xz4TOsc+Dz4TOrM+DzrXOuc+CPC9vcHRpb24+XG5cdFx0PG9wdGlvbiB2YWx1ZT1cIjFcIj7Olc69zrXPgc6zzqw8L29wdGlvbj5cblx0XHQ8b3B0aW9uIHZhbHVlPVwiMFwiPs6Rzr3Otc69zrXPgc6zzqw8L29wdGlvbj5cblx0YDtcblxuICAgIHJldHVybiBzZWxlY3RFbG07XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZURhdGVFbG0oaWQpIHtcbiAgICBsZXQgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG5cbiAgICBpbnB1dC5jbGFzc0xpc3QuYWRkKFwiZm9ybS1jb250cm9sXCIsIFwiZGF0ZVwiLCBcImQtaW5saW5lLWJsb2NrXCIsIFwibWwtMVwiLCBcImpzLWRhdGUtc2VhcmNoXCIpO1xuICAgIGlucHV0LmlkID0gaWQ7XG4gICAgaW5wdXQuZGF0YXNldC50b2dnbGUgPSBcImRhdGUtcGlja2VyXCI7XG4gICAgaW5wdXQuZGF0YXNldC5jYW5jZWxDbGFzcyA9IFwiYnRuLXNlY29uZGFyeVwiO1xuICAgIGlucHV0LnN0eWxlLmhlaWdodCA9IFwiMzEuOTZweFwiO1xuICAgIGlucHV0LnN0eWxlLndpZHRoID0gXCIxOTVweFwiO1xuICAgIGlucHV0LnBsYWNlaG9sZGVyID0gXCLOlc+AzrnOu86tzr7PhM61IM63zrzOtc+Bzr/OvM63zr3Or861z4IuLi5cIjtcblxuICAgIHJldHVybiBpbnB1dDtcbn1cblxuZnVuY3Rpb24gY3JlYXRlQ291cnNlVHlwZVNlbGVjdChpZCA9IFwiXCIpIHtcblxuICAgIGNvbnN0IHNlbGVjdEVsbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzZWxlY3RcIik7XG5cbiAgICBzZWxlY3RFbG0uY2xhc3NMaXN0LmFkZChcIm1sLTFcIiwgXCJzZWxlY3QyXCIpO1xuICAgIHNlbGVjdEVsbS5pZCA9IGlkO1xuXG4gICAgc2VsZWN0RWxtLmlubmVySFRNTCA9IGBcblx0XHQ8b3B0aW9uIHZhbHVlPVwiXCI+zozOu861z4Igzr/OuSDOlc66zrTPjM+DzrXOuc+CPC9vcHRpb24+XG5cdFx0PG9wdGlvbiB2YWx1ZT1cIk5vcm1hbFwiPk5vcm1hbDwvb3B0aW9uPlxuXHRcdDxvcHRpb24gdmFsdWU9XCJUcmlhbFwiPlRyaWFsPC9vcHRpb24+XG5cdGA7XG5cbiAgICByZXR1cm4gc2VsZWN0RWxtO1xufVxuXG5mdW5jdGlvbiBzdGFydERhdGUoaW5wdXQpIHtcblxuICAgIGxldCBkYXRlSW5wdXQgPSBpbnB1dDtcblxuICAgIGlmICghZGF0ZUlucHV0IHx8IGRhdGVJbnB1dC52YWx1ZSA9PSBcIlwiKSB7XG4gICAgICAgIHJldHVybiBcIlwiO1xuICAgIH1cblxuICAgIGxldCBkYXRlSW5wdXRWYWx1ZSA9IGRhdGVJbnB1dC52YWx1ZS5zcGxpdChcIiAtIFwiKTtcbiAgICBsZXQgZmlyc3REYXRlID0gZGF0ZUlucHV0VmFsdWVbMF0uc3BsaXQoXCIvXCIpLnJldmVyc2UoKS5qb2luKFwiLVwiKTtcblxuICAgIHJldHVybiBmaXJzdERhdGU7XG59XG5cbmZ1bmN0aW9uIGVuZERhdGUoaW5wdXQpIHtcblxuICAgIGxldCBkYXRlSW5wdXQgPSBpbnB1dDtcblxuICAgIGlmICghZGF0ZUlucHV0IHx8IGRhdGVJbnB1dC52YWx1ZSA9PSBcIlwiKSB7XG4gICAgICAgIHJldHVybiBcIlwiO1xuICAgIH1cblxuICAgIGxldCBkYXRlSW5wdXRWYWx1ZSA9IGRhdGVJbnB1dC52YWx1ZS5zcGxpdChcIiAtIFwiKTtcbiAgICBsZXQgc2Vjb25kRGF0ZSA9IGRhdGVJbnB1dFZhbHVlWzFdLnNwbGl0KFwiL1wiKS5yZXZlcnNlKCkuam9pbihcIi1cIik7XG5cbiAgICByZXR1cm4gc2Vjb25kRGF0ZTtcbn1cblxuZnVuY3Rpb24gcmVzZXRCdWxrKGJ1bGtCdG4sIGNoZWNrYm94KSB7XG5cbiAgICBidWxrQnRuLnRleHQoXCLOlc+AzrnOu86/zrPOrc+CICAoMClcIik7XG4gICAgYnVsa0J0bi5hZGRDbGFzcyhcImJ0bi1zZWNvbmRhcnlcIik7XG4gICAgYnVsa0J0bi5yZW1vdmVDbGFzcyhcImJ0bi13YXJuaW5nXCIpO1xuICAgIGJ1bGtCdG4ucHJvcChcImRpc2FibGVkXCIsIHRydWUpO1xuICAgIGNoZWNrYm94LnByb3AoXCJjaGVja2VkXCIsIGZhbHNlKTtcbn1cblxuZnVuY3Rpb24gcmVzZXRBZGRCdXR0b24oYWRkQnRuLCBjaGVja2JveCkge1xuICAgIGFkZEJ0bi50ZXh0KFwizqDPgc6/z4POuM6uzrrOtyDOlc+AzrnOu86/zrPPjs69ICgwKVwiKTtcbiAgICBhZGRCdG4uYWRkQ2xhc3MoXCJidG4tc2Vjb25kYXJ5XCIpO1xuICAgIGFkZEJ0bi5yZW1vdmVDbGFzcyhcImJ0bi1wcmltYXJ5XCIpO1xuICAgIGFkZEJ0bi5wcm9wKFwiZGlzYWJsZWRcIiwgdHJ1ZSk7XG4gICAgY2hlY2tib3gucHJvcChcImNoZWNrZWRcIiwgZmFsc2UpO1xufVxuXG5cbi8vISMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcbi8vIVx0XHRcdFx0TWVkaWEgTGlicmFyeSBGdW5jdGlvbnNcdFx0XHQjXG4vLyEjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjXG5cbmZ1bmN0aW9uIHBhZ2luYXRpb25IYW5kbGVyKGV2ZW50KSB7XG5cbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgbGV0IGFjdGl2ZVBhZ2UgPSB0aGlzLmhyZWYuc3BsaXQoXCJwYWdlPVwiKVsxXTtcbiAgICBsZXQgc2VhcmNoID0gJChcIiNpbWFnZS1zZWFyY2hcIikudmFsKCk7XG5cbiAgICBwYWdpbmF0aW9uUmVxdWVzdChhY3RpdmVQYWdlLCBzZWFyY2gpO1xuXG59XG5cbmZ1bmN0aW9uIHNlYXJjaEhhbmRsZXIoKSB7XG5cbiAgICBjbGVhclRpbWVvdXQodGltZXIpO1xuXG4gICAgaWYgKHRoaXMudmFsdWUubGVuZ3RoIDwgMyB8fCB0aGlzLnZhbHVlID09IFwiXCIpIHtcbiAgICAgICAgdGltZXIgPSBzZXRUaW1lb3V0KHBhZ2luYXRpb25SZXF1ZXN0LCA4MDAsIDEsIFwiXCIpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHRpbWVyID0gc2V0VGltZW91dChwYWdpbmF0aW9uUmVxdWVzdCwgODAwLCAxLCB0aGlzLnZhbHVlKTtcbiAgICB9XG5cbn1cblxuZnVuY3Rpb24gaW1hZ2VIYW5kbGVyKCkge1xuXG4gICAgbGV0IG1vZGFsID0gJChcIiNnYWxsZXJ5LWNvbnRlbnRcIilbMF07XG4gICAgbGV0IG1vZGVsID0gbW9kYWwuZGF0YXNldC5tb2RlbDtcbiAgICBsZXQgbW9kZWxJZCA9IG1vZGFsLmRhdGFzZXQuaWQ7XG4gICAgbGV0IGVkaXRvcklkID0gbW9kYWwuZGF0YXNldC5lZGl0b3JJZDtcbiAgICBsZXQgdHlwZSA9IG1vZGFsLmRhdGFzZXQudHlwZTtcblxuICAgIGxldCBpbWFnZSA9IHtcbiAgICAgICAgJ2ltZyc6IHtcbiAgICAgICAgICAgIHVybDogYCR7dGhpcy5kYXRhc2V0LmltYWdlU291cmNlfWAsXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAodHlwZSA9PSBcImFydGljbGVcIikge1xuICAgICAgICBBcnRpY2xlRWRpdG9yKGVkaXRvcklkKS5pbWFnZS5pbnNlcnQoaW1hZ2UpO1xuXHR9XG5cdGVsc2UgaWYgKHR5cGUgPT0gXCJyZWRhY3RvclwiKSB7XG4gICAgICAgICRSKCBlZGl0b3JJZCxcbiAgICAgICAgICAgICdpbnNlcnRpb24uaW5zZXJ0SHRtbCcsXG4gICAgICAgICAgICBgPGltZyBjbGFzcz1cImltZy1mbHVpZFwiIHNyYz1cIiR7dGhpcy5kYXRhc2V0LmltYWdlU291cmNlfVwiIGFsdD1cIiR7dGhpcy5kYXRhc2V0Lm5hbWV9XCIgLz5gXG4gICAgICAgICk7XG5cdH1cblx0ZWxzZSBpZiAoIHR5cGUgPT0gXCJnYWxsZXJ5XCIgKSB7XG5cblx0XHQkKFwiI3JlbW92ZS1hbGwtaW1hZ2VzLWJ0blwiKS5yZW1vdmVDbGFzcyhcImQtbm9uZVwiKTtcblx0XHRhZGRUb0dhbGxlcnkobW9kZWwsIG1vZGVsSWQsIHRoaXMuZGF0YXNldC5pbWFnZUlkKTtcblx0XHRyZXR1cm47XG5cdH1cbiAgICBlbHNlIHtcblxuICAgICAgICBjaGFuZ2VDb3ZlclJlcXVlc3QobW9kZWwsIG1vZGVsSWQsIHRoaXMuZGF0YXNldC5pbWFnZVNvdXJjZSk7XG5cbiAgICB9XG5cbiAgICAkKFwiI2dhbGxlcnktbW9kYWxcIikubW9kYWwoJ2hpZGUnKTtcblxufVxuXG5mdW5jdGlvbiBwYWdpbmF0aW9uUmVxdWVzdChhY3RpdmVQYWdlLCBzZWFyY2gpIHtcblxuICAgIGF4aW9zLmdldChgL21lZGlhL2ltYWdlc2AsIHtcbiAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgICBwYWdlOiBhY3RpdmVQYWdlLFxuICAgICAgICAgICAgc2VhcmNoXG4gICAgICAgIH1cbiAgICB9KVxuICAgICAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICAgICAgICBsZXQgZ2FsbGVyeSA9ICQoXCIjZ2FsbGVyeS1jb250ZW50XCIpWzBdXG4gICAgICAgICAgICBnYWxsZXJ5LmlubmVySFRNTCA9IHJlcy5kYXRhO1xuXG4gICAgICAgICAgICBsZXQgcGFnaW5hdGlvbiA9IGdhbGxlcnkuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImpzLWdhbGxlcnktcGFnZS1idG5cIik7XG4gICAgICAgICAgICBsZXQgYWRkQnRucyA9IGdhbGxlcnkuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImpzLWFkZC1pbWFnZVwiKTtcblxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhZGRCdG5zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgYWRkQnRuc1tpXS5yZW1vdmVFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgaW1hZ2VIYW5kbGVyKTtcblx0XHRcdFx0YWRkQnRuc1tpXS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgaW1hZ2VIYW5kbGVyKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwYWdpbmF0aW9uLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgcGFnaW5hdGlvbltpXS5yZW1vdmVFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgcGFnaW5hdGlvbkhhbmRsZXIpO1xuICAgICAgICAgICAgICAgIHBhZ2luYXRpb25baV0uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHBhZ2luYXRpb25IYW5kbGVyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbn1cblxuZnVuY3Rpb24gY2hhbmdlQ292ZXJSZXF1ZXN0KG5hbWVzcGFjZSwgaWQsIHVybCkge1xuXHRpZiAoIHR5cGVvZiBpZCA9PT0gXCJ1bmRlZmluZWRcIiAmJiBuYW1lc3BhY2UgPT0gXCJBcHBcXFxcVXNlclwiICkge1xuXHRcdGxldCBpbWcgPSAkKFwiI2NvdmVyLWltYWdlXCIpWzBdO1xuXHRcdGxldCByZW1vdmVCdG5DbnQgPSAkKFwiI3JlbW92ZS1jb3Zlci1idG5cIikucGFyZW50KCk7XG5cblx0XHRpbWcuc3JjID0gYCR7dXJsfWA7XG5cdFx0aW1nLmNsYXNzTGlzdC5yZW1vdmUoXCJkLW5vbmVcIik7XG5cblx0XHRyZW1vdmVCdG5DbnQucmVtb3ZlQ2xhc3MoXCJkLW5vbmVcIik7XG5cdFx0cmVtb3ZlQnRuQ250LmFkZENsYXNzKFwiZC1mbGV4XCIpO1xuXG4gICAgICAgICQoXCIjY3VzdG9tLWZpbGVcIilbMF0udmFsdWUgPSBgJHt1cmx9YDtcblxuICAgIH0gZWxzZSB7XG4gICAgICAgIGF4aW9zLnBhdGNoKFwiL21lZGlhL2NvdmVyL3JlcGxhY2VcIiwge1xuICAgICAgICAgICAgbmFtZXNwYWNlLCBpZCwgdXJsXG4gICAgICAgIH0pXG4gICAgICAgICAgICAudGhlbihyZXMgPT4ge1xuXG5cdFx0XHRcdGxldCBpbWcgPSAkKFwiI2NvdmVyLWltYWdlXCIpWzBdO1xuXHRcdFx0XHRsZXQgcmVtb3ZlQnRuQ250ID0gJChcIiNyZW1vdmUtY292ZXItYnRuXCIpLnBhcmVudCgpO1xuXG5cdFx0XHRcdGltZy5zcmMgPSByZXMuZGF0YS5pbWdVcmw7XG5cdFx0XHRcdGltZy5jbGFzc0xpc3QucmVtb3ZlKFwiZC1ub25lXCIpO1xuXG5cdFx0XHRcdCQoXCIjY2hhbmdlLWNvdmVyLWJ0blwiKS50ZXh0KFwizpHOu867zrHOs86uXCIpO1xuXHRcdFx0XHQkKFwiI2NvdmVyLXN0YXR1c1wiKS5hZGRDbGFzcyhcImQtbm9uZVwiKTtcblxuXHRcdFx0XHRyZW1vdmVCdG5DbnQucmVtb3ZlQ2xhc3MoXCJkLW5vbmVcIik7XG5cdFx0XHRcdHJlbW92ZUJ0bkNudC5hZGRDbGFzcyhcImQtZmxleFwiKTtcblxuICAgICAgICAgICAgICAgIHRvYXN0QWxlcnQoXCJzdWNjZXNzXCIsIFwizqTOvyBDb3ZlciDOrM67zrvOsc6+zrUhXCIpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC5jYXRjaChlcnIgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICAgICAgICAgICAgdG9hc3RBbGVydCgnZXJyb3InLCBcIs6gzrHPgc6/z4XPg865zqzPg8+EzrfOus61IM66zqzPgM6/zrnOvyDPgM+Bz4zOss67zrfOvM6xIC4uLlwiKTtcbiAgICAgICAgICAgIH0pXG4gICAgfVxufVxuXG5mdW5jdGlvbiBhZGRUb0dhbGxlcnkobmFtZXNwYWNlLCBpZCwgaW1hZ2VJZCkge1xuXG5cdGF4aW9zLnBvc3QoIFwiL21lZGlhL2dhbGxlcnlcIiwge1xuXHRcdG5hbWVzcGFjZSxcblx0XHRtb2RlbElkOiBpZCxcblx0XHRpZHM6IFtpbWFnZUlkXVxuXHR9KVxuXHQudGhlbiggcmVzID0+IHtcblxuXHRcdGxldCBnYWxsZXJ5ID0gJChcIiNnYWxsZXJ5LWNudFwiKTtcblx0XHRnYWxsZXJ5Lmh0bWwocmVzLmRhdGEpO1xuXG5cdFx0bGV0IGNsb3NlQnRucyA9IGdhbGxlcnkuZmluZChcIi5qcy1yZW1vdmUtaW1hZ2VcIik7XG5cdFx0Y2xvc2VCdG5zLm9uKFwiY2xpY2tcIiwgcmVtb3ZlSW1hZ2VIYW5kbGVyKTtcblxuXHRcdHRvYXN0QWxlcnQoXCJzdWNjZXNzXCIsIFwizpcgzrXOuc66z4zOvc6xIM+Az4HOv8+Dz4TOrc64zrfOus61LlwiKTtcblx0XHRnYWxsZXJ5Lm1vZGFsKFwiaGlkZVwiKTtcblxuXHRcdGxldCBidWxrID0gJChcIiNnYWxsZXJ5LWJ1bGstYWN0aW9uLWJ0blwiKTtcblx0XHRsZXQgY2hlY2tib3hlcyA9ICQoXCIuanMtZ2FsbGVyeS1jaGVja2JveFwiKTtcblxuXHRcdHJlc2V0R2FsbGVyeUJ0bnMoIGJ1bGssIGNoZWNrYm94ZXMgKTtcblx0fSlcblx0LmNhdGNoKCBlcnIgPT4ge1xuXHRcdGNvbnNvbGUubG9nKGVycik7XG5cdFx0dG9hc3RBbGVydCgnZXJyb3InLCBcIs6gzrHPgc6/z4XPg865zqzPg8+EzrfOus61IM66zqzPgM6/zrnOvyDPgM+Bz4zOss67zrfOvM6xIC4uLlwiKTtcblx0fSlcbn1cblxuXG5mdW5jdGlvbiByZW1vdmVJbWFnZUhhbmRsZXIoKSB7XG5cdFN3YWwuZmlyZSh7XG5cdFx0aWNvbjogJ2luZm8nLFxuXHRcdHRpdGxlOiAnzqDPgc6/z4POv8+Hzq4hJyxcblx0XHR0ZXh0OiAnzpcgzrXOuc66z4zOvc6xIM64zrEgzrHPhs6xzrnPgc61zrjOtc6vIM6xz4DOvyDPhM6/IEdhbGxlcnkuJyxcblx0XHRzaG93Q2FuY2VsQnV0dG9uOiB0cnVlLFxuXHRcdGNvbmZpcm1CdXR0b25Db2xvcjogJyM1MzZkZTYnLFxuXHRcdGNvbmZpcm1CdXR0b25UZXh0OiBgzp3Osc65LCDOsc+GzrHOr8+BzrXPg863IWAsXG5cdFx0Y2FuY2VsQnV0dG9uVGV4dDogXCLOhs66z4XPgc6/XCJcblx0fSlcblx0LnRoZW4oKHJlc3VsdCkgPT4ge1xuXG5cdFx0aWYgKCByZXN1bHQuaXNDb25maXJtZWQgKSB7XG5cdFx0XHRyZW1vdmVJbWFnZXMoIFt0aGlzLmRhdGFzZXQuaW1hZ2VJZF0gKTtcblx0XHR9XG5cblx0fSlcbn1cblxuZnVuY3Rpb24gcmVtb3ZlSW1hZ2VzKCBpZHMgKSB7XG5cblx0bGV0IGdhbGxlcnkgPSAkKFwiI2dhbGxlcnktY250XCIpWzBdO1xuXHRsZXQgbmFtZXNwYWNlID0gZ2FsbGVyeS5kYXRhc2V0Lm5hbWVzcGFjZTtcblx0bGV0IG1vZGVsSWQgPSBnYWxsZXJ5LmRhdGFzZXQubW9kZWxJZDtcblxuXHRheGlvcy5wb3N0KFwiL21lZGlhL2dhbGxlcnktcmVtb3ZlXCIsIHtcblx0XHRuYW1lc3BhY2UsIG1vZGVsSWQsIGlkc1xuXHR9KVxuXHQudGhlbiggcmVzID0+IHtcblxuXHRcdGxldCBnYWxsZXJ5ID0gJChcIiNnYWxsZXJ5LWNudFwiKTtcblx0XHRnYWxsZXJ5Lmh0bWwocmVzLmRhdGEpO1xuXG5cdFx0bGV0IGNsb3NlQnRucyA9IGdhbGxlcnkuZmluZChcIi5qcy1yZW1vdmUtaW1hZ2VcIik7XG5cdFx0Y2xvc2VCdG5zLm9uKFwiY2xpY2tcIiwgcmVtb3ZlSW1hZ2VIYW5kbGVyKTtcblxuXHRcdGlmICggY2xvc2VCdG5zLmxlbmd0aCA9PSAwICkge1xuXHRcdFx0JChcIiNyZW1vdmUtYWxsLWltYWdlcy1idG5cIikuYWRkQ2xhc3MoXCJkLW5vbmVcIik7XG5cdFx0fVxuXG5cdH0pXG5cdC5jYXRjaCggZXJyID0+IHtcblx0XHRjb25zb2xlLmxvZyhlcnIpO1xuXHRcdHV0aWxpdGllcy50b2FzdEFsZXJ0KCAnZXJyb3InLCBcIs6gzrHPgc6/z4XPg865zqzPg8+EzrfOus61IM66zqzPgM6/zrnOvyDPgM+Bz4zOss67zrfOvM6xIC4uLlwiICk7XG5cdH0pXG5cbn1cblxuXG5cbmZ1bmN0aW9uIHJlc2V0R2FsbGVyeUJ0bnMoIGJ1bGssIGNoZWNrYm94ZXMgKSB7XG5cblx0YnVsay50ZXh0KFwizpXPgM65zrvOv86zzq3PgiAoMClcIilcblx0YnVsay5wcm9wKFwiZGlzYWJsZWRcIiwgdHJ1ZSk7XG5cdGJ1bGsucmVtb3ZlQ2xhc3MoXCJidG4td2FybmluZ1wiKTtcblx0YnVsay5hZGRDbGFzcyhcImJ0bi1zZWNvbmRhcnlcIik7XG5cblx0Zm9yIChsZXQgaSA9IDA7IGkgPCBjaGVja2JveGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0Y2hlY2tib3hlc1tpXS5jaGVja2VkID0gZmFsc2U7XG5cdH1cblxufVxuXG4vLyEjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcbi8vIVx0XHRcdFx0TWVkaWEgTGlicmFyeSBGdW5jdGlvbnMgRW5kXHRcdFx0XHQjXG4vLyEjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcblxuZXhwb3J0IGRlZmF1bHQge1xuICAgIHRvYXN0QWxlcnQsXG4gICAgbWFpbkNoZWNrYm94U3dpdGNoZXIsXG4gICAgbWlub3JDaGVja2JveFN3aXRjaGVyLFxuICAgIGZpbHRlckJ1dHRvbixcbiAgICB0YWJsZUxvY2FsZSxcbiAgICBjaGFuZ2VJbnB1dEhpZGRlbixcbiAgICByZWRhY3RvckNvbmZpZyxcbiAgICBjcmVhdGVTdGF0ZVNlbGVjdCxcbiAgICBkYXRlUGlja2VyQ29uZmlnLFxuICAgIHRvYXN0QWxlcnREZWxldGUsXG4gICAgZmlsdGVyU3R5bGUsXG4gICAgY3JlYXRlRGF0ZUVsbSxcbiAgICBzdGFydERhdGUsXG4gICAgZW5kRGF0ZSxcbiAgICByZXNldEJ1bGssXG4gICAgcmVzZXRBZGRCdXR0b24sXG4gICAgY3JlYXRlQ291cnNlVHlwZVNlbGVjdCxcbiAgICBwYWdpbmF0aW9uSGFuZGxlcixcbiAgICBzZWFyY2hIYW5kbGVyLFxuICAgIGltYWdlSGFuZGxlcixcblx0cGFnaW5hdGlvblJlcXVlc3QsXG5cdHJlc2V0R2FsbGVyeUJ0bnMsXG5cdHJlbW92ZUltYWdlSGFuZGxlcixcblx0cmVtb3ZlSW1hZ2VzLFxuXHRhcnRpY2xlQ29uZmlnLFxuXHRBTExPV0VEVFlQRVNcbn1cblxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/js/dashboard/main.js\n");

/***/ }),

/***/ 17:
/*!************************************************************!*\
  !*** multi ./resources/js/dashboard/mail/compose-email.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! C:\Users\arxi-\OneDrive\Υπολογιστής\web-developer\laravel-project\lmsdemo\resources\js\dashboard\mail\compose-email.js */"./resources/js/dashboard/mail/compose-email.js");


/***/ })

/******/ });