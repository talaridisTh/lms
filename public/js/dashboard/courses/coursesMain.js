/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 3);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/js/dashboard/courses/coursesMain.js":
/*!*******************************************************!*\
  !*** ./resources/js/dashboard/courses/coursesMain.js ***!
  \*******************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _main__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../main */ \"./resources/js/dashboard/main.js\");\n//!######################################\n//! \t\t\t\tImports\t\t\t\t#\n//!######################################\n //!##########################################\n//! \t\t\tEventListeners\t\t\t\t#\n//!##########################################\n\n$(\".js-bulk-status\").on(\"click\", function () {\n  _main__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toastAlert(\"info\", \"Under Development\");\n});\n$(\"#clone-course-modal\").on('show.bs.modal', function () {\n  if (!event) {\n    return;\n  }\n\n  var button = event.target;\n  var courseId = button.dataset.courseId;\n  document.getElementById(\"cloning-course-id\").value = courseId;\n});\n$(\"#select-all-courses\").change(function () {\n  var minorCheckboxes = $(\".js-course-checkbox\");\n  var bulkBtn = $(\"#course-bulk-action-btn\")[0];\n  _main__WEBPACK_IMPORTED_MODULE_0__[\"default\"].minorCheckboxSwitcher(this, minorCheckboxes, bulkBtn);\n});\n$(\"#submit-form-btn\").on(\"click\", function () {\n  $(\"#new-course-form\").submit();\n});\n$(\"#cover-input\").change(function () {\n  $(\"#cover-input-label\")[0].textContent = this.value.replace(\"C:\\\\fakepath\\\\\", \"\");\n}); //!##########################################\n//! \t\t\t\tDatatables\t\t\t\t#\n//!##########################################\n\nvar coursesDatatable = $(\"#courses-datatable\").DataTable({\n  order: [6, \"desc\"],\n  processing: true,\n  serverSide: true,\n  autoWidth: false,\n  columnDefs: [{\n    targets: 7,\n    width: \"200px\"\n  }],\n  ajax: {\n    url: \"/course-datatables/main\",\n    headers: {\n      'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n    },\n    type: \"post\",\n    data: function data(d) {\n      return $.extend({}, d, {\n        startDate: startDate($(\"#course-date-range\")[0]),\n        endDate: endDate($(\"#course-date-range\")[0])\n      });\n    }\n  },\n  columns: [{\n    data: 'action',\n    name: 'action',\n    className: \"align-middle text-center\",\n    orderable: false\n  }, {\n    data: 'title',\n    name: 'title'\n  }, {\n    data: 'toggle',\n    name: 'status',\n    className: \"align-middle text-center\"\n  }, {\n    data: 'curator',\n    name: 'curator',\n    className: \"align-middle text-center\",\n    visible: false\n  }, {\n    data: 'topics',\n    name: 'topics',\n    className: \"align-middle text-wrap min-width-200\"\n  }, {\n    data: 'version',\n    name: 'version',\n    className: \"align-middle text-center\"\n  }, {\n    visible: false,\n    data: 'updated_at',\n    name: 'updated_at',\n    className: \"align-middle text-center cursor-default\",\n    render: function render(data) {\n      var date = new Date(data);\n      var day = date.toLocaleDateString().replace(/[/]/g, \"-\");\n      var hours = \"\".concat(date.getHours()).padStart(2, \"0\");\n      var minutes = \"\".concat(date.getMinutes()).padStart(2, \"0\");\n      var time = \"\".concat(hours, \":\").concat(minutes);\n      return \"<p class=\\\"mb-0\\\">\".concat(day, \"</p><p class=\\\"mb-0\\\">\").concat(time, \"</p>\");\n    }\n  }, {\n    data: 'publish',\n    name: \"publish_at\",\n    className: \"align-middle text-center cursor-default min-width-170\",\n    searchable: false\n  }, {\n    data: 'status',\n    name: 'status',\n    visible: false\n  }, {\n    data: 'updated_at',\n    name: 'updated_at',\n    visible: false\n  }],\n  language: _main__WEBPACK_IMPORTED_MODULE_0__[\"default\"].tableLocale,\n  fnInitComplete: function fnInitComplete(oSettings, json) {\n    var lenthSelection = $(\"select[name='courses-datatable_length']\");\n    lenthSelection.addClass(\"select2\");\n    lenthSelection.select2({\n      minimumResultsForSearch: -1\n    });\n  },\n  drawCallback: function drawCallback() {\n    $(\".dataTables_paginate > .pagination\").addClass(\"pagination-rounded\");\n    $(\".dataTables_wrapper > .row:first-child > div\").removeClass(\"col-sm-12 col-md-6\");\n    $(\".dataTables_wrapper > .row:first-child > div\").addClass(\"col-lg-12 col-xl-6 d-md-flex justify-content-md-center d-xl-block\");\n    $(\".js-remove-table-classes > thead > tr > th\").removeClass(\"cursor-pointer\");\n    toggleStatus();\n    checkeBoxesEventListener();\n    cloneEventListener();\n    $(\".js-publish-cover\").on(\"click\", publishHandler);\n    _main__WEBPACK_IMPORTED_MODULE_0__[\"default\"].resetBulk($(\"#course-bulk-action-btn\"), $(\"#select-all-courses\"));\n  }\n}); //! #################################################\n//!\t\tDatatable event initialazion functions\t\t#\n//! #################################################\n\nvar pickerConfig = {\n  singleDatePicker: true,\n  drops: \"auto\",\n  opens: \"center\",\n  timePicker: true,\n  autoUpdateInput: false,\n  timePicker24Hour: true,\n  cancelButtonClasses: \"btn-secondary\",\n  locale: {\n    format: \"DD-MM-YYYY H:mm\",\n    cancelLabel: \"Cancel\"\n  }\n};\n\nfunction publishHandler() {\n  var cover = this;\n  var td = this.parentElement;\n  var dateInput = td.getElementsByClassName(\"js-publish-picker\")[0];\n  this.classList.add(\"d-none\");\n  dateInput.classList.remove(\"d-none\");\n  $(dateInput).daterangepicker(pickerConfig);\n  $(dateInput).on(\"apply.daterangepicker\", publishApplyHandler);\n  $(dateInput).on(\"hide.daterangepicker\", publishHideHandler.bind(this, cover, dateInput));\n  dateInput.focus();\n}\n\nfunction cloneEventListener() {\n  var cloneBtns = $(\".js-course-clone-btn\");\n  cloneBtns.on(\"click\", function () {\n    $('#clone-course-modal').modal('show');\n  });\n}\n\nfunction checkeBoxesEventListener() {\n  var minorCheckboxes = $(\".js-course-checkbox\");\n  var mainCheckbox = $(\"#select-all-courses\")[0];\n  var bulkBtn = $(\"#course-bulk-action-btn\")[0];\n  minorCheckboxes.unbind();\n  minorCheckboxes.change(function () {\n    _main__WEBPACK_IMPORTED_MODULE_0__[\"default\"].mainCheckboxSwitcher(mainCheckbox, minorCheckboxes, bulkBtn);\n  });\n}\n\nfunction toggleStatus() {\n  $('.js-toggle').unbind();\n  $('.js-toggle').on('change', function () {\n    var _this = this;\n\n    axios.patch('/course-ajax/status', {\n      courseId: this.dataset.courseId,\n      status: this.checked\n    }).then(function (res) {\n      var row = _this.findParent(2);\n\n      var dateElm = row.getElementsByClassName(\"js-date\")[0];\n      var timeElm = row.getElementsByClassName(\"js-time\")[0];\n      var inputElm = row.getElementsByClassName(\"js-publish-picker\")[0];\n      var badge = row.getElementsByClassName(\"js-badge\")[0];\n      var date = res.data.date.split(\"-\").reverse().join(\"-\");\n      var time = res.data.time;\n      var now = new Date();\n      date = new Date(\"\".concat(date, \" \").concat(time));\n\n      if (_this.checked) {\n        if (now > date) {\n          badge.classList.remove(\"badge-outline-dark\", \"badge-outline-danger\");\n          badge.classList.add(\"badge-outline-success\");\n          badge.textContent = \"Published\";\n        } else {\n          badge.classList.remove(\"badge-outline-primary\", \"badge-outline-danger\");\n          badge.classList.add(\"badge-outline-primary\");\n          badge.textContent = \"Scheduled\";\n        }\n      } else {\n        badge.classList.remove(\"badge-outline-primary\", \"badge-outline-dark\");\n        badge.classList.add(\"badge-outline-danger\");\n        badge.textContent = \"Draft\";\n      }\n\n      dateElm.textContent = res.data.date;\n      timeElm.textContent = res.data.time;\n      inputElm.value = \"\".concat(res.data.date, \" \").concat(res.data.time);\n      var icon = _this.checked ? \"success\" : \"info\";\n      var message = _this.checked ? \"Ενεργοποιήθηκε\" : \"Απενεργοποιήθηκε\";\n      _main__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toastAlert(icon, message);\n    })[\"catch\"](function (err) {\n      console.log(err);\n      _main__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toastAlert(\"error\", \"Παρουσιάστηκε κάποιο πρόβλημα ...\");\n    });\n  });\n} //!##########################################\n//!\t\t\t\tDatatable filters\t\t\t#\n//!##########################################\n\n\nvar searchFieldLabel = $(\"#courses-datatable_filter > label > input\")[0];\nvar dateInput = createDateElm();\ndateInput.appendBefore(searchFieldLabel);\ndateInput.addEventListener(\"input\", function () {\n  this.value = this.value.replace(/[^0-9]/g, \"\").replace(/^(\\d{2})?(\\d{2})?(\\d{4})?(\\d{2})?(\\d{2})?(\\d{4})?/g, '$1/$2/$3 - $4/$5/$6').substr(0, 23);\n});\nvar dateRange = $(\"#course-date-range\");\ndateRange.daterangepicker(_main__WEBPACK_IMPORTED_MODULE_0__[\"default\"].datePickerConfig);\ndateRange.on(\"apply.daterangepicker\", function (event, picker) {\n  var startDate = picker.startDate.format('DD/MM/YYYY');\n  var endDate = picker.endDate.format('DD/MM/YYYY');\n  this.classList.add(\"select2-selected\");\n  this.value = \"\".concat(startDate, \" - \").concat(endDate);\n  coursesDatatable.ajax.reload();\n});\ndateRange.on('cancel.daterangepicker', function (event, picker) {\n  this.classList.remove(\"select2-selected\");\n  dateInput.value = \"\";\n  coursesDatatable.ajax.reload();\n});\nvar tablesLengthLabel = $(\"#courses-datatable_length > label\")[0];\nvar topicFIlter = $(\"#topic-filter\")[0];\nvar activeCoursesFilter = _main__WEBPACK_IMPORTED_MODULE_0__[\"default\"].createStateSelect(\"course-state-select\");\ntablesLengthLabel.append(activeCoursesFilter);\n$(\"#course-state-select\").select2({\n  minimumResultsForSearch: -1\n});\n$(\"#course-state-select\").change(function () {\n  var label = $(\"#select2-course-state-select-container\")[0];\n  _main__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filterStyle(label, this.value);\n  coursesDatatable.column(8).search(this.value).draw();\n});\ntablesLengthLabel.append(topicFIlter);\n$(\"#topic-filter\").select2({});\n$(\"#topic-filter\").change(function () {\n  var label = $(\"#select2-topic-filter-container\")[0];\n  _main__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filterStyle(label, this.value); //! mia stili einai krimeni gi auto kanoume search tin stili 5\n  //! kai oxi tin 4\n\n  coursesDatatable.column(4).search(this.value).draw();\n});\nvar courseTypesSelect = _main__WEBPACK_IMPORTED_MODULE_0__[\"default\"].createCourseTypeSelect(\"course-type-selection\");\ntablesLengthLabel.append(courseTypesSelect);\n$(\"#course-type-selection\").select2({\n  minimumResultsForSearch: -1\n});\n$(\"#course-type-selection\").change(function () {\n  var label = $(\"#select2-course-type-selection-container\")[0];\n  _main__WEBPACK_IMPORTED_MODULE_0__[\"default\"].filterStyle(label, this.value);\n  coursesDatatable.column(5).search(this.value).draw();\n}); //!##########################################\n//!\t\t\t\tscript functions\t\t\t#\n//!##########################################\n\nfunction datetime(date) {\n  var temp = date.split(\" \");\n  return {\n    day: temp[0],\n    time: temp[1]\n  };\n}\n\nfunction publishCoverUpdate(row, date, status) {\n  var dateElm = row.getElementsByClassName(\"js-date\")[0];\n  var timeElm = row.getElementsByClassName(\"js-time\")[0];\n  var inputElm = row.getElementsByClassName(\"js-publish-picker\")[0];\n  var badge = row.getElementsByClassName(\"js-badge\")[0];\n  var day = date.day;\n  var time = date.time;\n  var now = new Date();\n  date = new Date(\"\".concat(day, \" \").concat(time));\n\n  if (status == 1) {\n    if (now > date) {\n      badge.classList.remove(\"badge-outline-primary\", \"badge-outline-danger\");\n      badge.classList.add(\"badge-outline-success\");\n      badge.textContent = \"Published\";\n    } else {\n      badge.classList.remove(\"badge-outline-success\", \"badge-outline-danger\");\n      badge.classList.add(\"badge-outline-primary\");\n      badge.textContent = \"Scheduled\";\n    }\n  } else {\n    badge.classList.remove(\"badge-outline-primary\", \"badge-outline-success\");\n    badge.classList.add(\"badge-outline-danger\");\n    badge.textContent = \"Draft\";\n  }\n\n  day = day.split(\"-\").reverse().join(\"-\");\n  dateElm.textContent = day;\n  timeElm.textContent = time;\n  inputElm.value = \"\".concat(day, \" \").concat(time);\n}\n\nfunction publishApplyHandler(ev, picker) {\n  var _this2 = this;\n\n  var date = picker.startDate.format('YYYY-MM-DD H:mm');\n  var courseId = this.dataset.courseId;\n  axios.patch(\"/course-ajax/\".concat(courseId, \"/edit-publish\"), {\n    date: date\n  }).then(function (res) {\n    var row = _this2.findParent(2);\n\n    var date = datetime(res.data.publish);\n    publishCoverUpdate(row, date, res.data.status);\n  })[\"catch\"](function (err) {\n    console.log(err);\n    _main__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toastAlert(\"error\", \"Κάποιο σφάλμα παρουσιάστηκε...\");\n  });\n}\n\nfunction publishHideHandler(cover, dateInput) {\n  setTimeout(function () {\n    cover.classList.remove(\"d-none\");\n    dateInput.classList.add(\"d-none\");\n    $(dateInput).data('daterangepicker').remove();\n  }, 50);\n}\n\nfunction createDateElm() {\n  var input = document.createElement(\"input\");\n  input.classList.add(\"form-control\", \"date\", \"d-inline-block\", \"ml-1\");\n  input.id = \"course-date-range\";\n  input.dataset.toggle = \"date-picker\";\n  input.dataset.cancelClass = \"btn-secondary\";\n  input.style.height = \"31.96px\";\n  input.style.width = \"195px\";\n  input.placeholder = \"Επιλέξτε ημερομηνίες...\";\n  return input;\n}\n\nfunction startDate(input) {\n  var dateInput = input;\n\n  if (!dateInput || dateInput.value == \"\") {\n    return \"\";\n  }\n\n  var dateInputValue = dateInput.value.split(\" - \");\n  var firstDate = dateInputValue[0].split(\"/\").reverse().join(\"-\");\n  return firstDate;\n}\n\nfunction endDate(input) {\n  var dateInput = input;\n\n  if (!dateInput || dateInput.value == \"\") {\n    return \"\";\n  }\n\n  var dateInputValue = dateInput.value.split(\" - \");\n  var secondDate = dateInputValue[1].split(\"/\").reverse().join(\"-\");\n  return secondDate;\n} //!##########################################\n//!\t\t\t\tInitializations\t\t\t\t#\n//!##########################################\n\n\n$R(\"#summary\", _main__WEBPACK_IMPORTED_MODULE_0__[\"default\"].redactorConfig);\n$R(\"#description\", _main__WEBPACK_IMPORTED_MODULE_0__[\"default\"].redactorConfig);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvZGFzaGJvYXJkL2NvdXJzZXMvY291cnNlc01haW4uanM/ZjAyMiJdLCJuYW1lcyI6WyIkIiwib24iLCJ1dGlsaXRpZXMiLCJ0b2FzdEFsZXJ0IiwiZXZlbnQiLCJidXR0b24iLCJ0YXJnZXQiLCJjb3Vyc2VJZCIsImRhdGFzZXQiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwidmFsdWUiLCJjaGFuZ2UiLCJtaW5vckNoZWNrYm94ZXMiLCJidWxrQnRuIiwibWlub3JDaGVja2JveFN3aXRjaGVyIiwic3VibWl0IiwidGV4dENvbnRlbnQiLCJyZXBsYWNlIiwiY291cnNlc0RhdGF0YWJsZSIsIkRhdGFUYWJsZSIsIm9yZGVyIiwicHJvY2Vzc2luZyIsInNlcnZlclNpZGUiLCJhdXRvV2lkdGgiLCJjb2x1bW5EZWZzIiwidGFyZ2V0cyIsIndpZHRoIiwiYWpheCIsInVybCIsImhlYWRlcnMiLCJhdHRyIiwidHlwZSIsImRhdGEiLCJkIiwiZXh0ZW5kIiwic3RhcnREYXRlIiwiZW5kRGF0ZSIsImNvbHVtbnMiLCJuYW1lIiwiY2xhc3NOYW1lIiwib3JkZXJhYmxlIiwidmlzaWJsZSIsInJlbmRlciIsImRhdGUiLCJEYXRlIiwiZGF5IiwidG9Mb2NhbGVEYXRlU3RyaW5nIiwiaG91cnMiLCJnZXRIb3VycyIsInBhZFN0YXJ0IiwibWludXRlcyIsImdldE1pbnV0ZXMiLCJ0aW1lIiwic2VhcmNoYWJsZSIsImxhbmd1YWdlIiwidGFibGVMb2NhbGUiLCJmbkluaXRDb21wbGV0ZSIsIm9TZXR0aW5ncyIsImpzb24iLCJsZW50aFNlbGVjdGlvbiIsImFkZENsYXNzIiwic2VsZWN0MiIsIm1pbmltdW1SZXN1bHRzRm9yU2VhcmNoIiwiZHJhd0NhbGxiYWNrIiwicmVtb3ZlQ2xhc3MiLCJ0b2dnbGVTdGF0dXMiLCJjaGVja2VCb3hlc0V2ZW50TGlzdGVuZXIiLCJjbG9uZUV2ZW50TGlzdGVuZXIiLCJwdWJsaXNoSGFuZGxlciIsInJlc2V0QnVsayIsInBpY2tlckNvbmZpZyIsInNpbmdsZURhdGVQaWNrZXIiLCJkcm9wcyIsIm9wZW5zIiwidGltZVBpY2tlciIsImF1dG9VcGRhdGVJbnB1dCIsInRpbWVQaWNrZXIyNEhvdXIiLCJjYW5jZWxCdXR0b25DbGFzc2VzIiwibG9jYWxlIiwiZm9ybWF0IiwiY2FuY2VsTGFiZWwiLCJjb3ZlciIsInRkIiwicGFyZW50RWxlbWVudCIsImRhdGVJbnB1dCIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJjbGFzc0xpc3QiLCJhZGQiLCJyZW1vdmUiLCJkYXRlcmFuZ2VwaWNrZXIiLCJwdWJsaXNoQXBwbHlIYW5kbGVyIiwicHVibGlzaEhpZGVIYW5kbGVyIiwiYmluZCIsImZvY3VzIiwiY2xvbmVCdG5zIiwibW9kYWwiLCJtYWluQ2hlY2tib3giLCJ1bmJpbmQiLCJtYWluQ2hlY2tib3hTd2l0Y2hlciIsImF4aW9zIiwicGF0Y2giLCJzdGF0dXMiLCJjaGVja2VkIiwidGhlbiIsInJlcyIsInJvdyIsImZpbmRQYXJlbnQiLCJkYXRlRWxtIiwidGltZUVsbSIsImlucHV0RWxtIiwiYmFkZ2UiLCJzcGxpdCIsInJldmVyc2UiLCJqb2luIiwibm93IiwiaWNvbiIsIm1lc3NhZ2UiLCJlcnIiLCJjb25zb2xlIiwibG9nIiwic2VhcmNoRmllbGRMYWJlbCIsImNyZWF0ZURhdGVFbG0iLCJhcHBlbmRCZWZvcmUiLCJhZGRFdmVudExpc3RlbmVyIiwic3Vic3RyIiwiZGF0ZVJhbmdlIiwiZGF0ZVBpY2tlckNvbmZpZyIsInBpY2tlciIsInJlbG9hZCIsInRhYmxlc0xlbmd0aExhYmVsIiwidG9waWNGSWx0ZXIiLCJhY3RpdmVDb3Vyc2VzRmlsdGVyIiwiY3JlYXRlU3RhdGVTZWxlY3QiLCJhcHBlbmQiLCJsYWJlbCIsImZpbHRlclN0eWxlIiwiY29sdW1uIiwic2VhcmNoIiwiZHJhdyIsImNvdXJzZVR5cGVzU2VsZWN0IiwiY3JlYXRlQ291cnNlVHlwZVNlbGVjdCIsImRhdGV0aW1lIiwidGVtcCIsInB1Ymxpc2hDb3ZlclVwZGF0ZSIsImV2IiwicHVibGlzaCIsInNldFRpbWVvdXQiLCJpbnB1dCIsImNyZWF0ZUVsZW1lbnQiLCJpZCIsInRvZ2dsZSIsImNhbmNlbENsYXNzIiwic3R5bGUiLCJoZWlnaHQiLCJwbGFjZWhvbGRlciIsImRhdGVJbnB1dFZhbHVlIiwiZmlyc3REYXRlIiwic2Vjb25kRGF0ZSIsIiRSIiwicmVkYWN0b3JDb25maWciXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7Q0FHQTtBQUNBO0FBQ0E7O0FBRUFBLENBQUMsQ0FBQyxpQkFBRCxDQUFELENBQXFCQyxFQUFyQixDQUF3QixPQUF4QixFQUFpQyxZQUFXO0FBQzNDQywrQ0FBUyxDQUFDQyxVQUFWLENBQXFCLE1BQXJCLEVBQTZCLG1CQUE3QjtBQUNBLENBRkQ7QUFJQUgsQ0FBQyxDQUFDLHFCQUFELENBQUQsQ0FBeUJDLEVBQXpCLENBQTZCLGVBQTdCLEVBQThDLFlBQVc7QUFFeEQsTUFBSyxDQUFDRyxLQUFOLEVBQWM7QUFDYjtBQUNBOztBQUVELE1BQUlDLE1BQU0sR0FBR0QsS0FBSyxDQUFDRSxNQUFuQjtBQUNBLE1BQUlDLFFBQVEsR0FBR0YsTUFBTSxDQUFDRyxPQUFQLENBQWVELFFBQTlCO0FBRUFFLFVBQVEsQ0FBQ0MsY0FBVCxDQUF3QixtQkFBeEIsRUFBNkNDLEtBQTdDLEdBQXFESixRQUFyRDtBQUVBLENBWEQ7QUFhQVAsQ0FBQyxDQUFDLHFCQUFELENBQUQsQ0FBeUJZLE1BQXpCLENBQWlDLFlBQVc7QUFDM0MsTUFBSUMsZUFBZSxHQUFHYixDQUFDLENBQUMscUJBQUQsQ0FBdkI7QUFDQSxNQUFJYyxPQUFPLEdBQUdkLENBQUMsQ0FBQyx5QkFBRCxDQUFELENBQTZCLENBQTdCLENBQWQ7QUFFQUUsK0NBQVMsQ0FBQ2EscUJBQVYsQ0FBZ0MsSUFBaEMsRUFBc0NGLGVBQXRDLEVBQXVEQyxPQUF2RDtBQUVBLENBTkQ7QUFRQWQsQ0FBQyxDQUFDLGtCQUFELENBQUQsQ0FBc0JD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dEIsQ0FBckI7QUFDQSxNQUFJNkMsU0FBUyxHQUFHRCxjQUFjLENBQUMsQ0FBRCxDQUFkLENBQWtCNUMsS0FBbEIsQ0FBd0IsR0FBeEIsRUFBNkJDLE9BQTdCLEdBQXVDQyxJQUF2QyxDQUE0QyxHQUE1QyxDQUFoQjtBQUVBLFNBQU8yQyxTQUFQO0FBQ0E7O0FBRUQsU0FBU3hILE9BQVQsQ0FBa0IrRyxLQUFsQixFQUEwQjtBQUV6QixNQUFJL0QsU0FBUyxHQUFHK0QsS0FBaEI7O0FBRUEsTUFBSyxDQUFDL0QsU0FBRCxJQUFjQSxTQUFTLENBQUMxRSxLQUFWLElBQW1CLEVBQXRDLEVBQTJDO0FBQzFDLFdBQU8sRUFBUDtBQUNBOztBQUVELE1BQUlpSixjQUFjLEdBQUd2RSxTQUFTLENBQUMxRSxLQUFWLENBQWdCcUcsS0FBaEIsQ0FBc0IsS0FBdEIsQ0FBckI7QUFDQSxNQUFJOEMsVUFBVSxHQUFHRixjQUFjLENBQUMsQ0FBRCxDQUFkLENBQWtCNUMsS0FBbEIsQ0FBd0IsR0FBeEIsRUFBNkJDLE9BQTdCLEdBQXVDQyxJQUF2QyxDQUE0QyxHQUE1QyxDQUFqQjtBQUVBLFNBQU80QyxVQUFQO0FBQ0EsQyxDQUVEO0FBQ0E7QUFDQTs7O0FBRUFDLEVBQUUsQ0FBQyxVQUFELEVBQWE3Siw2Q0FBUyxDQUFDOEosY0FBdkIsQ0FBRjtBQUVBRCxFQUFFLENBQUMsY0FBRCxFQUFpQjdKLDZDQUFTLENBQUM4SixjQUEzQixDQUFGIiwiZmlsZSI6Ii4vcmVzb3VyY2VzL2pzL2Rhc2hib2FyZC9jb3Vyc2VzL2NvdXJzZXNNYWluLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8hIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcclxuLy8hIFx0XHRcdFx0SW1wb3J0c1x0XHRcdFx0I1xyXG4vLyEjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1xyXG5pbXBvcnQgdXRpbGl0aWVzIGZyb20gJy4uL21haW4nO1xyXG5cclxuLy8hIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjXHJcbi8vISBcdFx0XHRFdmVudExpc3RlbmVyc1x0XHRcdFx0I1xyXG4vLyEjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcclxuXHJcbiQoXCIuanMtYnVsay1zdGF0dXNcIikub24oXCJjbGlja1wiLCBmdW5jdGlvbigpIHtcclxuXHR1dGlsaXRpZXMudG9hc3RBbGVydChcImluZm9cIiwgXCJVbmRlciBEZXZlbG9wbWVudFwiKVxyXG59KVxyXG5cclxuJChcIiNjbG9uZS1jb3Vyc2UtbW9kYWxcIikub24oICdzaG93LmJzLm1vZGFsJywgZnVuY3Rpb24oKSB7XHJcblxyXG5cdGlmICggIWV2ZW50ICkge1xyXG5cdFx0cmV0dXJuO1xyXG5cdH1cclxuXHJcblx0bGV0IGJ1dHRvbiA9IGV2ZW50LnRhcmdldDtcclxuXHRsZXQgY291cnNlSWQgPSBidXR0b24uZGF0YXNldC5jb3Vyc2VJZDtcclxuXHJcblx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjbG9uaW5nLWNvdXJzZS1pZFwiKS52YWx1ZSA9IGNvdXJzZUlkO1xyXG5cclxufSk7XHJcblxyXG4kKFwiI3NlbGVjdC1hbGwtY291cnNlc1wiKS5jaGFuZ2UoIGZ1bmN0aW9uKCkge1xyXG5cdGxldCBtaW5vckNoZWNrYm94ZXMgPSAkKFwiLmpzLWNvdXJzZS1jaGVja2JveFwiKTtcclxuXHRsZXQgYnVsa0J0biA9ICQoXCIjY291cnNlLWJ1bGstYWN0aW9uLWJ0blwiKVswXTtcclxuXHJcblx0dXRpbGl0aWVzLm1pbm9yQ2hlY2tib3hTd2l0Y2hlcih0aGlzLCBtaW5vckNoZWNrYm94ZXMsIGJ1bGtCdG4gKTtcclxuXHJcbn0pXHJcblxyXG4kKFwiI3N1Ym1pdC1mb3JtLWJ0blwiKS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uKCkge1xyXG5cclxuXHQkKFwiI25ldy1jb3Vyc2UtZm9ybVwiKS5zdWJtaXQoKVxyXG5cclxufSk7XHJcblxyXG4kKFwiI2NvdmVyLWlucHV0XCIpLmNoYW5nZSggZnVuY3Rpb24oKSB7XHJcblx0JChcIiNjb3Zlci1pbnB1dC1sYWJlbFwiKVswXS50ZXh0Q29udGVudCA9IHRoaXMudmFsdWUucmVwbGFjZShcIkM6XFxcXGZha2VwYXRoXFxcXFwiLCBcIlwiKTtcclxufSk7XHJcblxyXG4vLyEjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcclxuLy8hIFx0XHRcdFx0RGF0YXRhYmxlc1x0XHRcdFx0I1xyXG4vLyEjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcclxuY29uc3QgY291cnNlc0RhdGF0YWJsZSA9ICQoXCIjY291cnNlcy1kYXRhdGFibGVcIikuRGF0YVRhYmxlKHtcclxuXHRvcmRlcjogWzYsIFwiZGVzY1wiXSxcclxuXHRwcm9jZXNzaW5nOiB0cnVlLFxyXG5cdHNlcnZlclNpZGU6IHRydWUsXHJcblx0YXV0b1dpZHRoOiBmYWxzZSxcclxuXHRjb2x1bW5EZWZzOiBbXHJcblx0XHR7IHRhcmdldHM6IDcsIHdpZHRoOiBcIjIwMHB4XCJ9XHJcblx0XSxcclxuXHRhamF4OiB7XHJcblx0XHR1cmw6IFwiL2NvdXJzZS1kYXRhdGFibGVzL21haW5cIixcclxuXHRcdGhlYWRlcnM6IHsnWC1DU1JGLVRPS0VOJzogJCgnbWV0YVtuYW1lPVwiY3NyZi10b2tlblwiXScpLmF0dHIoJ2NvbnRlbnQnKX0sXHJcblx0XHR0eXBlOiBcInBvc3RcIixcclxuXHRcdGRhdGE6IGZ1bmN0aW9uKCBkICkge1xyXG5cdFx0XHRyZXR1cm4gJC5leHRlbmQoIHt9LCBkLCB7XHJcblx0XHRcdFx0c3RhcnREYXRlOiBzdGFydERhdGUoICQoXCIjY291cnNlLWRhdGUtcmFuZ2VcIilbMF0gKSxcclxuXHRcdFx0XHRlbmREYXRlOiBlbmREYXRlKCAkKFwiI2NvdXJzZS1kYXRlLXJhbmdlXCIpWzBdICksXHJcblx0XHRcdH0pXHJcblx0XHR9XHJcblx0fSxcclxuXHRjb2x1bW5zOiBbXHJcblx0XHR7IGRhdGE6ICdhY3Rpb24nLCBuYW1lOiAnYWN0aW9uJywgY2xhc3NOYW1lOiBcImFsaWduLW1pZGRsZSB0ZXh0LWNlbnRlclwiLCBvcmRlcmFibGU6IGZhbHNlIH0sXHJcblx0XHR7IGRhdGE6ICd0aXRsZScsIG5hbWU6ICd0aXRsZScgfSxcclxuXHRcdHsgZGF0YTogJ3RvZ2dsZScsIG5hbWU6ICdzdGF0dXMnLCBjbGFzc05hbWU6IFwiYWxpZ24tbWlkZGxlIHRleHQtY2VudGVyXCIgfSxcclxuXHRcdHsgZGF0YTogJ2N1cmF0b3InLCBuYW1lOiAnY3VyYXRvcicsIGNsYXNzTmFtZTogXCJhbGlnbi1taWRkbGUgdGV4dC1jZW50ZXJcIiwgdmlzaWJsZTogZmFsc2V9LFxyXG5cdFx0eyBkYXRhOiAndG9waWNzJywgbmFtZTogJ3RvcGljcycsIGNsYXNzTmFtZTogXCJhbGlnbi1taWRkbGUgdGV4dC13cmFwIG1pbi13aWR0aC0yMDBcIiB9LFxyXG5cdFx0eyBkYXRhOiAndmVyc2lvbicsIG5hbWU6ICd2ZXJzaW9uJywgY2xhc3NOYW1lOiBcImFsaWduLW1pZGRsZSB0ZXh0LWNlbnRlclwiIH0sXHJcblx0XHR7XHJcblx0XHRcdHZpc2libGU6IGZhbHNlLFxyXG5cdFx0XHRkYXRhOiAndXBkYXRlZF9hdCcsXHJcblx0XHRcdG5hbWU6ICd1cGRhdGVkX2F0JyxcclxuXHRcdFx0Y2xhc3NOYW1lOiBcImFsaWduLW1pZGRsZSB0ZXh0LWNlbnRlciBjdXJzb3ItZGVmYXVsdFwiLFxyXG5cdFx0XHRyZW5kZXI6IGZ1bmN0aW9uKGRhdGEpIHtcclxuXHRcdFx0XHRsZXQgZGF0ZSA9IG5ldyBEYXRlKGRhdGEpO1xyXG5cdFx0XHRcdGxldCBkYXkgPSBkYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygpLnJlcGxhY2UoIC9bL10vZywgXCItXCIpO1xyXG5cdFx0XHRcdGxldCBob3VycyA9IGAke2RhdGUuZ2V0SG91cnMoKX1gLnBhZFN0YXJ0KDIsIFwiMFwiKTtcclxuXHRcdFx0XHRsZXQgbWludXRlcyA9IGAke2RhdGUuZ2V0TWludXRlcygpfWAucGFkU3RhcnQoMiwgXCIwXCIpO1xyXG5cclxuXHRcdFx0XHRsZXQgdGltZSA9IGAke2hvdXJzfToke21pbnV0ZXN9YDtcclxuXHRcdFx0XHRyZXR1cm4gYDxwIGNsYXNzPVwibWItMFwiPiR7ZGF5fTwvcD48cCBjbGFzcz1cIm1iLTBcIj4ke3RpbWV9PC9wPmA7XHJcblx0XHRcdH1cclxuXHRcdH0sXHJcblx0XHR7IGRhdGE6ICdwdWJsaXNoJywgbmFtZTogXCJwdWJsaXNoX2F0XCIsIGNsYXNzTmFtZTogXCJhbGlnbi1taWRkbGUgdGV4dC1jZW50ZXIgY3Vyc29yLWRlZmF1bHQgbWluLXdpZHRoLTE3MFwiLCBzZWFyY2hhYmxlOiBmYWxzZSB9LFxyXG5cdFx0eyBkYXRhOiAnc3RhdHVzJywgbmFtZTogJ3N0YXR1cycsIHZpc2libGU6IGZhbHNlIH0sXHJcblx0XHR7IGRhdGE6ICd1cGRhdGVkX2F0JywgbmFtZTogJ3VwZGF0ZWRfYXQnLCB2aXNpYmxlOiBmYWxzZSB9LFxyXG5cdF0sXHJcblx0bGFuZ3VhZ2U6IHV0aWxpdGllcy50YWJsZUxvY2FsZSxcclxuXHRmbkluaXRDb21wbGV0ZTogZnVuY3Rpb24oIG9TZXR0aW5ncywganNvbiApIHtcclxuXHRcdGxldCBsZW50aFNlbGVjdGlvbiA9ICQoXCJzZWxlY3RbbmFtZT0nY291cnNlcy1kYXRhdGFibGVfbGVuZ3RoJ11cIik7XHJcblx0XHRsZW50aFNlbGVjdGlvbi5hZGRDbGFzcyhcInNlbGVjdDJcIik7XHJcblxyXG5cdFx0bGVudGhTZWxlY3Rpb24uc2VsZWN0Mih7XHJcblx0XHRcdG1pbmltdW1SZXN1bHRzRm9yU2VhcmNoOiAtMSxcclxuXHRcdH0pO1xyXG5cdH0sXHJcblx0ZHJhd0NhbGxiYWNrOmZ1bmN0aW9uKCl7XHJcblx0XHQkKFwiLmRhdGFUYWJsZXNfcGFnaW5hdGUgPiAucGFnaW5hdGlvblwiKS5hZGRDbGFzcyhcInBhZ2luYXRpb24tcm91bmRlZFwiKTtcclxuXHRcdCQoXCIuZGF0YVRhYmxlc193cmFwcGVyID4gLnJvdzpmaXJzdC1jaGlsZCA+IGRpdlwiKS5yZW1vdmVDbGFzcyhcImNvbC1zbS0xMiBjb2wtbWQtNlwiKTtcclxuXHRcdCQoXCIuZGF0YVRhYmxlc193cmFwcGVyID4gLnJvdzpmaXJzdC1jaGlsZCA+IGRpdlwiKS5hZGRDbGFzcyhcImNvbC1sZy0xMiBjb2wteGwtNiBkLW1kLWZsZXgganVzdGlmeS1jb250ZW50LW1kLWNlbnRlciBkLXhsLWJsb2NrXCIpO1xyXG5cdFx0JChcIi5qcy1yZW1vdmUtdGFibGUtY2xhc3NlcyA+IHRoZWFkID4gdHIgPiB0aFwiKS5yZW1vdmVDbGFzcyhcImN1cnNvci1wb2ludGVyXCIpO1xyXG5cclxuXHRcdHRvZ2dsZVN0YXR1cygpO1xyXG5cdFx0Y2hlY2tlQm94ZXNFdmVudExpc3RlbmVyKCk7XHJcblx0XHRjbG9uZUV2ZW50TGlzdGVuZXIoKTtcclxuXHRcdCQoXCIuanMtcHVibGlzaC1jb3ZlclwiKS5vbihcImNsaWNrXCIsIHB1Ymxpc2hIYW5kbGVyKTtcclxuXHRcdHV0aWxpdGllcy5yZXNldEJ1bGsoICQoXCIjY291cnNlLWJ1bGstYWN0aW9uLWJ0blwiKSwgJChcIiNzZWxlY3QtYWxsLWNvdXJzZXNcIikpO1xyXG5cdH1cclxufSk7XHJcblxyXG4vLyEgIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1xyXG4vLyFcdFx0RGF0YXRhYmxlIGV2ZW50IGluaXRpYWxhemlvbiBmdW5jdGlvbnNcdFx0I1xyXG4vLyEgIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1xyXG5jb25zdCBwaWNrZXJDb25maWcgPSB7XHJcblx0c2luZ2xlRGF0ZVBpY2tlcjogdHJ1ZSxcclxuXHRkcm9wczogXCJhdXRvXCIsXHJcbiAgICBvcGVuczogXCJjZW50ZXJcIixcclxuXHR0aW1lUGlja2VyOiB0cnVlLFxyXG5cdGF1dG9VcGRhdGVJbnB1dDogZmFsc2UsXHJcblx0dGltZVBpY2tlcjI0SG91cjogdHJ1ZSxcclxuXHRjYW5jZWxCdXR0b25DbGFzc2VzOiBcImJ0bi1zZWNvbmRhcnlcIixcclxuXHRsb2NhbGU6IHtcclxuXHRcdGZvcm1hdDogXCJERC1NTS1ZWVlZIEg6bW1cIixcclxuXHRcdGNhbmNlbExhYmVsOiBcIkNhbmNlbFwiXHJcbiAgICB9LFxyXG59XHJcblxyXG5mdW5jdGlvbiBwdWJsaXNoSGFuZGxlcigpIHtcclxuXHRjb25zdCBjb3ZlciA9IHRoaXM7XHJcblx0Y29uc3QgdGQgPSB0aGlzLnBhcmVudEVsZW1lbnQ7XHJcblx0Y29uc3QgZGF0ZUlucHV0ID0gdGQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImpzLXB1Ymxpc2gtcGlja2VyXCIpWzBdO1xyXG5cclxuXHR0aGlzLmNsYXNzTGlzdC5hZGQoXCJkLW5vbmVcIik7XHJcblx0ZGF0ZUlucHV0LmNsYXNzTGlzdC5yZW1vdmUoXCJkLW5vbmVcIik7XHJcblxyXG5cdCQoZGF0ZUlucHV0KS5kYXRlcmFuZ2VwaWNrZXIocGlja2VyQ29uZmlnKTtcclxuXHQkKGRhdGVJbnB1dCkub24oXCJhcHBseS5kYXRlcmFuZ2VwaWNrZXJcIiwgcHVibGlzaEFwcGx5SGFuZGxlcik7XHJcblx0JChkYXRlSW5wdXQpLm9uKFwiaGlkZS5kYXRlcmFuZ2VwaWNrZXJcIiwgcHVibGlzaEhpZGVIYW5kbGVyLmJpbmQodGhpcywgY292ZXIsIGRhdGVJbnB1dCkpO1xyXG5cdGRhdGVJbnB1dC5mb2N1cygpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBjbG9uZUV2ZW50TGlzdGVuZXIoKSB7XHJcblxyXG5cdGxldCBjbG9uZUJ0bnMgPSAkKFwiLmpzLWNvdXJzZS1jbG9uZS1idG5cIik7XHJcblxyXG5cdGNsb25lQnRucy5vbihcImNsaWNrXCIsIGZ1bmN0aW9uKCkge1xyXG5cclxuXHRcdCQoJyNjbG9uZS1jb3Vyc2UtbW9kYWwnKS5tb2RhbCgnc2hvdycpXHJcblxyXG5cdH0pO1xyXG59XHJcblxyXG5mdW5jdGlvbiBjaGVja2VCb3hlc0V2ZW50TGlzdGVuZXIoKSB7XHJcblxyXG5cdGxldCBtaW5vckNoZWNrYm94ZXMgPSAkKFwiLmpzLWNvdXJzZS1jaGVja2JveFwiKTtcclxuXHRsZXQgbWFpbkNoZWNrYm94ID0gJChcIiNzZWxlY3QtYWxsLWNvdXJzZXNcIilbMF07XHJcblx0bGV0IGJ1bGtCdG4gPSAkKFwiI2NvdXJzZS1idWxrLWFjdGlvbi1idG5cIilbMF07XHJcblxyXG5cdG1pbm9yQ2hlY2tib3hlcy51bmJpbmQoKTtcclxuXHJcblx0bWlub3JDaGVja2JveGVzLmNoYW5nZSggZnVuY3Rpb24oKSB7XHJcblx0XHR1dGlsaXRpZXMubWFpbkNoZWNrYm94U3dpdGNoZXIoIG1haW5DaGVja2JveCwgbWlub3JDaGVja2JveGVzLCBidWxrQnRuKVxyXG5cdH0pXHJcblxyXG59XHJcblxyXG5mdW5jdGlvbiB0b2dnbGVTdGF0dXMoKSB7XHJcblx0JCgnLmpzLXRvZ2dsZScpLnVuYmluZCgpO1xyXG5cclxuXHQkKCcuanMtdG9nZ2xlJykub24oJ2NoYW5nZScsIGZ1bmN0aW9uKCkge1xyXG5cclxuXHRcdGF4aW9zLnBhdGNoKCcvY291cnNlLWFqYXgvc3RhdHVzJywge1xyXG5cdFx0XHRjb3Vyc2VJZDogdGhpcy5kYXRhc2V0LmNvdXJzZUlkLFxyXG5cdFx0XHRzdGF0dXM6IHRoaXMuY2hlY2tlZFxyXG5cdFx0fSlcclxuXHRcdC50aGVuKCAocmVzKSA9PiB7XHJcblx0XHRcdGxldCByb3cgPSB0aGlzLmZpbmRQYXJlbnQoMik7XHJcblx0XHRcdGxldCBkYXRlRWxtID0gcm93LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJqcy1kYXRlXCIpWzBdO1xyXG5cdFx0XHRsZXQgdGltZUVsbSA9IHJvdy5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwianMtdGltZVwiKVswXTtcclxuXHRcdFx0bGV0IGlucHV0RWxtID0gcm93LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJqcy1wdWJsaXNoLXBpY2tlclwiKVswXTtcclxuXHRcdFx0bGV0IGJhZGdlID0gcm93LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJqcy1iYWRnZVwiKVswXTtcclxuXHRcdFx0bGV0IGRhdGUgPSByZXMuZGF0YS5kYXRlLnNwbGl0KFwiLVwiKS5yZXZlcnNlKCkuam9pbihcIi1cIik7XHJcblx0XHRcdGxldCB0aW1lID0gcmVzLmRhdGEudGltZTtcclxuXHRcdFx0bGV0IG5vdyA9IG5ldyBEYXRlKCk7XHJcblxyXG5cdFx0XHRkYXRlID0gbmV3IERhdGUoIGAke2RhdGV9ICR7dGltZX1gICk7XHJcblxyXG5cdFx0XHRpZiAoIHRoaXMuY2hlY2tlZCApIHtcclxuXHRcdFx0XHRpZiAoIG5vdyA+IGRhdGUgKSB7XHJcblx0XHRcdFx0XHRiYWRnZS5jbGFzc0xpc3QucmVtb3ZlKFwiYmFkZ2Utb3V0bGluZS1kYXJrXCIsIFwiYmFkZ2Utb3V0bGluZS1kYW5nZXJcIik7XHJcblx0XHRcdFx0XHRiYWRnZS5jbGFzc0xpc3QuYWRkKFwiYmFkZ2Utb3V0bGluZS1zdWNjZXNzXCIpO1xyXG5cdFx0XHRcdFx0YmFkZ2UudGV4dENvbnRlbnQgPSBcIlB1Ymxpc2hlZFwiO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRlbHNlIHtcclxuXHRcdFx0XHRcdGJhZGdlLmNsYXNzTGlzdC5yZW1vdmUoXCJiYWRnZS1vdXRsaW5lLXByaW1hcnlcIiwgXCJiYWRnZS1vdXRsaW5lLWRhbmdlclwiKTtcclxuXHRcdFx0XHRcdGJhZGdlLmNsYXNzTGlzdC5hZGQoXCJiYWRnZS1vdXRsaW5lLXByaW1hcnlcIik7XHJcblx0XHRcdFx0XHRiYWRnZS50ZXh0Q29udGVudCA9IFwiU2NoZWR1bGVkXCI7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHRcdGVsc2Uge1xyXG5cdFx0XHRcdGJhZGdlLmNsYXNzTGlzdC5yZW1vdmUoXCJiYWRnZS1vdXRsaW5lLXByaW1hcnlcIiwgXCJiYWRnZS1vdXRsaW5lLWRhcmtcIik7XHJcblx0XHRcdFx0YmFkZ2UuY2xhc3NMaXN0LmFkZChcImJhZGdlLW91dGxpbmUtZGFuZ2VyXCIpO1xyXG5cdFx0XHRcdGJhZGdlLnRleHRDb250ZW50ID0gXCJEcmFmdFwiO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRkYXRlRWxtLnRleHRDb250ZW50ID0gcmVzLmRhdGEuZGF0ZTtcclxuXHRcdFx0dGltZUVsbS50ZXh0Q29udGVudCA9IHJlcy5kYXRhLnRpbWU7XHJcblx0XHRcdGlucHV0RWxtLnZhbHVlID0gYCR7cmVzLmRhdGEuZGF0ZX0gJHtyZXMuZGF0YS50aW1lfWA7XHJcblxyXG5cdFx0XHRsZXQgaWNvbiA9IHRoaXMuY2hlY2tlZCA/IFwic3VjY2Vzc1wiIDogXCJpbmZvXCI7XHJcblx0XHRcdGxldCBtZXNzYWdlID0gdGhpcy5jaGVja2VkID8gXCLOlc69zrXPgc6zzr/PgM6/zrnOrs64zrfOus61XCIgOiBcIs6Rz4DOtc69zrXPgc6zzr/PgM6/zrnOrs64zrfOus61XCI7XHJcblxyXG5cdFx0XHR1dGlsaXRpZXMudG9hc3RBbGVydCggaWNvbiwgbWVzc2FnZSApO1xyXG5cclxuXHRcdH0pXHJcblx0XHQuY2F0Y2goIChlcnIpID0+IHtcclxuXHRcdFx0Y29uc29sZS5sb2coZXJyKTtcclxuXHRcdFx0dXRpbGl0aWVzLnRvYXN0QWxlcnQoIFwiZXJyb3JcIiwgXCLOoM6xz4HOv8+Fz4POuc6sz4PPhM63zrrOtSDOus6sz4DOv865zr8gz4DPgc+MzrLOu863zrzOsSAuLi5cIiApO1xyXG5cclxuXHRcdH0pO1xyXG5cdH0pO1xyXG59XHJcblxyXG4vLyEjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcclxuLy8hXHRcdFx0XHREYXRhdGFibGUgZmlsdGVyc1x0XHRcdCNcclxuLy8hIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjXHJcblxyXG5sZXQgc2VhcmNoRmllbGRMYWJlbCA9ICQoXCIjY291cnNlcy1kYXRhdGFibGVfZmlsdGVyID4gbGFiZWwgPiBpbnB1dFwiKVswXTtcclxubGV0IGRhdGVJbnB1dCA9IGNyZWF0ZURhdGVFbG0oKTtcclxuXHJcbmRhdGVJbnB1dC5hcHBlbmRCZWZvcmUoIHNlYXJjaEZpZWxkTGFiZWwgKTtcclxuZGF0ZUlucHV0LmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCBmdW5jdGlvbigpIHtcclxuXHJcblx0dGhpcy52YWx1ZSA9IHRoaXMudmFsdWUucmVwbGFjZSggL1teMC05XS9nLCBcIlwiIClcclxuXHRcdC5yZXBsYWNlKC9eKFxcZHsyfSk/KFxcZHsyfSk/KFxcZHs0fSk/KFxcZHsyfSk/KFxcZHsyfSk/KFxcZHs0fSk/L2csICckMS8kMi8kMyAtICQ0LyQ1LyQ2JylcclxuXHRcdC5zdWJzdHIoMCwgMjMpXHJcblxyXG59KVxyXG5cclxubGV0IGRhdGVSYW5nZSA9ICQoXCIjY291cnNlLWRhdGUtcmFuZ2VcIik7XHJcblxyXG5kYXRlUmFuZ2UuZGF0ZXJhbmdlcGlja2VyKCB1dGlsaXRpZXMuZGF0ZVBpY2tlckNvbmZpZyApO1xyXG5cclxuZGF0ZVJhbmdlLm9uKCBcImFwcGx5LmRhdGVyYW5nZXBpY2tlclwiLCBmdW5jdGlvbihldmVudCwgcGlja2VyKSB7XHJcblxyXG5cdGxldCBzdGFydERhdGUgPSBwaWNrZXIuc3RhcnREYXRlLmZvcm1hdCgnREQvTU0vWVlZWScpO1xyXG5cdGxldCBlbmREYXRlID0gcGlja2VyLmVuZERhdGUuZm9ybWF0KCdERC9NTS9ZWVlZJyk7XHJcblxyXG5cdHRoaXMuY2xhc3NMaXN0LmFkZChcInNlbGVjdDItc2VsZWN0ZWRcIik7XHJcblx0dGhpcy52YWx1ZSA9IGAkeyBzdGFydERhdGUgfSAtICR7IGVuZERhdGUgfWA7XHJcblxyXG5cdGNvdXJzZXNEYXRhdGFibGUuYWpheC5yZWxvYWQoKTtcclxuXHJcbn0pXHJcblxyXG5kYXRlUmFuZ2Uub24oICdjYW5jZWwuZGF0ZXJhbmdlcGlja2VyJywgZnVuY3Rpb24oZXZlbnQsIHBpY2tlcikge1xyXG5cclxuXHR0aGlzLmNsYXNzTGlzdC5yZW1vdmUoXCJzZWxlY3QyLXNlbGVjdGVkXCIpO1xyXG5cdGRhdGVJbnB1dC52YWx1ZSA9IFwiXCI7XHJcblx0Y291cnNlc0RhdGF0YWJsZS5hamF4LnJlbG9hZCgpO1xyXG59KVxyXG5cclxubGV0IHRhYmxlc0xlbmd0aExhYmVsID0gJChcIiNjb3Vyc2VzLWRhdGF0YWJsZV9sZW5ndGggPiBsYWJlbFwiKVswXTtcclxubGV0IHRvcGljRklsdGVyID0gJChcIiN0b3BpYy1maWx0ZXJcIilbMF07XHJcblxyXG5cclxubGV0IGFjdGl2ZUNvdXJzZXNGaWx0ZXIgPSB1dGlsaXRpZXMuY3JlYXRlU3RhdGVTZWxlY3QoXCJjb3Vyc2Utc3RhdGUtc2VsZWN0XCIpO1xyXG50YWJsZXNMZW5ndGhMYWJlbC5hcHBlbmQoIGFjdGl2ZUNvdXJzZXNGaWx0ZXIgKTtcclxuXHJcbiQoXCIjY291cnNlLXN0YXRlLXNlbGVjdFwiKS5zZWxlY3QyKHtcclxuXHRtaW5pbXVtUmVzdWx0c0ZvclNlYXJjaDogLTEsXHJcbn0pXHJcblxyXG4kKFwiI2NvdXJzZS1zdGF0ZS1zZWxlY3RcIikuY2hhbmdlKCBmdW5jdGlvbiAoKSB7XHJcblxyXG5cdGxldCBsYWJlbCA9ICQoXCIjc2VsZWN0Mi1jb3Vyc2Utc3RhdGUtc2VsZWN0LWNvbnRhaW5lclwiKVswXTtcclxuXHJcblx0dXRpbGl0aWVzLmZpbHRlclN0eWxlKCBsYWJlbCwgdGhpcy52YWx1ZSApO1xyXG5cclxuXHRjb3Vyc2VzRGF0YXRhYmxlLmNvbHVtbig4KS5zZWFyY2goIHRoaXMudmFsdWUgKS5kcmF3KCk7XHJcblxyXG59KTtcclxuXHJcbnRhYmxlc0xlbmd0aExhYmVsLmFwcGVuZCh0b3BpY0ZJbHRlcik7XHJcblxyXG4kKFwiI3RvcGljLWZpbHRlclwiKS5zZWxlY3QyKHtcclxuXHJcbn0pO1xyXG5cclxuJChcIiN0b3BpYy1maWx0ZXJcIikuY2hhbmdlKCBmdW5jdGlvbigpIHtcclxuXHJcblx0bGV0IGxhYmVsID0gJChcIiNzZWxlY3QyLXRvcGljLWZpbHRlci1jb250YWluZXJcIilbMF07XHJcblxyXG5cdHV0aWxpdGllcy5maWx0ZXJTdHlsZSggbGFiZWwsIHRoaXMudmFsdWUgKTtcclxuXHJcblx0Ly8hIG1pYSBzdGlsaSBlaW5haSBrcmltZW5pIGdpIGF1dG8ga2Fub3VtZSBzZWFyY2ggdGluIHN0aWxpIDVcclxuXHQvLyEga2FpIG94aSB0aW4gNFxyXG5cdGNvdXJzZXNEYXRhdGFibGUuY29sdW1uKDQpLnNlYXJjaCggdGhpcy52YWx1ZSApLmRyYXcoKTtcclxuXHJcbn0pO1xyXG5cclxubGV0IGNvdXJzZVR5cGVzU2VsZWN0ID0gdXRpbGl0aWVzLmNyZWF0ZUNvdXJzZVR5cGVTZWxlY3QoXCJjb3Vyc2UtdHlwZS1zZWxlY3Rpb25cIik7XHJcbnRhYmxlc0xlbmd0aExhYmVsLmFwcGVuZChjb3Vyc2VUeXBlc1NlbGVjdCk7XHJcblxyXG4kKFwiI2NvdXJzZS10eXBlLXNlbGVjdGlvblwiKS5zZWxlY3QyKHtcclxuXHRtaW5pbXVtUmVzdWx0c0ZvclNlYXJjaDogLTEsXHJcbn0pO1xyXG5cclxuJChcIiNjb3Vyc2UtdHlwZS1zZWxlY3Rpb25cIikuY2hhbmdlKCBmdW5jdGlvbigpIHtcclxuXHJcblx0bGV0IGxhYmVsID0gJChcIiNzZWxlY3QyLWNvdXJzZS10eXBlLXNlbGVjdGlvbi1jb250YWluZXJcIilbMF07XHJcblx0dXRpbGl0aWVzLmZpbHRlclN0eWxlKCBsYWJlbCwgdGhpcy52YWx1ZSApO1xyXG5cclxuXHRjb3Vyc2VzRGF0YXRhYmxlLmNvbHVtbig1KS5zZWFyY2goIHRoaXMudmFsdWUgKS5kcmF3KCk7XHJcblxyXG59KTtcclxuXHJcblxyXG5cclxuXHJcbi8vISMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1xyXG4vLyFcdFx0XHRcdHNjcmlwdCBmdW5jdGlvbnNcdFx0XHQjXHJcbi8vISMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1xyXG5mdW5jdGlvbiBkYXRldGltZShkYXRlKSB7XHJcblx0Y29uc3QgdGVtcCA9IGRhdGUuc3BsaXQoXCIgXCIpO1xyXG5cclxuXHRyZXR1cm4ge1xyXG5cdFx0ZGF5OiB0ZW1wWzBdLFxyXG5cdFx0dGltZTogdGVtcFsxXVxyXG5cdH1cclxufVxyXG5cclxuZnVuY3Rpb24gcHVibGlzaENvdmVyVXBkYXRlKHJvdywgZGF0ZSwgc3RhdHVzKSB7XHJcblx0bGV0IGRhdGVFbG0gPSByb3cuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImpzLWRhdGVcIilbMF07XHJcblx0bGV0IHRpbWVFbG0gPSByb3cuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImpzLXRpbWVcIilbMF07XHJcblx0bGV0IGlucHV0RWxtID0gcm93LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJqcy1wdWJsaXNoLXBpY2tlclwiKVswXTtcclxuXHRsZXQgYmFkZ2UgPSByb3cuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImpzLWJhZGdlXCIpWzBdO1xyXG5cdGxldCBkYXkgPSBkYXRlLmRheVxyXG5cdGxldCB0aW1lID0gZGF0ZS50aW1lO1xyXG5cdGxldCBub3cgPSBuZXcgRGF0ZSgpO1xyXG5cclxuXHRkYXRlID0gbmV3IERhdGUoIGAke2RheX0gJHt0aW1lfWAgKTtcclxuXHJcblx0aWYgKCBzdGF0dXMgPT0gMSApIHtcclxuXHRcdGlmICggbm93ID4gZGF0ZSApIHtcclxuXHRcdFx0YmFkZ2UuY2xhc3NMaXN0LnJlbW92ZShcImJhZGdlLW91dGxpbmUtcHJpbWFyeVwiLCBcImJhZGdlLW91dGxpbmUtZGFuZ2VyXCIpO1xyXG5cdFx0XHRiYWRnZS5jbGFzc0xpc3QuYWRkKFwiYmFkZ2Utb3V0bGluZS1zdWNjZXNzXCIpO1xyXG5cdFx0XHRiYWRnZS50ZXh0Q29udGVudCA9IFwiUHVibGlzaGVkXCI7XHJcblx0XHR9XHJcblx0XHRlbHNlIHtcclxuXHRcdFx0YmFkZ2UuY2xhc3NMaXN0LnJlbW92ZShcImJhZGdlLW91dGxpbmUtc3VjY2Vzc1wiLCBcImJhZGdlLW91dGxpbmUtZGFuZ2VyXCIpO1xyXG5cdFx0XHRiYWRnZS5jbGFzc0xpc3QuYWRkKFwiYmFkZ2Utb3V0bGluZS1wcmltYXJ5XCIpO1xyXG5cdFx0XHRiYWRnZS50ZXh0Q29udGVudCA9IFwiU2NoZWR1bGVkXCI7XHJcblx0XHR9XHJcblx0fVxyXG5cdGVsc2Uge1xyXG5cdFx0YmFkZ2UuY2xhc3NMaXN0LnJlbW92ZShcImJhZGdlLW91dGxpbmUtcHJpbWFyeVwiLCBcImJhZGdlLW91dGxpbmUtc3VjY2Vzc1wiKTtcclxuXHRcdGJhZGdlLmNsYXNzTGlzdC5hZGQoXCJiYWRnZS1vdXRsaW5lLWRhbmdlclwiKTtcclxuXHRcdGJhZGdlLnRleHRDb250ZW50ID0gXCJEcmFmdFwiO1xyXG5cdH1cclxuXHRkYXkgPSBkYXkuc3BsaXQoXCItXCIpLnJldmVyc2UoKS5qb2luKFwiLVwiKTtcclxuXHRkYXRlRWxtLnRleHRDb250ZW50ID0gZGF5O1xyXG5cdHRpbWVFbG0udGV4dENvbnRlbnQgPSB0aW1lO1xyXG5cdGlucHV0RWxtLnZhbHVlID0gYCR7ZGF5fSAke3RpbWV9YDtcclxufVxyXG5cclxuZnVuY3Rpb24gcHVibGlzaEFwcGx5SGFuZGxlcihldiwgcGlja2VyKSB7XHJcblx0Y29uc3QgZGF0ZSA9IHBpY2tlci5zdGFydERhdGUuZm9ybWF0KCdZWVlZLU1NLUREIEg6bW0nKTtcclxuXHRjb25zdCBjb3Vyc2VJZCA9IHRoaXMuZGF0YXNldC5jb3Vyc2VJZDtcclxuXHJcblx0YXhpb3MucGF0Y2goYC9jb3Vyc2UtYWpheC8ke2NvdXJzZUlkfS9lZGl0LXB1Ymxpc2hgLCB7XHJcblx0XHRkYXRlOiBkYXRlXHJcblx0fSlcclxuXHQudGhlbiggcmVzID0+IHtcclxuXHRcdGNvbnN0IHJvdyA9IHRoaXMuZmluZFBhcmVudCgyKVxyXG5cdFx0Y29uc3QgZGF0ZSA9IGRhdGV0aW1lKHJlcy5kYXRhLnB1Ymxpc2gpO1xyXG5cclxuXHRcdHB1Ymxpc2hDb3ZlclVwZGF0ZShyb3csIGRhdGUsIHJlcy5kYXRhLnN0YXR1cyk7XHJcblx0fSlcclxuXHQuY2F0Y2goIGVyciA9PiB7XHJcblx0XHRjb25zb2xlLmxvZyhlcnIpO1xyXG5cdFx0dXRpbGl0aWVzLnRvYXN0QWxlcnQoXCJlcnJvclwiLCBcIs6azqzPgM6/zrnOvyDPg8+GzqzOu868zrEgz4DOsc+Bzr/Phc+DzrnOrM+Dz4TOt866zrUuLi5cIilcclxuXHR9KVxyXG59XHJcblxyXG5mdW5jdGlvbiBwdWJsaXNoSGlkZUhhbmRsZXIoY292ZXIsIGRhdGVJbnB1dCkge1xyXG5cdHNldFRpbWVvdXQoKCkgPT4ge1xyXG5cdFx0Y292ZXIuY2xhc3NMaXN0LnJlbW92ZShcImQtbm9uZVwiKTtcclxuXHRcdGRhdGVJbnB1dC5jbGFzc0xpc3QuYWRkKFwiZC1ub25lXCIpO1xyXG5cdFx0XHJcblx0XHQkKGRhdGVJbnB1dCkuZGF0YSgnZGF0ZXJhbmdlcGlja2VyJykucmVtb3ZlKCk7XHJcblx0fSwgNTApO1xyXG59XHJcblxyXG5mdW5jdGlvbiBjcmVhdGVEYXRlRWxtKCkge1xyXG5cclxuXHRsZXQgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XHJcblxyXG5cdGlucHV0LmNsYXNzTGlzdC5hZGQoXCJmb3JtLWNvbnRyb2xcIiwgXCJkYXRlXCIsIFwiZC1pbmxpbmUtYmxvY2tcIiwgXCJtbC0xXCIpO1xyXG5cdGlucHV0LmlkID0gXCJjb3Vyc2UtZGF0ZS1yYW5nZVwiO1xyXG5cdGlucHV0LmRhdGFzZXQudG9nZ2xlID0gXCJkYXRlLXBpY2tlclwiO1xyXG5cdGlucHV0LmRhdGFzZXQuY2FuY2VsQ2xhc3MgPSBcImJ0bi1zZWNvbmRhcnlcIjtcclxuXHRpbnB1dC5zdHlsZS5oZWlnaHQgPSBcIjMxLjk2cHhcIjtcclxuXHRpbnB1dC5zdHlsZS53aWR0aCA9IFwiMTk1cHhcIjtcclxuXHRpbnB1dC5wbGFjZWhvbGRlciA9IFwizpXPgM65zrvOrc6+z4TOtSDOt868zrXPgc6/zrzOt869zq/Otc+CLi4uXCI7XHJcblxyXG5cdHJldHVybiBpbnB1dDtcclxufVxyXG5cclxuZnVuY3Rpb24gc3RhcnREYXRlKCBpbnB1dCApIHtcclxuXHJcblx0bGV0IGRhdGVJbnB1dCA9IGlucHV0O1xyXG5cclxuXHRpZiAoICFkYXRlSW5wdXQgfHwgZGF0ZUlucHV0LnZhbHVlID09IFwiXCIgKSB7XHJcblx0XHRyZXR1cm4gXCJcIjtcclxuXHR9XHJcblxyXG5cdGxldCBkYXRlSW5wdXRWYWx1ZSA9IGRhdGVJbnB1dC52YWx1ZS5zcGxpdChcIiAtIFwiKTtcclxuXHRsZXQgZmlyc3REYXRlID0gZGF0ZUlucHV0VmFsdWVbMF0uc3BsaXQoXCIvXCIpLnJldmVyc2UoKS5qb2luKFwiLVwiKTtcclxuXHJcblx0cmV0dXJuIGZpcnN0RGF0ZTtcclxufVxyXG5cclxuZnVuY3Rpb24gZW5kRGF0ZSggaW5wdXQgKSB7XHJcblxyXG5cdGxldCBkYXRlSW5wdXQgPSBpbnB1dDtcclxuXHJcblx0aWYgKCAhZGF0ZUlucHV0IHx8IGRhdGVJbnB1dC52YWx1ZSA9PSBcIlwiICkge1xyXG5cdFx0cmV0dXJuIFwiXCI7XHJcblx0fVxyXG5cclxuXHRsZXQgZGF0ZUlucHV0VmFsdWUgPSBkYXRlSW5wdXQudmFsdWUuc3BsaXQoXCIgLSBcIik7XHJcblx0bGV0IHNlY29uZERhdGUgPSBkYXRlSW5wdXRWYWx1ZVsxXS5zcGxpdChcIi9cIikucmV2ZXJzZSgpLmpvaW4oXCItXCIpO1xyXG5cclxuXHRyZXR1cm4gc2Vjb25kRGF0ZTtcclxufVxyXG5cclxuLy8hIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjXHJcbi8vIVx0XHRcdFx0SW5pdGlhbGl6YXRpb25zXHRcdFx0XHQjXHJcbi8vISMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1xyXG5cclxuJFIoXCIjc3VtbWFyeVwiLCB1dGlsaXRpZXMucmVkYWN0b3JDb25maWcpO1xyXG5cclxuJFIoXCIjZGVzY3JpcHRpb25cIiwgdXRpbGl0aWVzLnJlZGFjdG9yQ29uZmlnKTtcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/js/dashboard/courses/coursesMain.js\n");

/***/ }),

/***/ "./resources/js/dashboard/main.js":
/*!****************************************!*\
  !*** ./resources/js/dashboard/main.js ***!
  \****************************************/
/*! exports provided: ALLOWEDTYPES, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ALLOWEDTYPES\", function() { return ALLOWEDTYPES; });\nElement.prototype.findParent = function (loops) {\n  var parent = this;\n\n  for (var i = 0; i < loops; i++) {\n    parent = parent.parentElement;\n  }\n\n  return parent;\n}, false;\nElement.prototype.appendBefore = function (element) {\n  element.parentNode.insertBefore(this, element);\n}, false;\nElement.prototype.appendAfter = function (element) {\n  element.parentNode.insertBefore(this, element.nextSibling);\n}, false; //!##########################################\n//!\t\t\t\tGlobal Variables\t\tF\t#\n//!##########################################\n\nvar baseUrl = window.location.origin;\nvar timer = 0;\nvar ALLOWEDTYPES = [\"application/octet-stream\", \"application/x-zip-compressed\", \"application/pdf\", \"application/msword\", \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\", \"application/vnd.openxmlformats-officedocument.wordprocessingml.template\", \"application/vnd.ms-word.document.macroEnabled.12\", \"application/vnd.ms-word.template.macroEnabled.12\", \"application/vnd.ms-excel\", \"application/vnd.ms-excel\", \"application/vnd.ms-excel\", \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\", \"application/vnd.openxmlformats-officedocument.spreadsheetml.template\", \"application/vnd.ms-excel.sheet.macroEnabled.12\", \"application/vnd.ms-excel.template.macroEnabled.12\", \"application/vnd.ms-excel.addin.macroEnabled.12\", \"application/vnd.ms-excel.sheet.binary.macroEnabled.12\", \"application/vnd.ms-powerpoint\", \"application/vnd.openxmlformats-officedocument.presentationml.presentation\", \"application/vnd.openxmlformats-officedocument.presentationml.template\", \"application/vnd.openxmlformats-officedocument.presentationml.slideshow\", \"application/vnd.ms-powerpoint.addin.macroEnabled.12\", \"application/vnd.ms-powerpoint.presentation.macroEnabled.12\", \"application/vnd.ms-powerpoint.template.macroEnabled.12\", \"application/vnd.ms-powerpoint.slideshow.macroEnabled.12\", \"application/vnd.ms-access\", \"audio/mpeg\", \"application/vnd.oasis.opendocument.presentation\", \"application/vnd.oasis.opendocument.spreadsheet\", \"application/vnd.oasis.opendocument.text\", \"application/rtf\", \"application/vnd.oasis.opendocument.graphics\", \"text/html\"]; //!##########################################\n//!\t\t\t\tConfigurations\t\t\t\t#\n//!##########################################\n//!ALERT\n//!============================================================\n\nfunction toastAlert(icon, message) {\n  Swal.fire({\n    toast: 'true',\n    position: 'top-end',\n    icon: icon,\n    title: message,\n    showConfirmButton: false,\n    timer: 3000,\n    timerProgressBar: true\n  });\n}\n\nfunction toastAlertDelete(text) {\n  var icon = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"warning\";\n  return Swal.fire({\n    title: 'Είστε σίγουρος;',\n    text: text,\n    icon: icon,\n    showCancelButton: true,\n    confirmButtonColor: '#ff5b5b',\n    confirmButtonText: 'Ναί, διαγραφή!',\n    cancelButtonText: 'Άκυρο'\n  });\n} //!CONFIG\n//!============================================================\n\n\nvar articleConfig = {\n  css: \"/css/\",\n  custom: {\n    css: [\"/css/bootstrap.min.css\", \"/css/customArticleStyle.css\"]\n  },\n  // plugins: ['mediaLibrary', 'reorder'],\n  classes: {\n    img: 'img-fluid',\n    p: 'text-wrap'\n  },\n  grid: {\n    classname: 'row',\n    columns: 12,\n    gutter: '1px',\n    offset: {\n      left: '15px',\n      right: '15px'\n    },\n    patterns: {\n      '6|6': 'col-6|col-6',\n      '4|4|4': 'col-4|col-4|col-4',\n      '3|3|3|3': 'col-3|col-3|col-3|col-3',\n      '2|2|2|2|2|2': 'col-2|col-2|col-2|col-2|col-2|col-2',\n      '3|6|3': 'col-3|col-6|col-3',\n      '2|8|2': 'col-2|col-8|col-2',\n      '5|7': 'col-5|col-7',\n      '7|5': 'col-7|col-5',\n      '4|8': 'col-4|col-8',\n      '8|4': 'col-8|col-4',\n      '3|9': 'col-3|col-9',\n      '9|3': 'col-9|col-3',\n      '2|10': 'col-2|col-10',\n      '10|2': 'col-10|col-2',\n      '12': 'col-12'\n    }\n  },\n  align: {\n    left: \"text-left\",\n    center: \"text-center\",\n    right: \"text-right\"\n  },\n  editor: {\n    minHeight: \"300px\"\n  },\n  image: {\n    upload: \"/media/upload-images\",\n    data: {\n      \"_token\": $('meta[name=\"csrf-token\"]').attr('content')\n    }\n  }\n};\nvar redactorConfig = {\n  buttons: ['html', 'undo', 'redo', 'format', 'bold', 'underline', 'italic', 'deleted', 'sup', 'sub', 'lists', 'file', 'link', 'image'],\n  style: false,\n  plugins: ['alignment'],\n  minHeight: '150px'\n};\nvar datePickerConfig = {\n  ranges: {\n    'Today': [moment(), moment()],\n    'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],\n    'Last 7 Days': [moment().subtract(6, 'days'), moment()],\n    'Last 30 Days': [moment().subtract(29, 'days'), moment()],\n    'This Month': [moment().startOf('month'), moment().endOf('month')],\n    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')],\n    'This Year': [moment().startOf('year'), moment().endOf('year')],\n    'Last Year': [moment().subtract(1, 'year').startOf('year'), moment().subtract(1, 'year').endOf('year')]\n  },\n  alwaysShowCalendars: true,\n  showCustomRangeLabel: false,\n  drops: \"auto\",\n  autoUpdateInput: false,\n  opens: \"center\",\n  locale: {\n    format: \"DD/MM/YYYY\"\n  }\n};\nvar tableLocale = {\n  emptyTable: \"Δεν υπάρχουν εγγραφές\",\n  info: \"_START_ έως _END_ απο τα _TOTAL_ αποτελέσματα\",\n  infoEmpty: \"0 απο 0 τα 0 αποτελέσματα\",\n  lengthMenu: \"_MENU_\",\n  loadingRecords: \"Φόρτωση ...\",\n  processing: \"Επεξεργασία ...\",\n  search: \"\",\n  searchPlaceholder: \"Αναζήτηση... \",\n  zeroRecords: \"Δεν βρέθηκαν αποτελέσματα\",\n  paginate: {\n    previous: \"<i class='mdi mdi-chevron-left'>\",\n    next: \"<i class='mdi mdi-chevron-right'>\"\n  },\n  infoFiltered: \"(Φιλτραρισμένα απο τις _MAX_ εγγραφές)\"\n}; //!GLOBAL FUNCTION\n//!============================================================\n\nfunction mainCheckboxSwitcher(main, minor) {\n  var bulkBtn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var status = true;\n  var counter = 0;\n  main.checked = true;\n\n  for (var i = 0; i < minor.length; i++) {\n    if (!minor[i].checked) {\n      minor[i].findParent(3).classList.remove(\"bg-selected\");\n      main.checked = false;\n    } else {\n      minor[i].findParent(3).classList.add(\"bg-selected\");\n      counter++;\n      status = false;\n    }\n  }\n\n  if (bulkBtn) {\n    bulkModifier(bulkBtn, status, counter);\n  }\n}\n\nfunction minorCheckboxSwitcher(main, minor) {\n  var bulkBtn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var counter = 0;\n  var status = true;\n\n  if (main.checked && minor.length > 0) {\n    counter = minor.length;\n    status = false;\n\n    for (var i = 0; i < minor.length; i++) {\n      minor[i].checked = true;\n      minor[i].findParent(3).classList.add(\"bg-selected\");\n    }\n  } else {\n    for (var i = 0; i < minor.length; i++) {\n      minor[i].checked = false;\n      minor[i].findParent(3).classList.remove(\"bg-selected\");\n    }\n  }\n\n  if (bulkBtn) {\n    bulkModifier(bulkBtn, status, counter);\n  }\n}\n\nfunction bulkModifier(bulkBtn, status, sum) {\n  var text = bulkBtn.dataset.text ? bulkBtn.dataset.text : \"Επιλογές\";\n  var enabledColor = bulkBtn.dataset.enabledColor ? bulkBtn.dataset.enabledColor : \"btn-warning\";\n  var disabledColor = bulkBtn.dataset.disabledColor ? bulkBtn.dataset.disabledColor : \"btn-secondary\";\n\n  if (status) {\n    bulkBtn.classList.remove(enabledColor);\n    bulkBtn.classList.add(disabledColor);\n    bulkBtn.textContent = \"\".concat(text, \" (0)  \");\n    bulkBtn.disabled = true;\n  } else {\n    bulkBtn.classList.remove(disabledColor);\n    bulkBtn.classList.add(enabledColor);\n    bulkBtn.textContent = \"\".concat(text, \"  (\").concat(sum, \")  \");\n    bulkBtn.disabled = false;\n  }\n}\n\nfunction filterStyle(input, value) {\n  if (value == \"\") {\n    input.classList.remove(\"select2-selected\");\n  } else {\n    input.classList.add(\"select2-selected\");\n  }\n}\n\nvar filterButton = function filterButton(attr, column, table, tableId) {\n  $(attr).detach().appendTo(tableId);\n  $(attr).on('change', function () {\n    table.columns(column).search(this.value).draw();\n  });\n};\n\nvar changeInputHidden = function changeInputHidden(attr, hiddenAttr) {\n  $(attr).change(function () {\n    if (attr == \"#activeMaterial\") {\n      this.value = $(this).prop('checked') == true ? 1 : 0;\n    }\n\n    var hiddenValue = $(hiddenAttr)[0].value = this.value;\n  });\n};\n\nfunction createStateSelect() {\n  var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var selectElm = document.createElement(\"select\");\n  selectElm.classList.add(\"ml-1\", \"select2\");\n  selectElm.id = id;\n  selectElm.innerHTML = \"\\n\\t\\t<option value=\\\"\\\">\\u038C\\u03BB\\u03B5\\u03C2 \\u03BF\\u03B9 \\u039A\\u03B1\\u03C4\\u03B1\\u03C3\\u03C4\\u03AC\\u03C3\\u03B5\\u03B9\\u03C2</option>\\n\\t\\t<option value=\\\"1\\\">\\u0395\\u03BD\\u03B5\\u03C1\\u03B3\\u03AC</option>\\n\\t\\t<option value=\\\"0\\\">\\u0391\\u03BD\\u03B5\\u03BD\\u03B5\\u03C1\\u03B3\\u03AC</option>\\n\\t\";\n  return selectElm;\n}\n\nfunction createDateElm(id) {\n  var input = document.createElement(\"input\");\n  input.classList.add(\"form-control\", \"date\", \"d-inline-block\", \"ml-1\", \"js-date-search\");\n  input.id = id;\n  input.dataset.toggle = \"date-picker\";\n  input.dataset.cancelClass = \"btn-secondary\";\n  input.style.height = \"31.96px\";\n  input.style.width = \"195px\";\n  input.placeholder = \"Επιλέξτε ημερομηνίες...\";\n  return input;\n}\n\nfunction createCourseTypeSelect() {\n  var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var selectElm = document.createElement(\"select\");\n  selectElm.classList.add(\"ml-1\", \"select2\");\n  selectElm.id = id;\n  selectElm.innerHTML = \"\\n\\t\\t<option value=\\\"\\\">\\u038C\\u03BB\\u03B5\\u03C2 \\u03BF\\u03B9 \\u0395\\u03BA\\u03B4\\u03CC\\u03C3\\u03B5\\u03B9\\u03C2</option>\\n\\t\\t<option value=\\\"Normal\\\">Normal</option>\\n\\t\\t<option value=\\\"Trial\\\">Trial</option>\\n\\t\";\n  return selectElm;\n}\n\nfunction startDate(input) {\n  var dateInput = input;\n\n  if (!dateInput || dateInput.value == \"\") {\n    return \"\";\n  }\n\n  var dateInputValue = dateInput.value.split(\" - \");\n  var firstDate = dateInputValue[0].split(\"/\").reverse().join(\"-\");\n  return firstDate;\n}\n\nfunction endDate(input) {\n  var dateInput = input;\n\n  if (!dateInput || dateInput.value == \"\") {\n    return \"\";\n  }\n\n  var dateInputValue = dateInput.value.split(\" - \");\n  var secondDate = dateInputValue[1].split(\"/\").reverse().join(\"-\");\n  return secondDate;\n}\n\nfunction resetBulk(bulkBtn, checkbox) {\n  var text = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"Επιλογές  (0)\";\n  bulkBtn.text(text);\n  bulkBtn.addClass(\"btn-secondary\");\n  bulkBtn.removeClass(\"btn-warning\");\n  bulkBtn.prop(\"disabled\", true);\n  checkbox.prop(\"checked\", false);\n}\n\nfunction resetAddButton(addBtn, checkbox) {\n  addBtn.text(\"Προσθήκη Επιλογών (0)\");\n  addBtn.addClass(\"btn-secondary\");\n  addBtn.removeClass(\"btn-primary\");\n  addBtn.prop(\"disabled\", true);\n  checkbox.prop(\"checked\", false);\n} //!##############################################\n//!\t\t\t\tMedia Library Functions\t\t\t#\n//!##############################################\n\n\nfunction paginationHandler(event) {\n  event.preventDefault();\n  var activePage = this.href.split(\"page=\")[1];\n  var search = $(\"#image-search\").val();\n  paginationRequest(activePage, search);\n}\n\nfunction searchHandler() {\n  clearTimeout(timer);\n\n  if (this.value.length < 3 || this.value == \"\") {\n    timer = setTimeout(paginationRequest, 800, 1, \"\");\n  } else {\n    timer = setTimeout(paginationRequest, 800, 1, this.value);\n  }\n}\n\nfunction imageHandler() {\n  var modal = $(\"#gallery-content\")[0];\n  var model = modal.dataset.model;\n  var modelId = modal.dataset.id;\n  var editorId = modal.dataset.editorId;\n  var type = modal.dataset.type;\n  var image = {\n    'img': {\n      url: \"\".concat(this.dataset.imageSource)\n    }\n  };\n\n  if (type == \"article\") {\n    ArticleEditor(editorId).image.insert(image);\n  } else if (type == \"redactor\") {\n    $R(editorId, 'insertion.insertHtml', \"<img class=\\\"img-fluid\\\" src=\\\"\".concat(this.dataset.imageSource, \"\\\" alt=\\\"\").concat(this.dataset.name, \"\\\" />\"));\n  } else if (type == \"gallery\") {\n    $(\"#remove-all-images-btn\").removeClass(\"d-none\");\n    addToGallery(model, modelId, this.dataset.imageId);\n    return;\n  } else {\n    changeCoverRequest(model, modelId, this.dataset.imageSource);\n  }\n\n  $(\"#gallery-modal\").modal('hide');\n}\n\nfunction paginationRequest(activePage, search) {\n  axios.get(\"/media/images\", {\n    params: {\n      page: activePage,\n      search: search\n    }\n  }).then(function (res) {\n    var gallery = $(\"#gallery-content\")[0];\n    gallery.innerHTML = res.data;\n    var pagination = gallery.getElementsByClassName(\"js-gallery-page-btn\");\n    var addBtns = gallery.getElementsByClassName(\"js-add-image\");\n\n    for (var i = 0; i < addBtns.length; i++) {\n      addBtns[i].removeEventListener(\"click\", imageHandler);\n      addBtns[i].addEventListener(\"click\", imageHandler);\n    }\n\n    for (var _i = 0; _i < pagination.length; _i++) {\n      pagination[_i].removeEventListener(\"click\", paginationHandler);\n\n      pagination[_i].addEventListener(\"click\", paginationHandler);\n    }\n  });\n}\n\nfunction changeCoverRequest(namespace, id, url) {\n  if (typeof id === \"undefined\" && namespace == \"App\\\\Models\\\\User\") {\n    var img = $(\"#cover-image\")[0];\n    var removeBtnCnt = $(\"#remove-cover-btn\").parent();\n    img.src = \"\".concat(url);\n    img.classList.remove(\"d-none\");\n    removeBtnCnt.removeClass(\"d-none\");\n    removeBtnCnt.addClass(\"d-flex\");\n    $(\"#custom-file\")[0].value = \"\".concat(url);\n  } else {\n    axios.patch(\"/media/cover/replace\", {\n      namespace: namespace,\n      id: id,\n      url: url\n    }).then(function (res) {\n      var img = $(\"#cover-image\")[0];\n      var removeBtnCnt = $(\"#remove-cover-btn\").parent();\n      img.src = res.data.imgUrl;\n      img.classList.remove(\"d-none\");\n      $(\"#change-cover-btn\").text(\"Αλλαγή\");\n      $(\"#cover-status\").addClass(\"d-none\");\n      removeBtnCnt.removeClass(\"d-none\");\n      removeBtnCnt.addClass(\"d-flex\");\n      toastAlert(\"success\", \"Το Cover άλλαξε!\");\n    })[\"catch\"](function (err) {\n      console.log(err);\n      toastAlert('error', \"Παρουσιάστηκε κάποιο πρόβλημα ...\");\n    });\n  }\n}\n\nfunction addToGallery(namespace, id, imageId) {\n  axios.post(\"/media/gallery\", {\n    namespace: namespace,\n    modelId: id,\n    ids: [imageId]\n  }).then(function (res) {\n    var gallery = $(\"#gallery-cnt\");\n    gallery.html(res.data);\n    var closeBtns = gallery.find(\".js-remove-image\");\n    closeBtns.on(\"click\", removeImageHandler);\n    toastAlert(\"success\", \"Η εικόνα προστέθηκε.\");\n    gallery.modal(\"hide\");\n    var bulk = $(\"#gallery-bulk-action-btn\");\n    var checkboxes = $(\".js-gallery-checkbox\");\n    resetGalleryBtns(bulk, checkboxes);\n  })[\"catch\"](function (err) {\n    console.log(err);\n    toastAlert('error', \"Παρουσιάστηκε κάποιο πρόβλημα ...\");\n  });\n}\n\nfunction removeImageHandler() {\n  var _this = this;\n\n  Swal.fire({\n    icon: 'info',\n    title: 'Προσοχή!',\n    text: 'Η εικόνα θα αφαιρεθεί απο το Gallery.',\n    showCancelButton: true,\n    confirmButtonColor: '#536de6',\n    confirmButtonText: \"\\u039D\\u03B1\\u03B9, \\u03B1\\u03C6\\u03B1\\u03AF\\u03C1\\u03B5\\u03C3\\u03B7!\",\n    cancelButtonText: \"Άκυρο\"\n  }).then(function (result) {\n    if (result.isConfirmed) {\n      removeImages([_this.dataset.imageId]);\n    }\n  });\n}\n\nfunction removeImages(ids) {\n  var gallery = $(\"#gallery-cnt\")[0];\n  var namespace = gallery.dataset.namespace;\n  var modelId = gallery.dataset.modelId;\n  axios.post(\"/media/gallery-remove\", {\n    namespace: namespace,\n    modelId: modelId,\n    ids: ids\n  }).then(function (res) {\n    var gallery = $(\"#gallery-cnt\");\n    gallery.html(res.data);\n    var closeBtns = gallery.find(\".js-remove-image\");\n    closeBtns.on(\"click\", removeImageHandler);\n\n    if (closeBtns.length == 0) {\n      $(\"#remove-all-images-btn\").addClass(\"d-none\");\n    }\n  })[\"catch\"](function (err) {\n    console.log(err);\n    utilities.toastAlert('error', \"Παρουσιάστηκε κάποιο πρόβλημα ...\");\n  });\n}\n\nfunction resetGalleryBtns(bulk, checkboxes) {\n  bulk.text(\"Επιλογές (0)\");\n  bulk.prop(\"disabled\", true);\n  bulk.removeClass(\"btn-warning\");\n  bulk.addClass(\"btn-secondary\");\n\n  for (var i = 0; i < checkboxes.length; i++) {\n    checkboxes[i].checked = false;\n  }\n} //!######################################################\n//!\t\t\t\tMedia Library Functions End\t\t\t\t#\n//!######################################################\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  toastAlert: toastAlert,\n  mainCheckboxSwitcher: mainCheckboxSwitcher,\n  minorCheckboxSwitcher: minorCheckboxSwitcher,\n  filterButton: filterButton,\n  tableLocale: tableLocale,\n  changeInputHidden: changeInputHidden,\n  redactorConfig: redactorConfig,\n  createStateSelect: createStateSelect,\n  datePickerConfig: datePickerConfig,\n  toastAlertDelete: toastAlertDelete,\n  filterStyle: filterStyle,\n  createDateElm: createDateElm,\n  startDate: startDate,\n  endDate: endDate,\n  resetBulk: resetBulk,\n  resetAddButton: resetAddButton,\n  createCourseTypeSelect: createCourseTypeSelect,\n  paginationHandler: paginationHandler,\n  searchHandler: searchHandler,\n  imageHandler: imageHandler,\n  paginationRequest: paginationRequest,\n  resetGalleryBtns: resetGalleryBtns,\n  removeImageHandler: removeImageHandler,\n  removeImages: removeImages,\n  articleConfig: articleConfig,\n  ALLOWEDTYPES: ALLOWEDTYPES\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/dashboard/main.js\n");

/***/ }),

/***/ 3:
/*!*************************************************************!*\
  !*** multi ./resources/js/dashboard/courses/coursesMain.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! C:\Users\arxi-\OneDrive\Υπολογιστής\web-developer\laravel-project\lmsdemo\resources\js\dashboard\courses\coursesMain.js */"./resources/js/dashboard/courses/coursesMain.js");


/***/ })

/******/ });